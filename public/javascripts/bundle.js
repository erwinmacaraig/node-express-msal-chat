/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./client.js":
/*!*******************!*\
  !*** ./client.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _azure_communication_chat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/communication-chat */ \"./node_modules/@azure/communication-chat/dist-esm/src/chatClient.js\");\n/* harmony import */ var _azure_communication_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/communication-common */ \"./node_modules/@azure/communication-common/dist-esm/src/communicationTokenCredential.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n\r\n\r\n// Your unique Azure Communication service endpoint\r\nlet endpointUrl = 'https://chatcommunicationservice.communication.azure.com';\r\nlet communicationUserId = document.getElementById('communicationUserId').value;\r\nlet userAccessToken = document.getElementById('accessToken').value;\r\nlet communicationUserName = document.getElementById('communicationUserName').value;\r\nlet threadId = document.getElementById('threadId').value;\r\nlet intConversationUserID = document.getElementById('intConversationUserID').value;\r\nlet accessexpiry = document.getElementById('accessexpiry').value;\r\n\r\nlet chatClient = new _azure_communication_chat__WEBPACK_IMPORTED_MODULE_1__.ChatClient(endpointUrl, new _azure_communication_common__WEBPACK_IMPORTED_MODULE_2__.AzureCommunicationTokenCredential(userAccessToken));\r\nconsole.log('Azure Communication Chat client created!');\r\n\r\nconst messages = document.getElementById('message');\r\nconst sendMessageRequest = {\r\n  content: ''\r\n};\r\nlet sendMessageOptions =\r\n{\r\n  senderDisplayName : communicationUserName,\r\n  type: 'text'\r\n};\r\nlet chatThreadClient;\r\n\r\n\r\n\r\n// ======================= FUNCTION ==================================\r\n\r\nasync function createChatThread() {\r\n    const createChatThreadRequest = {\r\n      topic: \"Testing Chat Thread\"\r\n    };\r\n    const createChatThreadOptions = {\r\n      participants: [\r\n        {\r\n          id: { communicationUserId: communicationUserId },\r\n          displayName: communicationUserName\r\n        }\r\n      ]\r\n    };\r\n    const createChatThreadResult = await chatClient.createChatThread(\r\n      createChatThreadRequest,\r\n      createChatThreadOptions\r\n    );\r\n    const threadId = createChatThreadResult.chatThread.id;\r\n    return threadId;\r\n}\r\n// =====================================================================\r\n/*\r\ncreateChatThread().then(async threadId => {\r\nconsole.log(`Thread created:${threadId}`);\r\n// PLACEHOLDERS\r\n// <CREATE CHAT THREAD CLIENT>\r\n// <RECEIVE A CHAT MESSAGE FROM A CHAT THREAD>\r\n// <SEND MESSAGE TO A CHAT THREAD>\r\n// <LIST MESSAGES IN A CHAT THREAD>\r\n// <ADD NEW PARTICIPANT TO THREAD>\r\n// <LIST PARTICIPANTS IN A THREAD>\r\n// <REMOVE PARTICIPANT FROM THREAD>\r\n});\r\n*/\r\n\r\n// =================== main ================================\r\n\r\n(async () => {\r\n\r\n\tchatThreadClient = chatClient.getChatThreadClient(threadId);\r\n\r\n// open notifications channel\r\nawait chatClient.startRealtimeNotifications();\r\n// subscribe to new notification\r\nchatClient.on(\"chatMessageReceived\", (e) => {\r\n  console.log(\"Notification chatMessageReceived!\");\r\n  console.log(e);\r\n  if (e.threadId == threadId) {\r\n\t  let str = messages.value;\r\n\t  const txt = str + '\\n' + e.senderDisplayName + ': ' + e.message;\r\n  \t  messages.textContent = txt;\r\n  }\r\n  // messages.val('\\n' + e.message);\r\n\r\n});\r\n\r\n})();\r\n\r\n\r\nconst btnSendMessage = document.getElementById(\"btnSendMessage\");\r\nbtnSendMessage.addEventListener(\"click\", async () => {\r\n    // messages.val('\\n' + 'TEST');\r\n    let toSendMsg = document.getElementById('messageToSend').value;\r\n    sendMessageRequest.content = toSendMsg;\r\n\tdocument.getElementById('messageToSend').value = '';\r\n    // const sendChatMessageResult = await chatThreadClient.sendMessage(sendMessageRequest, sendMessageOptions);\r\n    //\r\n\ttry {\r\n\t\tconst result = await axios__WEBPACK_IMPORTED_MODULE_0___default().post('/chat/echo', {\r\n\t\t\t\t\"threadId\": threadId,\r\n\t\t\t\t\"intConversationUserID\": intConversationUserID,\r\n\t\t\t\t\"message\": toSendMsg\r\n\t\t\t},{\r\n\t\t\t\t\"headers\": {\r\n\t\t\t\t\t'Access-Control-Allow-Origin': '*',\r\n\t\t\t\t\t'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, OPTIONS',\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t\"accesstoken\": userAccessToken,\r\n\t\t\t\t\t\"accessexpiry\": accessexpiry\r\n\t\t\t\t}\r\n\t\t});\r\n\r\n\t\tconsole.log(result);\r\n\t} catch(e) {\r\n\t\tconsole.log(e);\r\n\t}\r\n\r\n\r\n});\n\n//# sourceURL=webpack://webpuck/./client.js?");

/***/ }),

/***/ "./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AbortError\": () => (/* binding */ AbortError),\n/* harmony export */   \"AbortController\": () => (/* binding */ AbortController)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _AbortSignal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbortSignal */ \"./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nvar AbortError = /** @class */ (function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AbortError, _super);\n    function AbortError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"AbortError\";\n        return _this;\n    }\n    return AbortError;\n}(Error));\n\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * Abort an operation when another event fires\n * ```ts\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n * ```\n *\n * @example\n * Share aborter cross multiple operations in 30s\n * ```ts\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *```\n *\n * @example\n * Cascaded aborting\n * ```ts\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * ```\n */\nvar AbortController = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    function AbortController(parentSignals) {\n        var _this = this;\n        this._signal = new _AbortSignal__WEBPACK_IMPORTED_MODULE_1__.AbortSignal();\n        if (!parentSignals) {\n            return;\n        }\n        // coerce parentSignals into an array\n        if (!Array.isArray(parentSignals)) {\n            // eslint-disable-next-line prefer-rest-params\n            parentSignals = arguments;\n        }\n        for (var _i = 0, parentSignals_1 = parentSignals; _i < parentSignals_1.length; _i++) {\n            var parentSignal = parentSignals_1[_i];\n            // if the parent signal has already had abort() called,\n            // then call abort on this signal as well.\n            if (parentSignal.aborted) {\n                this.abort();\n            }\n            else {\n                // when the parent signal aborts, this signal should as well.\n                parentSignal.addEventListener(\"abort\", function () {\n                    _this.abort();\n                });\n            }\n        }\n    }\n    Object.defineProperty(AbortController.prototype, \"signal\", {\n        /**\n         * The AbortSignal associated with this controller that will signal aborted\n         * when the abort method is called on this controller.\n         *\n         * @readonly\n         */\n        get: function () {\n            return this._signal;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Signal that any operations passed this controller's associated abort signal\n     * to cancel any remaining work and throw an `AbortError`.\n     */\n    AbortController.prototype.abort = function () {\n        (0,_AbortSignal__WEBPACK_IMPORTED_MODULE_1__.abortSignal)(this._signal);\n    };\n    /**\n     * Creates a new AbortSignal instance that will abort after the provided ms.\n     * @param ms - Elapsed time in milliseconds to trigger an abort.\n     */\n    AbortController.timeout = function (ms) {\n        var signal = new _AbortSignal__WEBPACK_IMPORTED_MODULE_1__.AbortSignal();\n        var timer = setTimeout(_AbortSignal__WEBPACK_IMPORTED_MODULE_1__.abortSignal, ms, signal);\n        // Prevent the active Timer from keeping the Node.js event loop active.\n        if (typeof timer.unref === \"function\") {\n            timer.unref();\n        }\n        return signal;\n    };\n    return AbortController;\n}());\n\n//# sourceMappingURL=AbortController.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js?");

/***/ }),

/***/ "./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AbortSignal\": () => (/* binding */ AbortSignal),\n/* harmony export */   \"abortSignal\": () => (/* binding */ abortSignal)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar listenersMap = new WeakMap();\nvar abortedMap = new WeakMap();\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * Abort without timeout\n * ```ts\n * await doAsyncWork(AbortSignal.none);\n * ```\n */\nvar AbortSignal = /** @class */ (function () {\n    function AbortSignal() {\n        /**\n         * onabort event listener.\n         */\n        this.onabort = null;\n        listenersMap.set(this, []);\n        abortedMap.set(this, false);\n    }\n    Object.defineProperty(AbortSignal.prototype, \"aborted\", {\n        /**\n         * Status of whether aborted or not.\n         *\n         * @readonly\n         */\n        get: function () {\n            if (!abortedMap.has(this)) {\n                throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n            }\n            return abortedMap.get(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbortSignal, \"none\", {\n        /**\n         * Creates a new AbortSignal instance that will never be aborted.\n         *\n         * @readonly\n         */\n        get: function () {\n            return new AbortSignal();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Added new \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param _type - Only support \"abort\" event\n     * @param listener - The listener to be added\n     */\n    AbortSignal.prototype.addEventListener = function (\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        if (!listenersMap.has(this)) {\n            throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n        }\n        var listeners = listenersMap.get(this);\n        listeners.push(listener);\n    };\n    /**\n     * Remove \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param _type - Only support \"abort\" event\n     * @param listener - The listener to be removed\n     */\n    AbortSignal.prototype.removeEventListener = function (\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        if (!listenersMap.has(this)) {\n            throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n        }\n        var listeners = listenersMap.get(this);\n        var index = listeners.indexOf(listener);\n        if (index > -1) {\n            listeners.splice(index, 1);\n        }\n    };\n    /**\n     * Dispatches a synthetic event to the AbortSignal.\n     */\n    AbortSignal.prototype.dispatchEvent = function (_event) {\n        throw new Error(\"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\");\n    };\n    return AbortSignal;\n}());\n\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @internal\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nfunction abortSignal(signal) {\n    if (signal.aborted) {\n        return;\n    }\n    if (signal.onabort) {\n        signal.onabort.call(signal);\n    }\n    var listeners = listenersMap.get(signal);\n    if (listeners) {\n        // Create a copy of listeners so mutations to the array\n        // (e.g. via removeListener calls) don't affect the listeners\n        // we invoke.\n        listeners.slice().forEach(function (listener) {\n            listener.call(signal, { type: \"abort\" });\n        });\n    }\n    abortedMap.set(signal, true);\n}\n//# sourceMappingURL=AbortSignal.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/chatClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/chatClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChatClient\": () => (/* binding */ ChatClient)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _models_mappers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./models/mappers */ \"./node_modules/@azure/communication-chat/dist-esm/src/models/mappers.js\");\n/* harmony import */ var _generated_src__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./generated/src */ \"./node_modules/@azure/communication-chat/dist-esm/src/generated/src/chatApiClient.js\");\n/* harmony import */ var _chatThreadClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chatThreadClient */ \"./node_modules/@azure/communication-chat/dist-esm/src/chatThreadClient.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js\");\n/* harmony import */ var _credential_communicationTokenCredentialPolicy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./credential/communicationTokenCredentialPolicy */ \"./node_modules/@azure/communication-chat/dist-esm/src/credential/communicationTokenCredentialPolicy.js\");\n/* harmony import */ var _tracing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tracing */ \"./node_modules/@azure/communication-chat/dist-esm/src/tracing.js\");\n/* harmony import */ var _models_uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./models/uuid */ \"./node_modules/@azure/communication-chat/dist-esm/src/models/uuid.js\");\n/* harmony import */ var _signaling_signalingClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./signaling/signalingClient */ \"./node_modules/@azure/communication-chat/dist-esm/src/signaling/signalingClient.browser.js\");\n/* harmony import */ var _models_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models/logger */ \"./node_modules/@azure/communication-chat/dist-esm/src/models/logger.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/// <reference lib=\"esnext.asynciterable\" />\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The client to do chat operations\n */\nclass ChatClient {\n    /**\n     * Creates an instance of the ChatClient for a given resource and user.\n     *\n     * @param endpoint - The url of the Communication Services resouce.\n     * @param credential - The token credential. Use AzureCommunicationTokenCredential from \\@azure/communication-common to create a credential.\n     * @param options - Additional client options.\n     */\n    constructor(endpoint, credential, options = {}) {\n        this.endpoint = endpoint;\n        this.signalingClient = undefined;\n        this.emitter = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();\n        this.isRealtimeNotificationsStarted = false;\n        this.tokenCredential = credential;\n        this.clientOptions = Object.assign({}, options);\n        const internalPipelineOptions = Object.assign(Object.assign({}, options), {\n            loggingOptions: {\n                logger: _models_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info,\n            },\n        });\n        this.client = new _generated_src__WEBPACK_IMPORTED_MODULE_2__.ChatApiClient(this.endpoint, Object.assign({ endpoint: this.endpoint }, internalPipelineOptions));\n        const authPolicy = (0,_credential_communicationTokenCredentialPolicy__WEBPACK_IMPORTED_MODULE_3__.createCommunicationTokenCredentialPolicy)(this.tokenCredential);\n        this.client.pipeline.addPolicy(authPolicy);\n        this.signalingClient = (0,_signaling_signalingClient__WEBPACK_IMPORTED_MODULE_4__.getSignalingClient)(credential, _models_logger__WEBPACK_IMPORTED_MODULE_1__.logger, options.signalingClientOptions);\n    }\n    /**\n     * Returns ChatThreadClient with the specific thread id.\n     * @param threadId - Thread ID for the ChatThreadClient\n     */\n    getChatThreadClient(threadId) {\n        return new _chatThreadClient__WEBPACK_IMPORTED_MODULE_5__.ChatThreadClient(this.endpoint, threadId, this.tokenCredential, this.clientOptions);\n    }\n    /**\n     * Creates a chat thread.\n     * Returns thread client with the id of the created thread.\n     * @param request - Request for creating a chat thread.\n     * @param options - Operation options.\n     */\n    async createChatThread(request, options = {}) {\n        var _a, _b;\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_6__.createSpan)(\"ChatClient-CreateChatThread\", options);\n        try {\n            // We generate an UUID if the user does not provide an idempotencyToken value\n            updatedOptions.idempotencyToken = (_a = updatedOptions.idempotencyToken) !== null && _a !== void 0 ? _a : (0,_models_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)();\n            const updatedRestModelOptions = (0,_models_mappers__WEBPACK_IMPORTED_MODULE_8__.mapToCreateChatThreadOptionsRestModel)(updatedOptions);\n            const result = await this.client.chat.createChatThread({\n                topic: request.topic,\n                participants: (_b = options.participants) === null || _b === void 0 ? void 0 : _b.map((participant) => (0,_models_mappers__WEBPACK_IMPORTED_MODULE_8__.mapToChatParticipantRestModel)(participant)),\n            }, updatedRestModelOptions);\n            return (0,_models_mappers__WEBPACK_IMPORTED_MODULE_8__.mapToCreateChatThreadResultSdkModel)(result);\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_9__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    listChatThreadsPage(continuationState, options = {}) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__asyncGenerator)(this, arguments, function* listChatThreadsPage_1() {\n            if (!continuationState.continuationToken) {\n                const currentSetResponse = yield (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__await)(this.client.chat.listChatThreads(options));\n                continuationState.continuationToken = currentSetResponse.nextLink;\n                if (currentSetResponse.value) {\n                    yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__await)(currentSetResponse.value);\n                }\n            }\n            while (continuationState.continuationToken) {\n                const currentSetResponse = yield (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__await)(this.client.chat.listChatThreadsNext(continuationState.continuationToken, options));\n                continuationState.continuationToken = currentSetResponse.nextLink;\n                if (currentSetResponse.value) {\n                    yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__await)(currentSetResponse.value);\n                }\n                else {\n                    break;\n                }\n            }\n        });\n    }\n    listChatThreadsAll(options) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__asyncGenerator)(this, arguments, function* listChatThreadsAll_1() {\n            var e_1, _a;\n            try {\n                for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__asyncValues)(this.listChatThreadsPage({}, options)), _c; _c = yield (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__await)(_b.next()), !_c.done;) {\n                    const page = _c.value;\n                    yield (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__await)(yield* (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__asyncDelegator)((0,tslib__WEBPACK_IMPORTED_MODULE_10__.__asyncValues)(page)));\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__await)(_a.call(_b));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n    /**\n     * Gets the list of chat threads of a user.\n     * @param options - List chat threads options.\n     */\n    listChatThreads(options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_6__.createSpan)(\"ChatClient-ListChatThreads\", options);\n        try {\n            const iter = this.listChatThreadsAll(updatedOptions);\n            return {\n                next() {\n                    return iter.next();\n                },\n                [Symbol.asyncIterator]() {\n                    return this;\n                },\n                byPage: (settings = {}) => {\n                    return this.listChatThreadsPage(settings, updatedOptions);\n                },\n            };\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_9__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Deletes a chat thread.\n     * @param threadId - The ID of the thread to delete.\n     * @param options -  Operation options.\n     */\n    async deleteChatThread(threadId, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_6__.createSpan)(\"ChatClient-DeleteChatThread\", options);\n        try {\n            await this.client.chat.deleteChatThread(threadId, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_9__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Start receiving realtime notifications.\n     * Call this function before subscribing to any event.\n     */\n    async startRealtimeNotifications() {\n        if (this.signalingClient === undefined) {\n            throw new Error(\"Realtime notifications are not supported in node js.\");\n        }\n        if (this.isRealtimeNotificationsStarted) {\n            return;\n        }\n        this.isRealtimeNotificationsStarted = true;\n        await this.signalingClient.start();\n        this.subscribeToSignalingEvents();\n    }\n    /**\n     * Stop receiving realtime notifications.\n     * This function would unsubscribe to all events.\n     */\n    async stopRealtimeNotifications() {\n        if (this.signalingClient === undefined) {\n            throw new Error(\"Realtime notifications are not supported in node js.\");\n        }\n        this.isRealtimeNotificationsStarted = false;\n        await this.signalingClient.stop();\n        this.emitter.removeAllListeners();\n    }\n    on(event, listener) {\n        if (this.signalingClient === undefined) {\n            throw new Error(\"Realtime notifications are only supported in the browser.\");\n        }\n        if (!this.isRealtimeNotificationsStarted &&\n            event !== \"realTimeNotificationConnected\" &&\n            event !== \"realTimeNotificationDisconnected\") {\n            throw new Error(\"You must call startRealtimeNotifications before you can subscribe to events.\");\n        }\n        this.emitter.on(event, listener);\n    }\n    off(event, listener) {\n        if (this.signalingClient === undefined) {\n            throw new Error(\"Realtime notifications are only supported in the browser.\");\n        }\n        this.emitter.removeListener(event, listener);\n    }\n    subscribeToSignalingEvents() {\n        if (this.signalingClient === undefined) {\n            throw new Error(\"Realtime notifications are only supported in the browser.\");\n        }\n        this.signalingClient.on(\"connectionChanged\", (payload) => {\n            if (payload === 2 /* Connected */) {\n                this.emitter.emit(\"realTimeNotificationConnected\");\n            }\n            else if (payload === 3 /* Disconnected */) {\n                this.emitter.emit(\"realTimeNotificationDisconnected\");\n            }\n        });\n        this.signalingClient.on(\"chatMessageReceived\", (payload) => {\n            this.emitter.emit(\"chatMessageReceived\", payload);\n        });\n        this.signalingClient.on(\"chatMessageEdited\", (payload) => {\n            this.emitter.emit(\"chatMessageEdited\", payload);\n        });\n        this.signalingClient.on(\"chatMessageDeleted\", (payload) => {\n            this.emitter.emit(\"chatMessageDeleted\", payload);\n        });\n        this.signalingClient.on(\"typingIndicatorReceived\", (payload) => {\n            this.emitter.emit(\"typingIndicatorReceived\", payload);\n        });\n        this.signalingClient.on(\"readReceiptReceived\", (payload) => {\n            this.emitter.emit(\"readReceiptReceived\", payload);\n        });\n        this.signalingClient.on(\"chatThreadCreated\", (payload) => {\n            this.emitter.emit(\"chatThreadCreated\", payload);\n        });\n        this.signalingClient.on(\"chatThreadDeleted\", (payload) => {\n            this.emitter.emit(\"chatThreadDeleted\", payload);\n        });\n        this.signalingClient.on(\"chatThreadPropertiesUpdated\", (payload) => {\n            this.emitter.emit(\"chatThreadPropertiesUpdated\", payload);\n        });\n        this.signalingClient.on(\"participantsAdded\", (payload) => {\n            this.emitter.emit(\"participantsAdded\", payload);\n        });\n        this.signalingClient.on(\"participantsRemoved\", (payload) => {\n            this.emitter.emit(\"participantsRemoved\", payload);\n        });\n    }\n}\n//# sourceMappingURL=chatClient.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/chatClient.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/chatThreadClient.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/chatThreadClient.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChatThreadClient\": () => (/* binding */ ChatThreadClient)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _models_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models/logger */ \"./node_modules/@azure/communication-chat/dist-esm/src/models/logger.js\");\n/* harmony import */ var _azure_communication_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/communication-common */ \"./node_modules/@azure/communication-common/dist-esm/src/identifierModelSerializer.js\");\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js\");\n/* harmony import */ var _tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tracing */ \"./node_modules/@azure/communication-chat/dist-esm/src/tracing.js\");\n/* harmony import */ var _models_mappers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./models/mappers */ \"./node_modules/@azure/communication-chat/dist-esm/src/models/mappers.js\");\n/* harmony import */ var _generated_src__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generated/src */ \"./node_modules/@azure/communication-chat/dist-esm/src/generated/src/chatApiClient.js\");\n/* harmony import */ var _credential_communicationTokenCredentialPolicy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./credential/communicationTokenCredentialPolicy */ \"./node_modules/@azure/communication-chat/dist-esm/src/credential/communicationTokenCredentialPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\nconst minimumTypingIntervalInMilliSeconds = 8000;\n/**\n * The client to do chat operations\n */\nclass ChatThreadClient {\n    constructor(endpoint, threadId, credential, options = {}) {\n        this.endpoint = endpoint;\n        this.timeOfLastTypingRequest = undefined;\n        this.threadId = threadId;\n        this.tokenCredential = credential;\n        const internalPipelineOptions = Object.assign(Object.assign({}, options), {\n            loggingOptions: {\n                logger: _models_logger__WEBPACK_IMPORTED_MODULE_0__.logger.info,\n            },\n        });\n        this.client = new _generated_src__WEBPACK_IMPORTED_MODULE_1__.ChatApiClient(this.endpoint, Object.assign({ endpoint: this.endpoint }, internalPipelineOptions));\n        const authPolicy = (0,_credential_communicationTokenCredentialPolicy__WEBPACK_IMPORTED_MODULE_2__.createCommunicationTokenCredentialPolicy)(this.tokenCredential);\n        this.client.pipeline.addPolicy(authPolicy);\n    }\n    /**\n     * Gets a chat thread.\n     * Returns the chat thread.\n     * @param options -  Operation options.\n     */\n    async getProperties(options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatClient-GetProperties\", options);\n        try {\n            const result = await this.client.chatThread.getChatThreadProperties(this.threadId, updatedOptions);\n            return (0,_models_mappers__WEBPACK_IMPORTED_MODULE_4__.mapToChatThreadPropertiesSdkModel)(result);\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Updates a thread's topic.\n     * @param topic - The topic needs to be updated to.\n     * @param options - Operation options.\n     */\n    async updateTopic(topic, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-UpdateTopic\", options);\n        try {\n            await this.client.chatThread.updateChatThreadProperties(this.threadId, { topic: topic }, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sends a chat message to a thread identified by threadId.\n     * Returns the id of the created message.\n     * @param request - Request for sending a message.\n     * @param options - Operation options.\n     */\n    async sendMessage(request, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-SendMessage\", options);\n        try {\n            // reset typing notification clock\n            this.timeOfLastTypingRequest = undefined;\n            const result = await this.client.chatThread.sendChatMessage(this.threadId, Object.assign(Object.assign({}, request), options), updatedOptions);\n            return result;\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Gets a chat message identified by messageId.\n     * Returns the specific message.\n     * @param messageId - The message id of the message.\n     * @param options - Operation options.\n     */\n    async getMessage(messageId, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-GetMessage\", options);\n        try {\n            const result = await this.client.chatThread.getChatMessage(this.threadId, messageId, updatedOptions);\n            return (0,_models_mappers__WEBPACK_IMPORTED_MODULE_4__.mapToChatMessageSdkModel)(result);\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    listMessagesPage(pageSettings, options = {}) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncGenerator)(this, arguments, function* listMessagesPage_1() {\n            if (!pageSettings.continuationToken) {\n                const currentSetResponse = yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(this.client.chatThread.listChatMessages(this.threadId, options));\n                pageSettings.continuationToken = currentSetResponse.nextLink;\n                if (currentSetResponse.value) {\n                    yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(currentSetResponse.value.map(_models_mappers__WEBPACK_IMPORTED_MODULE_4__.mapToChatMessageSdkModel, this));\n                }\n            }\n            while (pageSettings.continuationToken) {\n                const currentSetResponse = yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(this.client.chatThread.listChatMessagesNext(this.threadId, pageSettings.continuationToken, options));\n                pageSettings.continuationToken = currentSetResponse.nextLink;\n                if (currentSetResponse.value) {\n                    yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(currentSetResponse.value.map(_models_mappers__WEBPACK_IMPORTED_MODULE_4__.mapToChatMessageSdkModel, this));\n                }\n                else {\n                    break;\n                }\n            }\n        });\n    }\n    listMessagesAll(options) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncGenerator)(this, arguments, function* listMessagesAll_1() {\n            var e_1, _a;\n            try {\n                for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncValues)(this.listMessagesPage({}, options)), _c; _c = yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(_b.next()), !_c.done;) {\n                    const page = _c.value;\n                    yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(yield* (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncDelegator)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncValues)(page)));\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(_a.call(_b));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n    /**\n     * Gets a list of message from a thread identified by threadId.\n     * Returns the list of the messages.\n     * @param options - Get messages options.\n     */\n    listMessages(options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-ListMessages\", options);\n        try {\n            const iter = this.listMessagesAll(updatedOptions);\n            return {\n                next() {\n                    return iter.next();\n                },\n                [Symbol.asyncIterator]() {\n                    return this;\n                },\n                byPage: (settings = {}) => {\n                    return this.listMessagesPage(settings, updatedOptions);\n                },\n            };\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Deletes a message identified by threadId and messageId\n     * @param messageId - The message id of the message.\n     * @param options - Operation options.\n     */\n    async deleteMessage(messageId, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-DeleteMessage\", options);\n        try {\n            await this.client.chatThread.deleteChatMessage(this.threadId, messageId, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Updates a message identified by threadId and messageId\n     * @param messageId - The message id of the message.\n     * @param options - Operation options.\n     */\n    async updateMessage(messageId, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-UpdateMessage\", options);\n        try {\n            await this.client.chatThread.updateChatMessage(this.threadId, messageId, options, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Adds the details of chat participants belonging to the thread identified by threadId.\n     * @param request - Thread participants' details to add in the thread roster\n     * @param options - Operation options.\n     */\n    async addParticipants(request, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-AddParticipants\", options);\n        try {\n            const result = await this.client.chatThread.addChatParticipants(this.threadId, (0,_models_mappers__WEBPACK_IMPORTED_MODULE_4__.mapToAddChatParticipantsRequestRestModel)(request), updatedOptions);\n            return result;\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    listParticipantsPage(continuationState, options = {}) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncGenerator)(this, arguments, function* listParticipantsPage_1() {\n            if (!continuationState.continuationToken) {\n                const currentSetResponse = yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(this.client.chatThread.listChatParticipants(this.threadId, options));\n                continuationState.continuationToken = currentSetResponse.nextLink;\n                if (currentSetResponse.value) {\n                    yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(currentSetResponse.value.map(_models_mappers__WEBPACK_IMPORTED_MODULE_4__.mapToChatParticipantSdkModel, this));\n                }\n            }\n            while (continuationState.continuationToken) {\n                const currentSetResponse = yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(this.client.chatThread.listChatParticipantsNext(this.threadId, continuationState.continuationToken, options));\n                continuationState.continuationToken = currentSetResponse.nextLink;\n                if (currentSetResponse.value) {\n                    yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(currentSetResponse.value.map(_models_mappers__WEBPACK_IMPORTED_MODULE_4__.mapToChatParticipantSdkModel, this));\n                }\n                else {\n                    break;\n                }\n            }\n        });\n    }\n    listParticipantsAll(options) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncGenerator)(this, arguments, function* listParticipantsAll_1() {\n            var e_2, _a;\n            try {\n                for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncValues)(this.listParticipantsPage({}, options)), _c; _c = yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(_b.next()), !_c.done;) {\n                    const page = _c.value;\n                    yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(yield* (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncDelegator)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncValues)(page)));\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(_a.call(_b));\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        });\n    }\n    /**\n     * Gets the participants of the thread identified by threadId.\n     * Returns the lists of the participants.\n     * @param options - Operation options.\n     */\n    listParticipants(options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-ListParticipants\", options);\n        try {\n            const iter = this.listParticipantsAll(updatedOptions);\n            return {\n                next() {\n                    return iter.next();\n                },\n                [Symbol.asyncIterator]() {\n                    return this;\n                },\n                byPage: (settings = {}) => {\n                    return this.listParticipantsPage(settings, updatedOptions);\n                },\n            };\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Removes participant from the thread identified by threadId.\n     * @param participant - Thread participant to remove from the thread roster\n     * @param options - Operation options.\n     */\n    async removeParticipant(participant, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-RemoveParticipant\", options);\n        try {\n            await this.client.chatThread.removeChatParticipant(this.threadId, (0,_azure_communication_common__WEBPACK_IMPORTED_MODULE_7__.serializeCommunicationIdentifier)(participant), updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sends a typing notification to the thread.\n     * Doesn't attempt to send if the time since last notification is smaller than the minimum typing interval\n     * @param options - - Operation options\n     * @returns True if the typing message notification could be sent, otherwise false.\n     */\n    async sendTypingNotification(options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-SendTypingNotification\", options);\n        try {\n            const dateNow = new Date();\n            const { senderDisplayName } = updatedOptions, restOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__rest)(updatedOptions, [\"senderDisplayName\"]);\n            if (this.canPostTypingNotification(dateNow)) {\n                this.timeOfLastTypingRequest = dateNow;\n                await this.client.chatThread.sendTypingNotification(this.threadId, Object.assign({ sendTypingNotificationRequest: { senderDisplayName: senderDisplayName } }, restOptions));\n                return true;\n            }\n            _models_logger__WEBPACK_IMPORTED_MODULE_0__.logger.info(`Typing Notification NOT Send. [thread_id=${this.threadId}]`);\n            return false;\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sends a read receipt to the thread identified by threadId.\n     * @param messageId - The message id of the message that user latest read.\n     * @param request - Request for sending a read receipt\n     * @param options - Operation options.\n     */\n    async sendReadReceipt(request, options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-SendReadReceipt\", options);\n        try {\n            await this.client.chatThread.sendChatReadReceipt(this.threadId, request, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    listReadReceiptsPage(continuationState, options = {}) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncGenerator)(this, arguments, function* listReadReceiptsPage_1() {\n            if (!continuationState.continuationToken) {\n                const currentSetResponse = yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(this.client.chatThread.listChatReadReceipts(this.threadId, options));\n                continuationState.continuationToken = currentSetResponse.nextLink;\n                if (currentSetResponse.value) {\n                    yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(currentSetResponse.value.map(_models_mappers__WEBPACK_IMPORTED_MODULE_4__.mapToReadReceiptSdkModel, this));\n                }\n            }\n            while (continuationState.continuationToken) {\n                const currentSetResponse = yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(this.client.chatThread.listChatReadReceiptsNext(this.threadId, continuationState.continuationToken, options));\n                continuationState.continuationToken = currentSetResponse.nextLink;\n                if (currentSetResponse.value) {\n                    yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(currentSetResponse.value.map(_models_mappers__WEBPACK_IMPORTED_MODULE_4__.mapToReadReceiptSdkModel, this));\n                }\n                else {\n                    break;\n                }\n            }\n        });\n    }\n    listReadReceiptsAll(options) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncGenerator)(this, arguments, function* listReadReceiptsAll_1() {\n            var e_3, _a;\n            try {\n                for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncValues)(this.listReadReceiptsPage({}, options)), _c; _c = yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(_b.next()), !_c.done;) {\n                    const page = _c.value;\n                    yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(yield* (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncDelegator)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__asyncValues)(page)));\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__await)(_a.call(_b));\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        });\n    }\n    /**\n     * Gets a list of read receipt from a thread identified by threadId.\n     * Returns the list of the messages.\n     * @param options - Get messages options.\n     */\n    listReadReceipts(options = {}) {\n        const { span, updatedOptions } = (0,_tracing__WEBPACK_IMPORTED_MODULE_3__.createSpan)(\"ChatThreadClient-ListChatReadReceipts\", options);\n        try {\n            const iter = this.listReadReceiptsAll(updatedOptions);\n            return {\n                next() {\n                    return iter.next();\n                },\n                [Symbol.asyncIterator]() {\n                    return this;\n                },\n                byPage: (settings = {}) => {\n                    return this.listReadReceiptsPage(settings, updatedOptions);\n                },\n            };\n        }\n        catch (e) {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_5__.SpanStatusCode.ERROR,\n                message: e.message,\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    canPostTypingNotification(dateNow) {\n        if (this.timeOfLastTypingRequest) {\n            const timeSinceLastRequestInMilliSeconds = dateNow.getTime() - this.timeOfLastTypingRequest.getTime();\n            if (timeSinceLastRequestInMilliSeconds < minimumTypingIntervalInMilliSeconds) {\n                _models_logger__WEBPACK_IMPORTED_MODULE_0__.logger.info(`Typing interval check failed. [last_request=${this.timeOfLastTypingRequest}]`);\n                return false;\n            }\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=chatThreadClient.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/chatThreadClient.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/credential/communicationTokenCredentialPolicy.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/credential/communicationTokenCredentialPolicy.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCommunicationTokenCredentialPolicy\": () => (/* binding */ createCommunicationTokenCredentialPolicy)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Creates a new CommunicationTokenCredentialPolicy factory.\n *\n * @param credential - The CommunicationTokenCredential implementation that can supply the user credential.\n */\nconst createCommunicationTokenCredentialPolicy = (credential) => {\n    const policyOptions = {\n        credential: {\n            getToken: (_scopes, options) => credential.getToken({ abortSignal: options === null || options === void 0 ? void 0 : options.abortSignal }),\n        },\n        scopes: [],\n    };\n    return (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.bearerTokenAuthenticationPolicy)(policyOptions);\n};\n//# sourceMappingURL=communicationTokenCredentialPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/credential/communicationTokenCredentialPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/generated/src/chatApiClient.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/generated/src/chatApiClient.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChatApiClient\": () => (/* binding */ ChatApiClient)\n/* harmony export */ });\n/* harmony import */ var _operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operations */ \"./node_modules/@azure/communication-chat/dist-esm/src/generated/src/operations/chatThread.js\");\n/* harmony import */ var _operations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operations */ \"./node_modules/@azure/communication-chat/dist-esm/src/generated/src/operations/chat.js\");\n/* harmony import */ var _chatApiClientContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chatApiClientContext */ \"./node_modules/@azure/communication-chat/dist-esm/src/generated/src/chatApiClientContext.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\nclass ChatApiClient extends _chatApiClientContext__WEBPACK_IMPORTED_MODULE_0__.ChatApiClientContext {\n    /**\n     * Initializes a new instance of the ChatApiClient class.\n     * @param endpoint The endpoint of the Azure Communication resource.\n     * @param options The parameter options\n     */\n    constructor(endpoint, options) {\n        super(endpoint, options);\n        this.chatThread = new _operations__WEBPACK_IMPORTED_MODULE_1__.ChatThreadImpl(this);\n        this.chat = new _operations__WEBPACK_IMPORTED_MODULE_2__.ChatImpl(this);\n    }\n}\n//# sourceMappingURL=chatApiClient.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/generated/src/chatApiClient.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/generated/src/chatApiClientContext.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/generated/src/chatApiClientContext.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChatApiClientContext\": () => (/* binding */ ChatApiClientContext)\n/* harmony export */ });\n/* harmony import */ var _azure_core_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-client */ \"./node_modules/@azure/core-client/dist-esm/src/serviceClient.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nclass ChatApiClientContext extends _azure_core_client__WEBPACK_IMPORTED_MODULE_0__.ServiceClient {\n    /**\n     * Initializes a new instance of the ChatApiClientContext class.\n     * @param endpoint The endpoint of the Azure Communication resource.\n     * @param options The parameter options\n     */\n    constructor(endpoint, options) {\n        if (endpoint === undefined) {\n            throw new Error(\"'endpoint' cannot be null\");\n        }\n        // Initializing default values for options\n        if (!options) {\n            options = {};\n        }\n        const defaults = {\n            requestContentType: \"application/json; charset=utf-8\"\n        };\n        const packageDetails = `azsdk-js-azure-communication-chat/1.1.2`;\n        const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n            ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n            : `${packageDetails}`;\n        const optionsWithDefaults = Object.assign(Object.assign(Object.assign({}, defaults), options), { userAgentOptions: {\n                userAgentPrefix\n            }, baseUri: options.endpoint || \"{endpoint}\" });\n        super(optionsWithDefaults);\n        // Parameter assignments\n        this.endpoint = endpoint;\n        // Assigning values to Constant parameters\n        this.apiVersion = options.apiVersion || \"2021-09-07\";\n    }\n}\n//# sourceMappingURL=chatApiClientContext.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/generated/src/chatApiClientContext.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/mappers.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/mappers.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChatMessageReadReceiptsCollection\": () => (/* binding */ ChatMessageReadReceiptsCollection),\n/* harmony export */   \"ChatMessageReadReceipt\": () => (/* binding */ ChatMessageReadReceipt),\n/* harmony export */   \"CommunicationIdentifierModel\": () => (/* binding */ CommunicationIdentifierModel),\n/* harmony export */   \"CommunicationUserIdentifierModel\": () => (/* binding */ CommunicationUserIdentifierModel),\n/* harmony export */   \"PhoneNumberIdentifierModel\": () => (/* binding */ PhoneNumberIdentifierModel),\n/* harmony export */   \"MicrosoftTeamsUserIdentifierModel\": () => (/* binding */ MicrosoftTeamsUserIdentifierModel),\n/* harmony export */   \"CommunicationErrorResponse\": () => (/* binding */ CommunicationErrorResponse),\n/* harmony export */   \"ChatError\": () => (/* binding */ ChatError),\n/* harmony export */   \"SendReadReceiptRequest\": () => (/* binding */ SendReadReceiptRequest),\n/* harmony export */   \"SendChatMessageRequest\": () => (/* binding */ SendChatMessageRequest),\n/* harmony export */   \"SendChatMessageResult\": () => (/* binding */ SendChatMessageResult),\n/* harmony export */   \"ChatMessagesCollection\": () => (/* binding */ ChatMessagesCollection),\n/* harmony export */   \"ChatMessage\": () => (/* binding */ ChatMessage),\n/* harmony export */   \"ChatMessageContent\": () => (/* binding */ ChatMessageContent),\n/* harmony export */   \"ChatParticipant\": () => (/* binding */ ChatParticipant),\n/* harmony export */   \"UpdateChatMessageRequest\": () => (/* binding */ UpdateChatMessageRequest),\n/* harmony export */   \"ChatParticipantsCollection\": () => (/* binding */ ChatParticipantsCollection),\n/* harmony export */   \"AddChatParticipantsRequest\": () => (/* binding */ AddChatParticipantsRequest),\n/* harmony export */   \"AddChatParticipantsResult\": () => (/* binding */ AddChatParticipantsResult),\n/* harmony export */   \"CreateChatThreadRequest\": () => (/* binding */ CreateChatThreadRequest),\n/* harmony export */   \"CreateChatThreadResult\": () => (/* binding */ CreateChatThreadResult),\n/* harmony export */   \"ChatThreadProperties\": () => (/* binding */ ChatThreadProperties),\n/* harmony export */   \"ChatThreadsItemCollection\": () => (/* binding */ ChatThreadsItemCollection),\n/* harmony export */   \"ChatThreadItem\": () => (/* binding */ ChatThreadItem),\n/* harmony export */   \"UpdateChatThreadRequest\": () => (/* binding */ UpdateChatThreadRequest),\n/* harmony export */   \"SendTypingNotificationRequest\": () => (/* binding */ SendTypingNotificationRequest)\n/* harmony export */ });\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nconst ChatMessageReadReceiptsCollection = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatMessageReadReceiptsCollection\",\n        modelProperties: {\n            value: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatMessageReadReceipt\"\n                        }\n                    }\n                }\n            },\n            nextLink: {\n                serializedName: \"nextLink\",\n                readOnly: true,\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nconst ChatMessageReadReceipt = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatMessageReadReceipt\",\n        modelProperties: {\n            senderCommunicationIdentifier: {\n                serializedName: \"senderCommunicationIdentifier\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationIdentifierModel\"\n                }\n            },\n            chatMessageId: {\n                serializedName: \"chatMessageId\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            readOn: {\n                serializedName: \"readOn\",\n                required: true,\n                type: {\n                    name: \"DateTime\"\n                }\n            }\n        }\n    }\n};\nconst CommunicationIdentifierModel = {\n    type: {\n        name: \"Composite\",\n        className: \"CommunicationIdentifierModel\",\n        modelProperties: {\n            rawId: {\n                serializedName: \"rawId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            communicationUser: {\n                serializedName: \"communicationUser\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationUserIdentifierModel\"\n                }\n            },\n            phoneNumber: {\n                serializedName: \"phoneNumber\",\n                type: {\n                    name: \"Composite\",\n                    className: \"PhoneNumberIdentifierModel\"\n                }\n            },\n            microsoftTeamsUser: {\n                serializedName: \"microsoftTeamsUser\",\n                type: {\n                    name: \"Composite\",\n                    className: \"MicrosoftTeamsUserIdentifierModel\"\n                }\n            }\n        }\n    }\n};\nconst CommunicationUserIdentifierModel = {\n    type: {\n        name: \"Composite\",\n        className: \"CommunicationUserIdentifierModel\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nconst PhoneNumberIdentifierModel = {\n    type: {\n        name: \"Composite\",\n        className: \"PhoneNumberIdentifierModel\",\n        modelProperties: {\n            value: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nconst MicrosoftTeamsUserIdentifierModel = {\n    type: {\n        name: \"Composite\",\n        className: \"MicrosoftTeamsUserIdentifierModel\",\n        modelProperties: {\n            userId: {\n                serializedName: \"userId\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            isAnonymous: {\n                serializedName: \"isAnonymous\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            cloud: {\n                serializedName: \"cloud\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nconst CommunicationErrorResponse = {\n    type: {\n        name: \"Composite\",\n        className: \"CommunicationErrorResponse\",\n        modelProperties: {\n            error: {\n                serializedName: \"error\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatError\"\n                }\n            }\n        }\n    }\n};\nconst ChatError = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatError\",\n        modelProperties: {\n            code: {\n                serializedName: \"code\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            message: {\n                serializedName: \"message\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            target: {\n                serializedName: \"target\",\n                readOnly: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            details: {\n                serializedName: \"details\",\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatError\"\n                        }\n                    }\n                }\n            },\n            innerError: {\n                serializedName: \"innererror\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatError\"\n                }\n            }\n        }\n    }\n};\nconst SendReadReceiptRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"SendReadReceiptRequest\",\n        modelProperties: {\n            chatMessageId: {\n                serializedName: \"chatMessageId\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nconst SendChatMessageRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"SendChatMessageRequest\",\n        modelProperties: {\n            content: {\n                serializedName: \"content\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            senderDisplayName: {\n                serializedName: \"senderDisplayName\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            type: {\n                serializedName: \"type\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"text\",\n                        \"html\",\n                        \"topicUpdated\",\n                        \"participantAdded\",\n                        \"participantRemoved\"\n                    ]\n                }\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                }\n            }\n        }\n    }\n};\nconst SendChatMessageResult = {\n    type: {\n        name: \"Composite\",\n        className: \"SendChatMessageResult\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nconst ChatMessagesCollection = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatMessagesCollection\",\n        modelProperties: {\n            value: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatMessage\"\n                        }\n                    }\n                }\n            },\n            nextLink: {\n                serializedName: \"nextLink\",\n                readOnly: true,\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nconst ChatMessage = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatMessage\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            type: {\n                serializedName: \"type\",\n                required: true,\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"text\",\n                        \"html\",\n                        \"topicUpdated\",\n                        \"participantAdded\",\n                        \"participantRemoved\"\n                    ]\n                }\n            },\n            sequenceId: {\n                serializedName: \"sequenceId\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"version\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            content: {\n                serializedName: \"content\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatMessageContent\"\n                }\n            },\n            senderDisplayName: {\n                serializedName: \"senderDisplayName\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            createdOn: {\n                serializedName: \"createdOn\",\n                required: true,\n                type: {\n                    name: \"DateTime\"\n                }\n            },\n            senderCommunicationIdentifier: {\n                serializedName: \"senderCommunicationIdentifier\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationIdentifierModel\"\n                }\n            },\n            deletedOn: {\n                serializedName: \"deletedOn\",\n                type: {\n                    name: \"DateTime\"\n                }\n            },\n            editedOn: {\n                serializedName: \"editedOn\",\n                type: {\n                    name: \"DateTime\"\n                }\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                }\n            }\n        }\n    }\n};\nconst ChatMessageContent = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatMessageContent\",\n        modelProperties: {\n            message: {\n                serializedName: \"message\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            topic: {\n                serializedName: \"topic\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            participants: {\n                serializedName: \"participants\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatParticipant\"\n                        }\n                    }\n                }\n            },\n            initiatorCommunicationIdentifier: {\n                serializedName: \"initiatorCommunicationIdentifier\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationIdentifierModel\"\n                }\n            }\n        }\n    }\n};\nconst ChatParticipant = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatParticipant\",\n        modelProperties: {\n            communicationIdentifier: {\n                serializedName: \"communicationIdentifier\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationIdentifierModel\"\n                }\n            },\n            displayName: {\n                serializedName: \"displayName\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            shareHistoryTime: {\n                serializedName: \"shareHistoryTime\",\n                type: {\n                    name: \"DateTime\"\n                }\n            }\n        }\n    }\n};\nconst UpdateChatMessageRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"UpdateChatMessageRequest\",\n        modelProperties: {\n            content: {\n                serializedName: \"content\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                }\n            }\n        }\n    }\n};\nconst ChatParticipantsCollection = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatParticipantsCollection\",\n        modelProperties: {\n            value: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatParticipant\"\n                        }\n                    }\n                }\n            },\n            nextLink: {\n                serializedName: \"nextLink\",\n                readOnly: true,\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nconst AddChatParticipantsRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"AddChatParticipantsRequest\",\n        modelProperties: {\n            participants: {\n                serializedName: \"participants\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatParticipant\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nconst AddChatParticipantsResult = {\n    type: {\n        name: \"Composite\",\n        className: \"AddChatParticipantsResult\",\n        modelProperties: {\n            invalidParticipants: {\n                serializedName: \"invalidParticipants\",\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatError\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nconst CreateChatThreadRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"CreateChatThreadRequest\",\n        modelProperties: {\n            topic: {\n                serializedName: \"topic\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            participants: {\n                serializedName: \"participants\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatParticipant\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nconst CreateChatThreadResult = {\n    type: {\n        name: \"Composite\",\n        className: \"CreateChatThreadResult\",\n        modelProperties: {\n            chatThread: {\n                serializedName: \"chatThread\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ChatThreadProperties\"\n                }\n            },\n            invalidParticipants: {\n                serializedName: \"invalidParticipants\",\n                readOnly: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatError\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nconst ChatThreadProperties = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatThreadProperties\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            topic: {\n                serializedName: \"topic\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            createdOn: {\n                serializedName: \"createdOn\",\n                required: true,\n                type: {\n                    name: \"DateTime\"\n                }\n            },\n            createdByCommunicationIdentifier: {\n                serializedName: \"createdByCommunicationIdentifier\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CommunicationIdentifierModel\"\n                }\n            },\n            deletedOn: {\n                serializedName: \"deletedOn\",\n                type: {\n                    name: \"DateTime\"\n                }\n            }\n        }\n    }\n};\nconst ChatThreadsItemCollection = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatThreadsItemCollection\",\n        modelProperties: {\n            value: {\n                serializedName: \"value\",\n                required: true,\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ChatThreadItem\"\n                        }\n                    }\n                }\n            },\n            nextLink: {\n                serializedName: \"nextLink\",\n                readOnly: true,\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nconst ChatThreadItem = {\n    type: {\n        name: \"Composite\",\n        className: \"ChatThreadItem\",\n        modelProperties: {\n            id: {\n                serializedName: \"id\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            topic: {\n                serializedName: \"topic\",\n                required: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            deletedOn: {\n                serializedName: \"deletedOn\",\n                type: {\n                    name: \"DateTime\"\n                }\n            },\n            lastMessageReceivedOn: {\n                serializedName: \"lastMessageReceivedOn\",\n                readOnly: true,\n                type: {\n                    name: \"DateTime\"\n                }\n            }\n        }\n    }\n};\nconst UpdateChatThreadRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"UpdateChatThreadRequest\",\n        modelProperties: {\n            topic: {\n                serializedName: \"topic\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nconst SendTypingNotificationRequest = {\n    type: {\n        name: \"Composite\",\n        className: \"SendTypingNotificationRequest\",\n        modelProperties: {\n            senderDisplayName: {\n                serializedName: \"senderDisplayName\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\n//# sourceMappingURL=mappers.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/mappers.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/parameters.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/parameters.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"accept\": () => (/* binding */ accept),\n/* harmony export */   \"endpoint\": () => (/* binding */ endpoint),\n/* harmony export */   \"chatThreadId\": () => (/* binding */ chatThreadId),\n/* harmony export */   \"maxPageSize\": () => (/* binding */ maxPageSize),\n/* harmony export */   \"skip\": () => (/* binding */ skip),\n/* harmony export */   \"apiVersion\": () => (/* binding */ apiVersion),\n/* harmony export */   \"contentType\": () => (/* binding */ contentType),\n/* harmony export */   \"sendReadReceiptRequest\": () => (/* binding */ sendReadReceiptRequest),\n/* harmony export */   \"sendChatMessageRequest\": () => (/* binding */ sendChatMessageRequest),\n/* harmony export */   \"startTime\": () => (/* binding */ startTime),\n/* harmony export */   \"chatMessageId\": () => (/* binding */ chatMessageId),\n/* harmony export */   \"contentType1\": () => (/* binding */ contentType1),\n/* harmony export */   \"updateChatMessageRequest\": () => (/* binding */ updateChatMessageRequest),\n/* harmony export */   \"participantCommunicationIdentifier\": () => (/* binding */ participantCommunicationIdentifier),\n/* harmony export */   \"addChatParticipantsRequest\": () => (/* binding */ addChatParticipantsRequest),\n/* harmony export */   \"updateChatThreadRequest\": () => (/* binding */ updateChatThreadRequest),\n/* harmony export */   \"sendTypingNotificationRequest\": () => (/* binding */ sendTypingNotificationRequest),\n/* harmony export */   \"nextLink\": () => (/* binding */ nextLink),\n/* harmony export */   \"createChatThreadRequest\": () => (/* binding */ createChatThreadRequest),\n/* harmony export */   \"repeatabilityRequestId\": () => (/* binding */ repeatabilityRequestId)\n/* harmony export */ });\n/* harmony import */ var _models_mappers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/mappers */ \"./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/mappers.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nconst accept = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/json\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nconst endpoint = {\n    parameterPath: \"endpoint\",\n    mapper: {\n        serializedName: \"endpoint\",\n        required: true,\n        type: {\n            name: \"String\"\n        }\n    },\n    skipEncoding: true\n};\nconst chatThreadId = {\n    parameterPath: \"chatThreadId\",\n    mapper: {\n        serializedName: \"chatThreadId\",\n        required: true,\n        type: {\n            name: \"String\"\n        }\n    }\n};\nconst maxPageSize = {\n    parameterPath: [\"options\", \"maxPageSize\"],\n    mapper: {\n        serializedName: \"maxPageSize\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nconst skip = {\n    parameterPath: [\"options\", \"skip\"],\n    mapper: {\n        serializedName: \"skip\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nconst apiVersion = {\n    parameterPath: \"apiVersion\",\n    mapper: {\n        defaultValue: \"2021-09-07\",\n        isConstant: true,\n        serializedName: \"api-version\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nconst contentType = {\n    parameterPath: [\"options\", \"contentType\"],\n    mapper: {\n        defaultValue: \"application/json\",\n        isConstant: true,\n        serializedName: \"Content-Type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nconst sendReadReceiptRequest = {\n    parameterPath: \"sendReadReceiptRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.SendReadReceiptRequest\n};\nconst sendChatMessageRequest = {\n    parameterPath: \"sendChatMessageRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.SendChatMessageRequest\n};\nconst startTime = {\n    parameterPath: [\"options\", \"startTime\"],\n    mapper: {\n        serializedName: \"startTime\",\n        type: {\n            name: \"DateTime\"\n        }\n    }\n};\nconst chatMessageId = {\n    parameterPath: \"chatMessageId\",\n    mapper: {\n        serializedName: \"chatMessageId\",\n        required: true,\n        type: {\n            name: \"String\"\n        }\n    }\n};\nconst contentType1 = {\n    parameterPath: [\"options\", \"contentType\"],\n    mapper: {\n        defaultValue: \"application/merge-patch+json\",\n        isConstant: true,\n        serializedName: \"Content-Type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nconst updateChatMessageRequest = {\n    parameterPath: \"updateChatMessageRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.UpdateChatMessageRequest\n};\nconst participantCommunicationIdentifier = {\n    parameterPath: \"participantCommunicationIdentifier\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.CommunicationIdentifierModel\n};\nconst addChatParticipantsRequest = {\n    parameterPath: \"addChatParticipantsRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.AddChatParticipantsRequest\n};\nconst updateChatThreadRequest = {\n    parameterPath: \"updateChatThreadRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.UpdateChatThreadRequest\n};\nconst sendTypingNotificationRequest = {\n    parameterPath: [\"options\", \"sendTypingNotificationRequest\"],\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.SendTypingNotificationRequest\n};\nconst nextLink = {\n    parameterPath: \"nextLink\",\n    mapper: {\n        serializedName: \"nextLink\",\n        required: true,\n        type: {\n            name: \"String\"\n        }\n    },\n    skipEncoding: true\n};\nconst createChatThreadRequest = {\n    parameterPath: \"createChatThreadRequest\",\n    mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_0__.CreateChatThreadRequest\n};\nconst repeatabilityRequestId = {\n    parameterPath: [\"options\", \"repeatabilityRequestId\"],\n    mapper: {\n        serializedName: \"repeatability-request-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\n//# sourceMappingURL=parameters.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/parameters.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/generated/src/operations/chat.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/generated/src/operations/chat.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChatImpl\": () => (/* binding */ ChatImpl)\n/* harmony export */ });\n/* harmony import */ var _azure_core_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-client */ \"./node_modules/@azure/core-client/dist-esm/src/serializer.js\");\n/* harmony import */ var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/mappers */ \"./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/mappers.js\");\n/* harmony import */ var _models_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/parameters */ \"./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/parameters.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\n\n/** Class containing Chat operations. */\nclass ChatImpl {\n    /**\n     * Initialize a new instance of the class Chat class.\n     * @param client Reference to the service client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Creates a chat thread.\n     * @param createChatThreadRequest Request payload for creating a chat thread.\n     * @param options The options parameters.\n     */\n    createChatThread(createChatThreadRequest, options) {\n        return this.client.sendOperationRequest({ createChatThreadRequest, options }, createChatThreadOperationSpec);\n    }\n    /**\n     * Gets the list of chat threads of a user.\n     * @param options The options parameters.\n     */\n    listChatThreads(options) {\n        return this.client.sendOperationRequest({ options }, listChatThreadsOperationSpec);\n    }\n    /**\n     * Deletes a thread.\n     * @param chatThreadId Id of the thread to be deleted.\n     * @param options The options parameters.\n     */\n    deleteChatThread(chatThreadId, options) {\n        return this.client.sendOperationRequest({ chatThreadId, options }, deleteChatThreadOperationSpec);\n    }\n    /**\n     * ListChatThreadsNext\n     * @param nextLink The nextLink from the previous successful call to the ListChatThreads method.\n     * @param options The options parameters.\n     */\n    listChatThreadsNext(nextLink, options) {\n        return this.client.sendOperationRequest({ nextLink, options }, listChatThreadsNextOperationSpec);\n    }\n}\n// Operation Specifications\nconst serializer = _azure_core_client__WEBPACK_IMPORTED_MODULE_0__.createSerializer(_models_mappers__WEBPACK_IMPORTED_MODULE_1__, /* isXml */ false);\nconst createChatThreadOperationSpec = {\n    path: \"/chat/threads\",\n    httpMethod: \"POST\",\n    responses: {\n        201: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CreateChatThreadResult\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.createChatThreadRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint],\n    headerParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.repeatabilityRequestId\n    ],\n    mediaType: \"json\",\n    serializer\n};\nconst listChatThreadsOperationSpec = {\n    path: \"/chat/threads\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ChatThreadsItemCollection\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.maxPageSize,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.startTime\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\nconst deleteChatThreadOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}\",\n    httpMethod: \"DELETE\",\n    responses: {\n        204: {},\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\nconst listChatThreadsNextOperationSpec = {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ChatThreadsItemCollection\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.maxPageSize,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.startTime\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.nextLink],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\n//# sourceMappingURL=chat.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/generated/src/operations/chat.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/generated/src/operations/chatThread.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/generated/src/operations/chatThread.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChatThreadImpl\": () => (/* binding */ ChatThreadImpl)\n/* harmony export */ });\n/* harmony import */ var _azure_core_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-client */ \"./node_modules/@azure/core-client/dist-esm/src/serializer.js\");\n/* harmony import */ var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/mappers */ \"./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/mappers.js\");\n/* harmony import */ var _models_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/parameters */ \"./node_modules/@azure/communication-chat/dist-esm/src/generated/src/models/parameters.js\");\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\n\n/** Class containing ChatThread operations. */\nclass ChatThreadImpl {\n    /**\n     * Initialize a new instance of the class ChatThread class.\n     * @param client Reference to the service client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Gets chat message read receipts for a thread.\n     * @param chatThreadId Thread id to get the chat message read receipts for.\n     * @param options The options parameters.\n     */\n    listChatReadReceipts(chatThreadId, options) {\n        return this.client.sendOperationRequest({ chatThreadId, options }, listChatReadReceiptsOperationSpec);\n    }\n    /**\n     * Sends a read receipt event to a thread, on behalf of a user.\n     * @param chatThreadId Thread id to send the read receipt event to.\n     * @param sendReadReceiptRequest Read receipt details.\n     * @param options The options parameters.\n     */\n    sendChatReadReceipt(chatThreadId, sendReadReceiptRequest, options) {\n        return this.client.sendOperationRequest({ chatThreadId, sendReadReceiptRequest, options }, sendChatReadReceiptOperationSpec);\n    }\n    /**\n     * Sends a message to a thread.\n     * @param chatThreadId The thread id to send the message to.\n     * @param sendChatMessageRequest Details of the message to send.\n     * @param options The options parameters.\n     */\n    sendChatMessage(chatThreadId, sendChatMessageRequest, options) {\n        return this.client.sendOperationRequest({ chatThreadId, sendChatMessageRequest, options }, sendChatMessageOperationSpec);\n    }\n    /**\n     * Gets a list of messages from a thread.\n     * @param chatThreadId The thread id of the message.\n     * @param options The options parameters.\n     */\n    listChatMessages(chatThreadId, options) {\n        return this.client.sendOperationRequest({ chatThreadId, options }, listChatMessagesOperationSpec);\n    }\n    /**\n     * Gets a message by id.\n     * @param chatThreadId The thread id to which the message was sent.\n     * @param chatMessageId The message id.\n     * @param options The options parameters.\n     */\n    getChatMessage(chatThreadId, chatMessageId, options) {\n        return this.client.sendOperationRequest({ chatThreadId, chatMessageId, options }, getChatMessageOperationSpec);\n    }\n    /**\n     * Updates a message.\n     * @param chatThreadId The thread id to which the message was sent.\n     * @param chatMessageId The message id.\n     * @param updateChatMessageRequest Details of the request to update the message.\n     * @param options The options parameters.\n     */\n    updateChatMessage(chatThreadId, chatMessageId, updateChatMessageRequest, options) {\n        return this.client.sendOperationRequest({ chatThreadId, chatMessageId, updateChatMessageRequest, options }, updateChatMessageOperationSpec);\n    }\n    /**\n     * Deletes a message.\n     * @param chatThreadId The thread id to which the message was sent.\n     * @param chatMessageId The message id.\n     * @param options The options parameters.\n     */\n    deleteChatMessage(chatThreadId, chatMessageId, options) {\n        return this.client.sendOperationRequest({ chatThreadId, chatMessageId, options }, deleteChatMessageOperationSpec);\n    }\n    /**\n     * Gets the participants of a thread.\n     * @param chatThreadId Thread id to get participants for.\n     * @param options The options parameters.\n     */\n    listChatParticipants(chatThreadId, options) {\n        return this.client.sendOperationRequest({ chatThreadId, options }, listChatParticipantsOperationSpec);\n    }\n    /**\n     * Remove a participant from a thread.\n     * @param chatThreadId Thread id to remove the participant from.\n     * @param participantCommunicationIdentifier Id of the thread participant to remove from the thread.\n     * @param options The options parameters.\n     */\n    removeChatParticipant(chatThreadId, participantCommunicationIdentifier, options) {\n        return this.client.sendOperationRequest({ chatThreadId, participantCommunicationIdentifier, options }, removeChatParticipantOperationSpec);\n    }\n    /**\n     * Adds thread participants to a thread. If participants already exist, no change occurs.\n     * @param chatThreadId Id of the thread to add participants to.\n     * @param addChatParticipantsRequest Thread participants to be added to the thread.\n     * @param options The options parameters.\n     */\n    addChatParticipants(chatThreadId, addChatParticipantsRequest, options) {\n        return this.client.sendOperationRequest({ chatThreadId, addChatParticipantsRequest, options }, addChatParticipantsOperationSpec);\n    }\n    /**\n     * Updates a thread's properties.\n     * @param chatThreadId The id of the thread to update.\n     * @param updateChatThreadRequest Request payload for updating a chat thread.\n     * @param options The options parameters.\n     */\n    updateChatThreadProperties(chatThreadId, updateChatThreadRequest, options) {\n        return this.client.sendOperationRequest({ chatThreadId, updateChatThreadRequest, options }, updateChatThreadPropertiesOperationSpec);\n    }\n    /**\n     * Gets a chat thread's properties.\n     * @param chatThreadId Id of the thread.\n     * @param options The options parameters.\n     */\n    getChatThreadProperties(chatThreadId, options) {\n        return this.client.sendOperationRequest({ chatThreadId, options }, getChatThreadPropertiesOperationSpec);\n    }\n    /**\n     * Posts a typing event to a thread, on behalf of a user.\n     * @param chatThreadId Id of the thread.\n     * @param options The options parameters.\n     */\n    sendTypingNotification(chatThreadId, options) {\n        return this.client.sendOperationRequest({ chatThreadId, options }, sendTypingNotificationOperationSpec);\n    }\n    /**\n     * ListChatReadReceiptsNext\n     * @param chatThreadId Thread id to get the chat message read receipts for.\n     * @param nextLink The nextLink from the previous successful call to the ListChatReadReceipts method.\n     * @param options The options parameters.\n     */\n    listChatReadReceiptsNext(chatThreadId, nextLink, options) {\n        return this.client.sendOperationRequest({ chatThreadId, nextLink, options }, listChatReadReceiptsNextOperationSpec);\n    }\n    /**\n     * ListChatMessagesNext\n     * @param chatThreadId The thread id of the message.\n     * @param nextLink The nextLink from the previous successful call to the ListChatMessages method.\n     * @param options The options parameters.\n     */\n    listChatMessagesNext(chatThreadId, nextLink, options) {\n        return this.client.sendOperationRequest({ chatThreadId, nextLink, options }, listChatMessagesNextOperationSpec);\n    }\n    /**\n     * ListChatParticipantsNext\n     * @param chatThreadId Thread id to get participants for.\n     * @param nextLink The nextLink from the previous successful call to the ListChatParticipants method.\n     * @param options The options parameters.\n     */\n    listChatParticipantsNext(chatThreadId, nextLink, options) {\n        return this.client.sendOperationRequest({ chatThreadId, nextLink, options }, listChatParticipantsNextOperationSpec);\n    }\n}\n// Operation Specifications\nconst serializer = _azure_core_client__WEBPACK_IMPORTED_MODULE_0__.createSerializer(_models_mappers__WEBPACK_IMPORTED_MODULE_1__, /* isXml */ false);\nconst listChatReadReceiptsOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/readReceipts\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ChatMessageReadReceiptsCollection\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.maxPageSize,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.skip,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\nconst sendChatReadReceiptOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/readReceipts\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {},\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.sendReadReceiptRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer\n};\nconst sendChatMessageOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/messages\",\n    httpMethod: \"POST\",\n    responses: {\n        201: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.SendChatMessageResult\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.sendChatMessageRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer\n};\nconst listChatMessagesOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/messages\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ChatMessagesCollection\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.maxPageSize,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.startTime\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\nconst getChatMessageOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/messages/{chatMessageId}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ChatMessage\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatMessageId\n    ],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\nconst updateChatMessageOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/messages/{chatMessageId}\",\n    httpMethod: \"PATCH\",\n    responses: {\n        204: {},\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.updateChatMessageRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatMessageId\n    ],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType1],\n    mediaType: \"json\",\n    serializer\n};\nconst deleteChatMessageOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/messages/{chatMessageId}\",\n    httpMethod: \"DELETE\",\n    responses: {\n        204: {},\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatMessageId\n    ],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\nconst listChatParticipantsOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/participants\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ChatParticipantsCollection\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.maxPageSize,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.skip,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion\n    ],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\nconst removeChatParticipantOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/participants/:remove\",\n    httpMethod: \"POST\",\n    responses: {\n        204: {},\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.participantCommunicationIdentifier,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer\n};\nconst addChatParticipantsOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/participants/:add\",\n    httpMethod: \"POST\",\n    responses: {\n        201: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.AddChatParticipantsResult\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.addChatParticipantsRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer\n};\nconst updateChatThreadPropertiesOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}\",\n    httpMethod: \"PATCH\",\n    responses: {\n        204: {},\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.updateChatThreadRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType1],\n    mediaType: \"json\",\n    serializer\n};\nconst getChatThreadPropertiesOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ChatThreadProperties\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\nconst sendTypingNotificationOperationSpec = {\n    path: \"/chat/threads/{chatThreadId}/typing\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {},\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__.sendTypingNotificationRequest,\n    queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion],\n    urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept, _models_parameters__WEBPACK_IMPORTED_MODULE_2__.contentType],\n    mediaType: \"json\",\n    serializer\n};\nconst listChatReadReceiptsNextOperationSpec = {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ChatMessageReadReceiptsCollection\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.maxPageSize,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.skip,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion\n    ],\n    urlParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.nextLink\n    ],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\nconst listChatMessagesNextOperationSpec = {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ChatMessagesCollection\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.maxPageSize,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.startTime\n    ],\n    urlParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.nextLink\n    ],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\nconst listChatParticipantsNextOperationSpec = {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.ChatParticipantsCollection\n        },\n        401: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        403: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        429: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        },\n        503: {\n            bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__.CommunicationErrorResponse,\n            isError: true\n        }\n    },\n    queryParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.maxPageSize,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.skip,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.apiVersion\n    ],\n    urlParameters: [\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.endpoint,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.chatThreadId,\n        _models_parameters__WEBPACK_IMPORTED_MODULE_2__.nextLink\n    ],\n    headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__.accept],\n    serializer\n};\n//# sourceMappingURL=chatThread.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/generated/src/operations/chatThread.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/models/logger.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/models/logger.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logger\": () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"./node_modules/@azure/logger/dist-esm/src/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"communication-chat\");\n//# sourceMappingURL=logger.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/models/logger.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/models/mappers.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/models/mappers.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mapToCreateChatThreadOptionsRestModel\": () => (/* binding */ mapToCreateChatThreadOptionsRestModel),\n/* harmony export */   \"mapToChatParticipantRestModel\": () => (/* binding */ mapToChatParticipantRestModel),\n/* harmony export */   \"mapToAddChatParticipantsRequestRestModel\": () => (/* binding */ mapToAddChatParticipantsRequestRestModel),\n/* harmony export */   \"mapToChatParticipantSdkModel\": () => (/* binding */ mapToChatParticipantSdkModel),\n/* harmony export */   \"mapToChatContentSdkModel\": () => (/* binding */ mapToChatContentSdkModel),\n/* harmony export */   \"mapToChatMessageSdkModel\": () => (/* binding */ mapToChatMessageSdkModel),\n/* harmony export */   \"mapToChatMessagesSdkModelArray\": () => (/* binding */ mapToChatMessagesSdkModelArray),\n/* harmony export */   \"mapToChatThreadPropertiesSdkModel\": () => (/* binding */ mapToChatThreadPropertiesSdkModel),\n/* harmony export */   \"mapToCreateChatThreadResultSdkModel\": () => (/* binding */ mapToCreateChatThreadResultSdkModel),\n/* harmony export */   \"mapToReadReceiptSdkModel\": () => (/* binding */ mapToReadReceiptSdkModel)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _azure_communication_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/communication-common */ \"./node_modules/@azure/communication-common/dist-esm/src/identifierModelSerializer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst mapToCreateChatThreadOptionsRestModel = (options) => {\n    const { participants, idempotencyToken } = options, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(options, [\"participants\", \"idempotencyToken\"]);\n    return Object.assign({ repeatabilityRequestId: idempotencyToken }, rest);\n};\n/**\n * @internal\n * Mapping chat participant customer model to chat participant REST model\n */\nconst mapToChatParticipantRestModel = (chatParticipant) => {\n    const { id } = chatParticipant, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(chatParticipant, [\"id\"]);\n    return Object.assign(Object.assign({}, rest), { communicationIdentifier: (0,_azure_communication_common__WEBPACK_IMPORTED_MODULE_1__.serializeCommunicationIdentifier)(id) });\n};\n/**\n * @internal\n * Mapping add participants request to add chat participants request REST model\n */\nconst mapToAddChatParticipantsRequestRestModel = (addParticipantsRequest) => {\n    var _a;\n    return {\n        participants: (_a = addParticipantsRequest.participants) === null || _a === void 0 ? void 0 : _a.map((participant) => mapToChatParticipantRestModel(participant)),\n    };\n};\n/**\n * @internal\n * Mapping chat participant REST model to chat participant SDK model\n */\nconst mapToChatParticipantSdkModel = (chatParticipant) => {\n    const { communicationIdentifier } = chatParticipant, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(chatParticipant, [\"communicationIdentifier\"]);\n    return Object.assign(Object.assign({}, rest), { id: (0,_azure_communication_common__WEBPACK_IMPORTED_MODULE_1__.deserializeCommunicationIdentifier)(communicationIdentifier) });\n};\n/**\n * @internal\n */\nconst mapToChatContentSdkModel = (content) => {\n    const { participants, initiatorCommunicationIdentifier } = content, otherChatContents = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(content, [\"participants\", \"initiatorCommunicationIdentifier\"]);\n    let result = Object.assign({}, otherChatContents);\n    if (initiatorCommunicationIdentifier) {\n        const initiator = (0,_azure_communication_common__WEBPACK_IMPORTED_MODULE_1__.deserializeCommunicationIdentifier)(initiatorCommunicationIdentifier);\n        result = Object.assign(Object.assign({}, result), { initiator });\n    }\n    if (participants) {\n        result = Object.assign(Object.assign({}, result), { participants: participants === null || participants === void 0 ? void 0 : participants.map((participant) => mapToChatParticipantSdkModel(participant)) });\n    }\n    return result;\n};\n/**\n * @internal\n * Mapping chat message REST model to chat message SDK model\n */\nconst mapToChatMessageSdkModel = (chatMessage) => {\n    const { content, senderCommunicationIdentifier } = chatMessage, otherChatMessage = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(chatMessage, [\"content\", \"senderCommunicationIdentifier\"]);\n    let result = Object.assign({}, otherChatMessage);\n    if (content) {\n        result = Object.assign(Object.assign({}, result), { content: mapToChatContentSdkModel(content) });\n    }\n    if (senderCommunicationIdentifier) {\n        const sender = (0,_azure_communication_common__WEBPACK_IMPORTED_MODULE_1__.deserializeCommunicationIdentifier)(senderCommunicationIdentifier);\n        result = Object.assign(Object.assign({}, result), { sender });\n    }\n    return result;\n};\n/**\n * @internal\n * Mapping chat messages collection REST model to chat message SDK model array\n */\nconst mapToChatMessagesSdkModelArray = (chatMessagesCollection) => {\n    var _a;\n    return (_a = chatMessagesCollection.value) === null || _a === void 0 ? void 0 : _a.map((chatMessage) => mapToChatMessageSdkModel(chatMessage));\n};\n/**\n * @internal\n * Mapping chat thread REST model to chat thread SDK model\n */\nconst mapToChatThreadPropertiesSdkModel = (chatThread) => {\n    const { createdByCommunicationIdentifier } = chatThread, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(chatThread, [\"createdByCommunicationIdentifier\"]);\n    if (createdByCommunicationIdentifier) {\n        return Object.assign(Object.assign({}, rest), { createdBy: (0,_azure_communication_common__WEBPACK_IMPORTED_MODULE_1__.deserializeCommunicationIdentifier)(createdByCommunicationIdentifier) });\n    }\n    else {\n        return Object.assign({}, rest);\n    }\n};\n/**\n * @internal\n * Mapping chat thread REST model to chat thread SDK model\n */\nconst mapToCreateChatThreadResultSdkModel = (result) => {\n    const { chatThread } = result, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(result, [\"chatThread\"]);\n    if (chatThread) {\n        return Object.assign(Object.assign({}, rest), { chatThread: mapToChatThreadPropertiesSdkModel(chatThread) });\n    }\n    else {\n        return Object.assign({}, rest);\n    }\n};\n/**\n * @internal\n * Mapping read receipt REST model to read receipt SDK model\n */\nconst mapToReadReceiptSdkModel = (readReceipt) => {\n    const { senderCommunicationIdentifier } = readReceipt, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(readReceipt, [\"senderCommunicationIdentifier\"]);\n    return Object.assign(Object.assign({}, rest), { sender: (0,_azure_communication_common__WEBPACK_IMPORTED_MODULE_1__.deserializeCommunicationIdentifier)(senderCommunicationIdentifier) });\n};\n//# sourceMappingURL=mappers.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/models/mappers.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/models/uuid.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/models/uuid.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateUuid\": () => (/* binding */ generateUuid)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n * @internal\n */\nfunction generateUuid() {\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n}\n//# sourceMappingURL=uuid.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/models/uuid.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/signaling/signalingClient.browser.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/signaling/signalingClient.browser.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSignalingClient\": () => (/* binding */ getSignalingClient)\n/* harmony export */ });\n/* harmony import */ var _azure_communication_signaling__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/communication-signaling */ \"./node_modules/@azure/communication-signaling/dist/index.js\");\n/* harmony import */ var _azure_communication_signaling__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_azure_communication_signaling__WEBPACK_IMPORTED_MODULE_0__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst getSignalingClient = (credential, logger, options) => {\n    var _a;\n    return new _azure_communication_signaling__WEBPACK_IMPORTED_MODULE_0__.CommunicationSignalingClient(credential, logger, {\n        environment: (_a = options === null || options === void 0 ? void 0 : options.environment) !== null && _a !== void 0 ? _a : undefined,\n    });\n};\n//# sourceMappingURL=signalingClient.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/signaling/signalingClient.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-chat/dist-esm/src/tracing.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/communication-chat/dist-esm/src/tracing.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSpan\": () => (/* binding */ createSpan)\n/* harmony export */ });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nconst createSpan = (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createSpanFunction)({\n    packagePrefix: \"Azure.Communication\",\n    namespace: \"Microsoft.Communication\",\n});\n//# sourceMappingURL=tracing.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-chat/dist-esm/src/tracing.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/autoRefreshTokenCredential.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/autoRefreshTokenCredential.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AutoRefreshTokenCredential\": () => (/* binding */ AutoRefreshTokenCredential)\n/* harmony export */ });\n/* harmony import */ var _tokenParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tokenParser */ \"./node_modules/@azure/communication-common/dist-esm/src/tokenParser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst expiredToken = { token: \"\", expiresOnTimestamp: -10 };\nconst minutesToMs = (minutes) => minutes * 1000 * 60;\nconst defaultRefreshingInterval = minutesToMs(10);\nclass AutoRefreshTokenCredential {\n    constructor(refreshArgs) {\n        this.refreshingIntervalInMs = defaultRefreshingInterval;\n        this.activeTokenFetching = null;\n        this.activeTokenUpdating = null;\n        this.disposed = false;\n        const { tokenRefresher, token, refreshProactively } = refreshArgs;\n        this.refresh = tokenRefresher;\n        this.currentToken = token ? (0,_tokenParser__WEBPACK_IMPORTED_MODULE_0__.parseToken)(token) : expiredToken;\n        this.refreshProactively = refreshProactively !== null && refreshProactively !== void 0 ? refreshProactively : false;\n        if (this.refreshProactively) {\n            this.scheduleRefresh();\n        }\n    }\n    async getToken(options) {\n        if (!this.isCurrentTokenExpiringSoon) {\n            return this.currentToken;\n        }\n        const updatePromise = this.updateTokenAndReschedule(options === null || options === void 0 ? void 0 : options.abortSignal);\n        if (!this.isCurrentTokenValid) {\n            await updatePromise;\n        }\n        return this.currentToken;\n    }\n    dispose() {\n        this.disposed = true;\n        this.activeTokenFetching = null;\n        this.activeTokenUpdating = null;\n        this.currentToken = expiredToken;\n        if (this.activeTimeout) {\n            clearTimeout(this.activeTimeout);\n        }\n    }\n    async updateTokenAndReschedule(abortSignal) {\n        if (this.activeTokenUpdating) {\n            return this.activeTokenUpdating;\n        }\n        this.activeTokenUpdating = this.refreshTokenAndReschedule(abortSignal);\n        try {\n            await this.activeTokenUpdating;\n        }\n        finally {\n            this.activeTokenUpdating = null;\n        }\n    }\n    async refreshTokenAndReschedule(abortSignal) {\n        this.currentToken = await this.refreshToken(abortSignal);\n        if (this.refreshProactively) {\n            this.scheduleRefresh();\n        }\n    }\n    async refreshToken(abortSignal) {\n        try {\n            if (!this.activeTokenFetching) {\n                this.activeTokenFetching = this.refresh(abortSignal);\n            }\n            return (0,_tokenParser__WEBPACK_IMPORTED_MODULE_0__.parseToken)(await this.activeTokenFetching);\n        }\n        finally {\n            this.activeTokenFetching = null;\n        }\n    }\n    scheduleRefresh() {\n        if (this.disposed) {\n            return;\n        }\n        if (this.activeTimeout) {\n            clearTimeout(this.activeTimeout);\n        }\n        const timespanInMs = this.currentToken.expiresOnTimestamp - Date.now() - this.refreshingIntervalInMs;\n        this.activeTimeout = setTimeout(() => this.updateTokenAndReschedule(), timespanInMs);\n    }\n    get isCurrentTokenValid() {\n        return this.currentToken && Date.now() < this.currentToken.expiresOnTimestamp;\n    }\n    get isCurrentTokenExpiringSoon() {\n        return (!this.currentToken ||\n            Date.now() >= this.currentToken.expiresOnTimestamp - this.refreshingIntervalInMs);\n    }\n}\n//# sourceMappingURL=autoRefreshTokenCredential.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-common/dist-esm/src/autoRefreshTokenCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/communicationTokenCredential.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/communicationTokenCredential.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AzureCommunicationTokenCredential\": () => (/* binding */ AzureCommunicationTokenCredential)\n/* harmony export */ });\n/* harmony import */ var _tokenParser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tokenParser */ \"./node_modules/@azure/communication-common/dist-esm/src/tokenParser.js\");\n/* harmony import */ var _staticTokenCredential__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./staticTokenCredential */ \"./node_modules/@azure/communication-common/dist-esm/src/staticTokenCredential.js\");\n/* harmony import */ var _autoRefreshTokenCredential__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./autoRefreshTokenCredential */ \"./node_modules/@azure/communication-common/dist-esm/src/autoRefreshTokenCredential.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * The CommunicationTokenCredential implementation with support for proactive token refresh.\n */\nclass AzureCommunicationTokenCredential {\n    constructor(tokenOrRefreshOptions) {\n        this.disposed = false;\n        if (typeof tokenOrRefreshOptions === \"string\") {\n            this.tokenCredential = new _staticTokenCredential__WEBPACK_IMPORTED_MODULE_0__.StaticTokenCredential((0,_tokenParser__WEBPACK_IMPORTED_MODULE_1__.parseToken)(tokenOrRefreshOptions));\n        }\n        else {\n            this.tokenCredential = new _autoRefreshTokenCredential__WEBPACK_IMPORTED_MODULE_2__.AutoRefreshTokenCredential(tokenOrRefreshOptions);\n        }\n    }\n    /**\n     * Gets an `AccessToken` for the user. Throws if already disposed.\n     * @param abortSignal - An implementation of `AbortSignalLike` to cancel the operation.\n     */\n    async getToken(options) {\n        this.throwIfDisposed();\n        const token = await this.tokenCredential.getToken(options);\n        this.throwIfDisposed();\n        return token;\n    }\n    /**\n     * Disposes the CommunicationTokenCredential and cancels any internal auto-refresh operation.\n     */\n    dispose() {\n        this.disposed = true;\n        this.tokenCredential.dispose();\n    }\n    throwIfDisposed() {\n        if (this.disposed) {\n            throw new Error(\"User credential is disposed\");\n        }\n    }\n}\n//# sourceMappingURL=communicationTokenCredential.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-common/dist-esm/src/communicationTokenCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/identifierModelSerializer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/identifierModelSerializer.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"serializeCommunicationIdentifier\": () => (/* binding */ serializeCommunicationIdentifier),\n/* harmony export */   \"deserializeCommunicationIdentifier\": () => (/* binding */ deserializeCommunicationIdentifier)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _identifierModels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identifierModels */ \"./node_modules/@azure/communication-common/dist-esm/src/identifierModels.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst addRawIdIfExisting = (identifier, rawId) => {\n    return rawId === undefined ? identifier : Object.assign(Object.assign({}, identifier), { rawId: rawId });\n};\nconst assertNotNullOrUndefined = (obj, prop) => {\n    const subObjName = Object.keys(obj)[0];\n    const subObj = obj[subObjName];\n    if (prop in subObj) {\n        return subObj[prop];\n    }\n    throw new Error(`Property ${prop} is required for identifier of type ${subObjName}.`);\n};\nconst assertMaximumOneNestedModel = (identifier) => {\n    const { rawId: _rawId } = identifier, props = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(identifier, [\"rawId\"]);\n    const keys = Object.keys(props);\n    if (keys.length > 1) {\n        throw new Error(`Only one of the properties in ${JSON.stringify(keys)} should be present.`);\n    }\n};\n/**\n * @hidden\n * Translates a CommunicationIdentifier to its serialized format for sending a request.\n * @param identifier - The CommunicationIdentifier to be serialized.\n */\nconst serializeCommunicationIdentifier = (identifier) => {\n    var _a, _b;\n    const identifierKind = (0,_identifierModels__WEBPACK_IMPORTED_MODULE_1__.getIdentifierKind)(identifier);\n    switch (identifierKind.kind) {\n        case \"communicationUser\":\n            return { communicationUser: { id: identifierKind.communicationUserId } };\n        case \"phoneNumber\":\n            return addRawIdIfExisting({ phoneNumber: { value: identifierKind.phoneNumber } }, identifierKind.rawId);\n        case \"microsoftTeamsUser\":\n            return addRawIdIfExisting({\n                microsoftTeamsUser: {\n                    userId: identifierKind.microsoftTeamsUserId,\n                    isAnonymous: (_a = identifierKind.isAnonymous) !== null && _a !== void 0 ? _a : false,\n                    cloud: (_b = identifierKind.cloud) !== null && _b !== void 0 ? _b : \"public\"\n                }\n            }, identifierKind.rawId);\n        case \"unknown\":\n            return { rawId: identifierKind.id };\n        default:\n            throw new Error(`Can't serialize an identifier with kind ${identifierKind.kind}`);\n    }\n};\n/**\n * @hidden\n * Translates the serialized format of a communication identifier to CommunicationIdentifier.\n * @param serializedIdentifier - The SerializedCommunicationIdentifier to be deserialized.\n */\nconst deserializeCommunicationIdentifier = (serializedIdentifier) => {\n    assertMaximumOneNestedModel(serializedIdentifier);\n    const { communicationUser, microsoftTeamsUser, phoneNumber } = serializedIdentifier;\n    if (communicationUser) {\n        return {\n            kind: \"communicationUser\",\n            communicationUserId: assertNotNullOrUndefined({ communicationUser }, \"id\")\n        };\n    }\n    if (phoneNumber) {\n        return {\n            kind: \"phoneNumber\",\n            phoneNumber: assertNotNullOrUndefined({ phoneNumber }, \"value\"),\n            rawId: assertNotNullOrUndefined({ phoneNumber: serializedIdentifier }, \"rawId\")\n        };\n    }\n    if (microsoftTeamsUser) {\n        return {\n            kind: \"microsoftTeamsUser\",\n            microsoftTeamsUserId: assertNotNullOrUndefined({ microsoftTeamsUser }, \"userId\"),\n            isAnonymous: assertNotNullOrUndefined({ microsoftTeamsUser }, \"isAnonymous\"),\n            cloud: assertNotNullOrUndefined({ microsoftTeamsUser }, \"cloud\"),\n            rawId: assertNotNullOrUndefined({ microsoftTeamsUser: serializedIdentifier }, \"rawId\")\n        };\n    }\n    return {\n        kind: \"unknown\",\n        id: assertNotNullOrUndefined({ unknown: serializedIdentifier }, \"rawId\")\n    };\n};\n//# sourceMappingURL=identifierModelSerializer.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-common/dist-esm/src/identifierModelSerializer.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/identifierModels.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/identifierModels.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isCommunicationUserIdentifier\": () => (/* binding */ isCommunicationUserIdentifier),\n/* harmony export */   \"isPhoneNumberIdentifier\": () => (/* binding */ isPhoneNumberIdentifier),\n/* harmony export */   \"isMicrosoftTeamsUserIdentifier\": () => (/* binding */ isMicrosoftTeamsUserIdentifier),\n/* harmony export */   \"isUnknownIdentifier\": () => (/* binding */ isUnknownIdentifier),\n/* harmony export */   \"getIdentifierKind\": () => (/* binding */ getIdentifierKind)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Tests an Identifier to determine whether it implements CommunicationUserIdentifier.\n *\n * @param identifier - The assumed CommunicationUserIdentifier to be tested.\n */\nconst isCommunicationUserIdentifier = (identifier) => {\n    return typeof identifier.communicationUserId === \"string\";\n};\n/**\n * Tests an Identifier to determine whether it implements PhoneNumberIdentifier.\n *\n * @param identifier - The assumed PhoneNumberIdentifier to be tested.\n */\nconst isPhoneNumberIdentifier = (identifier) => {\n    return typeof identifier.phoneNumber === \"string\";\n};\n/**\n * Tests an Identifier to determine whether it implements MicrosoftTeamsUserIdentifier.\n *\n * @param identifier - The assumed available to be tested.\n */\nconst isMicrosoftTeamsUserIdentifier = (identifier) => {\n    return typeof identifier.microsoftTeamsUserId === \"string\";\n};\n/**\n * Tests an Identifier to determine whether it implements UnknownIdentifier.\n *\n * @param identifier - The assumed UnknownIdentifier to be tested.\n */\nconst isUnknownIdentifier = (identifier) => {\n    return typeof identifier.id === \"string\";\n};\n/**\n * Returns the CommunicationIdentifierKind for a given CommunicationIdentifier. Returns undefined if the kind couldn't be inferred.\n *\n * @param identifier - The identifier whose kind is to be inferred.\n */\nconst getIdentifierKind = (identifier) => {\n    if (isCommunicationUserIdentifier(identifier)) {\n        return Object.assign(Object.assign({}, identifier), { kind: \"communicationUser\" });\n    }\n    if (isPhoneNumberIdentifier(identifier)) {\n        return Object.assign(Object.assign({}, identifier), { kind: \"phoneNumber\" });\n    }\n    if (isMicrosoftTeamsUserIdentifier(identifier)) {\n        return Object.assign(Object.assign({}, identifier), { kind: \"microsoftTeamsUser\" });\n    }\n    return Object.assign(Object.assign({}, identifier), { kind: \"unknown\" });\n};\n//# sourceMappingURL=identifierModels.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-common/dist-esm/src/identifierModels.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/staticTokenCredential.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/staticTokenCredential.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StaticTokenCredential\": () => (/* binding */ StaticTokenCredential)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * StaticTokenCredential\n */\nclass StaticTokenCredential {\n    constructor(token) {\n        this.token = token;\n    }\n    async getToken() {\n        return this.token;\n    }\n    dispose() {\n        /* intentionally empty */\n    }\n}\n//# sourceMappingURL=staticTokenCredential.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-common/dist-esm/src/staticTokenCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-common/dist-esm/src/tokenParser.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/communication-common/dist-esm/src/tokenParser.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseToken\": () => (/* binding */ parseToken)\n/* harmony export */ });\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jwt-decode */ \"./node_modules/jwt-decode/lib/index.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jwt_decode__WEBPACK_IMPORTED_MODULE_0__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst parseToken = (token) => {\n    const { exp } = jwt_decode__WEBPACK_IMPORTED_MODULE_0___default()(token);\n    return {\n        token,\n        expiresOnTimestamp: exp * 1000\n    };\n};\n//# sourceMappingURL=tokenParser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-common/dist-esm/src/tokenParser.js?");

/***/ }),

/***/ "./node_modules/@azure/communication-signaling/dist/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/communication-signaling/dist/index.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar coreHttp = _interopDefault(__webpack_require__(/*! @azure/core-http */ \"./node_modules/@azure/core-http/dist-esm/src/coreHttp.js\"));\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar tsregistrar = createCommonjsModule(function (module, exports) {\n!function(t,e){module.exports=e();}(commonjsGlobal,function(){return function(t){function e(n){if(r[n])return r[n].exports;var i=r[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var r={};return e.m=t,e.c=r,e.i=function(t){return t},e.d=function(t,r,n){e.o(t,r)||Object.defineProperty(t,r,{configurable:!1,enumerable:!0,get:n});},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,\"a\",r),r},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=1)}([function(t,e,r){function n(t,e){var r,n=new Promise(function(e,n){fetch(t).then(function(t){clearTimeout(r),e(t);}).catch(function(t){clearTimeout(r),n(t);});});if(0!==e){var i=new Promise(function(n,i){r=setTimeout(i,e,new Error(\"Fetch for '\"+t.url+\"' timed out\"));});return Promise.race([n,i])}return n}function i(t){try{return JSON.stringify(t)}catch(e){return \"Unable to serialize object of type \"+typeof t}}Object.defineProperty(e,\"__esModule\",{value:!0}),e.fetchWithTimeout=n,e.toJson=i;var o=function(){function t(){this.start=Date.now();}return Object.defineProperty(t.prototype,\"duration\",{get:function(){return Date.now()-this.start},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"startTime\",{get:function(){return this.start},enumerable:!0,configurable:!0}),t.prototype.reset=function(){this.start=Date.now();},t}();e.Timespan=o;},function(t,e,r){function n(t,e,r){return new f(t,e,r)}var i=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e;}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);};return function(e,r){function n(){this.constructor=e;}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n);}}(),o=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))(function(i,o){function s(t){try{c(n.next(t));}catch(t){o(t);}}function a(t){try{c(n.throw(t));}catch(t){o(t);}}function c(t){t.done?i(t.value):new r(function(e){e(t.value);}).then(s,a);}c((n=n.apply(t,e||[])).next());})},s=this&&this.__generator||function(t,e){function r(t){return function(e){return n([t,e])}}function n(r){if(i)throw new TypeError(\"Generator is already executing.\");for(;c;)try{if(i=1,o&&(s=2&r[0]?o.return:r[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,r[1])).done)return s;switch(o=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return c.label++,{value:r[1],done:!1};case 5:c.label++,o=r[1],r=[0];continue;case 7:r=c.ops.pop(),c.trys.pop();continue;default:if(s=c.trys,!(s=s.length>0&&s[s.length-1])&&(6===r[0]||2===r[0])){c=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){c.label=r[1];break}if(6===r[0]&&c.label<s[1]){c.label=s[1],s=r;break}if(s&&c.label<s[2]){c.label=s[2],c.ops.push(r);break}s[2]&&c.ops.pop(),c.trys.pop();continue}r=e.call(t,c);}catch(t){r=[6,t],o=0;}finally{i=s=0;}if(5&r[0])throw r[1];return {value:r[0]?r[1]:void 0,done:!0}}var i,o,s,a,c={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:r(0),throw:r(1),return:r(2)},\"function\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a};Object.defineProperty(e,\"__esModule\",{value:!0});var a=r(0),c=function(t){function e(e){var r=t.call(this,e)||this;return r.name=\"CancelationError\",r}return i(e,t),e}(Error),u=function(){function t(e,r,n){this.logger=e,this.maxBackoffInMs=r,this.initialDelay=n,this.backoffCount=0,this.id=++t.idCounter;}return t.prototype.delay=function(t){var e=this;if(void 0!==this.timerHandle)throw new Error(\"Retry sequence logical failure\");if(-1===this.backoffCount)return new Promise(function(t,e){e(new c(\"Cancelled\"));});var r=this.calculateNextBackoffMs();return this.backoffCount++,this.logger.info(\"[RegistrarClient] Backing off \"+t+\" for \"+r+\" milliseconds with ID \"+this.id),new Promise(function(n,i){e.cancelFunc=i,e.timerHandle=setTimeout(function(){e.logger.info(\"[RegistrarClient] Back off for \"+t+\" with ID \"+e.id+\" complete\"),e.timerHandle=void 0,n();},r);})},t.prototype.cancel=function(){void 0!==this.timerHandle&&(this.logger.debug(\"Resetting back off\"),clearTimeout(this.timerHandle),void 0!==this.cancelFunc&&this.cancelFunc(new c(\"Cancelled\"))),this.backoffCount=-1;},t.prototype.calculateNextBackoffMs=function(){var t=1+.4*(Math.random()-.5),e=this.initialDelay*Math.pow(2,this.backoffCount)*t;return e=Math.round(e),Math.min(this.maxBackoffInMs,e)},t.idCounter=0,t}(),f=function(){function t(t,e,r){this.logger=t,this.skypeTokenProvider=e,this.options=r,this.backoffs={};}return t.prototype.setTelemetryLogger=function(t){this.eventLogger=t;},t.prototype.register=function(t,e){return o(this,void 0,void 0,function(){return s(this,function(r){switch(r.label){case 0:return [4,this.performRegistration(t,e,\"pr_set_registration\")];case 1:return r.sent(),this.cachedRegistrationParams=[t,e],[2]}})})},t.prototype.unregister=function(){return o(this,void 0,void 0,function(){var t;return s(this,function(e){switch(e.label){case 0:return this.logger.info(\"[RegistrarClient] sending unregister request\"),t=new Request(this.options.registrarUrl+\"/\"+this.options.registrationId,{method:\"DELETE\",mode:\"cors\",headers:new Headers({accept:\"application/json, text/javascript\"})}),[4,this.callRegistrar(t,\"pr_delete_registration\")];case 1:return e.sent(),[2]}})})},t.prototype.cancelPendingRequests=function(){var t=this;Object.keys(this.backoffs).forEach(function(e){t.backoffs[e].cancel();}),this.backoffs={};},t.prototype.resendRegistration=function(){return o(this,void 0,void 0,function(){return s(this,function(t){switch(t.label){case 0:if(!this.cachedRegistrationParams)throw new Error(\"Re-registration failed because there is no registration parameters cached\");return [4,this.performRegistration(this.cachedRegistrationParams[0],this.cachedRegistrationParams[1],\"pr_resend_registration\")];case 1:return t.sent(),[2]}})})},t.prototype.performRegistration=function(t,e,r){return o(this,void 0,void 0,function(){var n,i;return s(this,function(o){switch(o.label){case 0:return this.logger.info(\"[RegistrarClient] Sending register request\"),n={clientDescription:t,registrationId:this.options.registrationId,nodeId:\"\",transports:e},i=new Request(this.options.registrarUrl,{method:\"POST\",mode:\"cors\",headers:new Headers({\"content-type\":\"application/json\",accept:\"application/json, text/javascript\"}),body:a.toJson(n)}),[4,this.callRegistrar(i,r)];case 1:return o.sent(),[2]}})})},t.prototype.startBackoff=function(){var t=new u(this.logger,this.options.maxRetryDelayMs,this.options.initialRetryDelayMs);return this.backoffs[t.id]=t,t},t.prototype.stopBackoff=function(t){t.cancel(),delete this.backoffs[t.id];},t.prototype.getSkypeToken=function(){return o(this,void 0,void 0,function(){var t,e,r,n;return s(this,function(i){switch(i.label){case 0:t=this.startBackoff(),i.label=1;case 1:return i.trys.push([1,3,,8]),this.logger.info(\"[RegistrarClient] Asking for a new skypetoken\"),[4,this.skypeTokenProvider(!0)];case 2:return e=i.sent(),this.stopBackoff(t),[2,e];case 3:r=i.sent(),i.label=4;case 4:return i.trys.push([4,6,,7]),[4,t.delay(\"Fetching a new skypetoken\")];case 5:return i.sent(),[3,8];case 6:throw n=i.sent(),this.stopBackoff(t),n;case 7:return [3,8];case 8:return [3,1];case 9:return [2]}})})},t.prototype.callRegistrar=function(t,e){return o(this,void 0,void 0,function(){var r,n,i,o,c,u,f,l,h,p,d,g,y,v;return s(this,function(s){switch(s.label){case 0:return r=this.startBackoff(),[4,this.skypeTokenProvider(!1)];case 1:n=s.sent(),this.setSkypeTokenHeader(t,n),i=new a.Timespan,s.label=2;case 2:o=void 0,s.label=3;case 3:return s.trys.push([3,8,13,14]),c=t.clone(),[4,a.fetchWithTimeout(c,this.options.requestTimeoutMs)];case 4:return o=s.sent(),401!==o.status?[3,6]:(u=this.setSkypeTokenHeader,f=[t],[4,this.getSkypeToken()]);case 5:return u.apply(this,f.concat([s.sent()])),[3,20];case 6:if(o.status>=500&&o.status<600)throw new Error(\"Fetch for '\"+t.url+\"' failed with \"+o.status+\" \"+o.statusText);s.label=7;case 7:return [3,14];case 8:l=s.sent(),this.logger.error(\"[RegistrarClient] Request failed with \"+l),s.label=9;case 9:return s.trys.push([9,11,,12]),[4,r.delay(\"Registrar call retry\")];case 10:return s.sent(),[3,20];case 11:throw h=s.sent(),this.logger.error(\"[RegistrarClient] Request cancelled\"),this.stopBackoff(r),h;case 12:return [3,14];case 13:return this.sendTelemetryEvent(e,t,o,i),[7];case 14:return this.stopBackoff(r),o.ok?[2,o]:[3,15];case 15:p=void 0,s.label=16;case 16:return s.trys.push([16,18,,19]),g=(d=JSON).stringify,[4,o.json()];case 17:return p=g.apply(d,[s.sent()]),[3,19];case 18:return y=s.sent(),p=\"no details\",[3,19];case 19:throw v=\"Fetch for '\"+t.url+\"' failed with \"+o.status+\" \"+o.statusText+\" (\"+p+\", MS-CV: \"+o.headers.get(\"MS-CV\")+\")\",this.logger.error(\"[RegistrarClient] \"+v),new Error(v);case 20:return [3,2];case 21:return [2]}})})},t.prototype.setSkypeTokenHeader=function(t,e){t.headers.set(\"X-Skypetoken\",e);},t.prototype.sendTelemetryEvent=function(t,e,r,n){if(void 0!==this.eventLogger){var i={name:t,properties:{url:{value:e.url},result_code:{value:void 0!==r?r.status:0},begin_timestamp:{value:n.startTime},elapsed:{value:n.duration}}};this.eventLogger.logEvent(i);}},t}();e.RegistrarClient=f,e.createRegistrarClient=n;}])});\n\n});\n\nunwrapExports(tsregistrar);\n\nvar tstrouter = createCommonjsModule(function (module, exports) {\n!function(t,e){module.exports=e(tsregistrar);}(commonjsGlobal,function(t){return function(t){function e(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o});},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=17)}([function(t,e,n){Object.defineProperty(e,\"__esModule\",{value:!0});var o=function(){function t(t,e){this.name=t,this.logger=e;}return t.prototype.debug=function(t){this.logger.debug(\"[\"+this.name+\"] \"+t);},t.prototype.info=function(t){this.logger.info(\"[\"+this.name+\"] \"+t);},t.prototype.warn=function(t){this.logger.warn(\"[\"+this.name+\"] \"+t);},t.prototype.error=function(t){this.logger.error(\"[\"+this.name+\"] \"+t);},t}();e.Logger=o;},function(t,e,n){Object.defineProperty(e,\"__esModule\",{value:!0}),e.constants={TROUTER_INIT:\"trouterinit\",TROUTER_READY_EVENT:\"trouterReadyEvent\",TROUTER_READY_TIMEOUT:\"trouterReadyTimeout\",TROUTER_TOKEN_REQUEST:\"trouterTokenRequest\",TROUTER_TOKEN_GET_SUCCEEDED:\"trouterTokenGetSucceeded\",TROUTER_TOKEN_GET_FAILED:\"trouterTokenGetFailed\",TROUTER_RECONNECTING:\"trouterReconnecting\",RENEWAL:\"renewal\",NEW_CONNECTION:\"newConnection\",ENDPOINT_REGISTRATION_FAILED:\"endpointRegistrationFailed\"},e.CLIENT_VERSION=\"2021.48.01.1\",e.HANDLED_MESSAGE_ACK=200,e.UNHANDLED_MESSAGE_ACK=404,e.FAILED_MESSAGE_ACK=500;},function(t,e,n){Object.defineProperty(e,\"__esModule\",{value:!0});!function(t){t[t.Unknown=0]=\"Unknown\",t[t.Active=1]=\"Active\",t[t.Inactive=2]=\"Inactive\";}(e.UserActivityState||(e.UserActivityState={}));var o=function(){function t(){}return t}();e.HttpHeaders=o;!function(t){t[t.Unknown=0]=\"Unknown\",t[t.Connected=2]=\"Connected\",t[t.Disconnected=3]=\"Disconnected\",t[t.Switching=9]=\"Switching\";}(e.TrouterState||(e.TrouterState={}));},function(t,e,n){function o(t){try{return JSON.stringify(t)}catch(e){return \"Unable to serialize object of type \"+typeof t}}function i(t){var e=Math.round((new Date).getTime()/1e3);return void 0!==t&&t>e?t-e:0}function r(t){return Math.round((new Date).getTime()/1e3)+t}function s(t,e){return c(this,void 0,void 0,function(){var n,o,i;return a(this,function(r){return o=new Promise(function(e,o){fetch(t).then(function(t){clearTimeout(n),e(t);}).catch(function(t){clearTimeout(n),o(t);});}),0!==e?(i=new Promise(function(o,i){n=setTimeout(i,e,new Error(\"Fetch for '\"+t.url+\"' timed out\"));}),[2,Promise.race([o,i])]):[2,o]})})}var c=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))(function(i,r){function s(t){try{a(o.next(t));}catch(t){r(t);}}function c(t){try{a(o.throw(t));}catch(t){r(t);}}function a(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,c);}a((o=o.apply(t,e||[])).next());})},a=this&&this.__generator||function(t,e){function n(t){return function(e){return o([t,e])}}function o(n){if(i)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(i=1,r&&(s=2&n[0]?r.return:n[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,n[1])).done)return s;switch(r=0,s&&(n=[2&n[0],s.value]),n[0]){case 0:case 1:s=n;break;case 4:return a.label++,{value:n[1],done:!1};case 5:a.label++,r=n[1],n=[0];continue;case 7:n=a.ops.pop(),a.trys.pop();continue;default:if(s=a.trys,!(s=s.length>0&&s[s.length-1])&&(6===n[0]||2===n[0])){a=0;continue}if(3===n[0]&&(!s||n[1]>s[0]&&n[1]<s[3])){a.label=n[1];break}if(6===n[0]&&a.label<s[1]){a.label=s[1],s=n;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(n);break}s[2]&&a.ops.pop(),a.trys.pop();continue}n=e.call(t,a);}catch(t){n=[6,t],r=0;}finally{i=s=0;}if(5&n[0])throw n[1];return {value:n[0]?n[1]:void 0,done:!0}}var i,r,s,c,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return c={next:n(0),throw:n(1),return:n(2)},\"function\"==typeof Symbol&&(c[Symbol.iterator]=function(){return this}),c};Object.defineProperty(e,\"__esModule\",{value:!0}),e.toJson=o,e.calculateTtlInSec=i,e.calculateExpireTsInSec=r,e.fetchWithTimeout=s;var h=function(){function t(t){this.base=void 0!==t?t:this.createCorrelationVectorBase(),this.extension=0;}return t.extend=function(e){return new t(e)},t.prototype.increase=function(){this.extension++;},t.prototype.value=function(){return this.base+\".\"+this.extension},t.prototype.createCorrelationVectorBase=function(){for(var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0987654321/+\",e=\"AQgw\",n=\"\",o=0;o<21;o++)n+=t.charAt(Math.floor(Math.random()*t.length));return n+=e.charAt(Math.floor(Math.random()*e.length))},t}();e.CorrelationVector=h;var u=function(){function t(){this.start=Date.now();}return Object.defineProperty(t.prototype,\"duration\",{get:function(){return Date.now()-this.start},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"startTime\",{get:function(){return this.start},enumerable:!0,configurable:!0}),t.prototype.reset=function(){this.start=Date.now();},t}();e.Timespan=u;},function(t,e,n){Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(3),i=function(){function t(t,e,n,o,i,r,s){this.connectionId=t,this.connectedClientId=e,this.domId=n,this.unsecureUrl=o,this.url=i,this.c2cUrlBase=r,this.expirationTsSec=s;}return t.prototype.getRemainingTtlInSec=function(){return o.calculateTtlInSec(this.expirationTsSec)},t}();e.ServerState=i;!function(t){t[t.Unknown=0]=\"Unknown\",t[t.Modified=1]=\"Modified\",t[t.Snapshot=2]=\"Snapshot\",t[t.Connected=3]=\"Connected\";}(e.UserActivityEventReason||(e.UserActivityEventReason={}));},function(t,e,n){Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),i=function(){function t(t){this.logger=t,this.messageHandlers=[];}return t.prototype.register=function(t){if(this.messageHandlers.some(function(e){return e===t}))throw new Error(\"Registering the same handler twice is not allowed\");this.messageHandlers.push(t);},t.prototype.clear=function(){this.logger.debug(\"Clearing message handlers\"),this.messageHandlers=[];},t.prototype.active=function(){return this.messageHandlers.length>0},t.prototype.handleMessage=function(t){for(var e={resultCode:o.UNHANDLED_MESSAGE_ACK,isHandled:!1},n=0,i=this.messageHandlers;n<i.length;n++){var r=i[n],s=this.safeExecuteHandle(r,t);if(void 0!==s&&(void 0===s.isHandled||s.isHandled))return void 0===s.resultCode&&(s.resultCode=o.HANDLED_MESSAGE_ACK),s}return e},t.prototype.safeExecuteHandle=function(t,e){try{return t.handleMessage(e)}catch(t){return void this.logger.warn(\"A trouter message handler is throwing exceptions. exception: \"+t)}},t}();e.MessageHandlerRegistry=i;},function(t,e,n){function o(t){var e,n=this;return function(o){return i(n,void 0,void 0,function(){return r(this,function(n){return o&&(e=void 0),[2,new Promise(function(n,i){t(o).then(function(t){e=t,n(t);}).catch(function(t){void 0!==e&&e.length>0&&n(e),i(t);});})]})})}}var i=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))(function(i,r){function s(t){try{a(o.next(t));}catch(t){r(t);}}function c(t){try{a(o.throw(t));}catch(t){r(t);}}function a(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,c);}a((o=o.apply(t,e||[])).next());})},r=this&&this.__generator||function(t,e){function n(t){return function(e){return o([t,e])}}function o(n){if(i)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(i=1,r&&(s=2&n[0]?r.return:n[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,n[1])).done)return s;switch(r=0,s&&(n=[2&n[0],s.value]),n[0]){case 0:case 1:s=n;break;case 4:return a.label++,{value:n[1],done:!1};case 5:a.label++,r=n[1],n=[0];continue;case 7:n=a.ops.pop(),a.trys.pop();continue;default:if(s=a.trys,!(s=s.length>0&&s[s.length-1])&&(6===n[0]||2===n[0])){a=0;continue}if(3===n[0]&&(!s||n[1]>s[0]&&n[1]<s[3])){a.label=n[1];break}if(6===n[0]&&a.label<s[1]){a.label=s[1],s=n;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(n);break}s[2]&&a.ops.pop(),a.trys.pop();continue}n=e.call(t,a);}catch(t){n=[6,t],r=0;}finally{i=s=0;}if(5&n[0])throw n[1];return {value:n[0]?n[1]:void 0,done:!0}}var i,r,s,c,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return c={next:n(0),throw:n(1),return:n(2)},\"function\"==typeof Symbol&&(c[Symbol.iterator]=function(){return this}),c};Object.defineProperty(e,\"__esModule\",{value:!0}),e.addCacheAsBackupTo=o;},function(t,e,n){var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))(function(i,r){function s(t){try{a(o.next(t));}catch(t){r(t);}}function c(t){try{a(o.throw(t));}catch(t){r(t);}}function a(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,c);}a((o=o.apply(t,e||[])).next());})},i=this&&this.__generator||function(t,e){function n(t){return function(e){return o([t,e])}}function o(n){if(i)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(i=1,r&&(s=2&n[0]?r.return:n[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,n[1])).done)return s;switch(r=0,s&&(n=[2&n[0],s.value]),n[0]){case 0:case 1:s=n;break;case 4:return a.label++,{value:n[1],done:!1};case 5:a.label++,r=n[1],n=[0];continue;case 7:n=a.ops.pop(),a.trys.pop();continue;default:if(s=a.trys,!(s=s.length>0&&s[s.length-1])&&(6===n[0]||2===n[0])){a=0;continue}if(3===n[0]&&(!s||n[1]>s[0]&&n[1]<s[3])){a.label=n[1];break}if(6===n[0]&&a.label<s[1]){a.label=s[1],s=n;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(n);break}s[2]&&a.ops.pop(),a.trys.pop();continue}n=e.call(t,a);}catch(t){n=[6,t],r=0;}finally{i=s=0;}if(5&n[0])throw n[1];return {value:n[0]?n[1]:void 0,done:!0}}var i,r,s,c,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return c={next:n(0),throw:n(1),return:n(2)},\"function\"==typeof Symbol&&(c[Symbol.iterator]=function(){return this}),c};Object.defineProperty(e,\"__esModule\",{value:!0});var r=n(3),s=n(2),c=n(0),a=n(14),h=n(16),u=function(){function t(t,e){this.state=t,this.correlationVector=void 0!==e?e:r.CorrelationVector.extend();}return t.prototype.getStateString=function(){switch(this.state){case s.UserActivityState.Active:return \"active\";case s.UserActivityState.Inactive:return \"inactive\";case s.UserActivityState.Unknown:return \"unknown\";default:return \"undefined\"}},t.prototype.toEventObject=function(){return {state:this.getStateString(),cv:this.correlationVector.value()}},t.prototype.toEventJSON=function(){return r.toJson(this.toEventObject())},t}();e.UserActivityObject=u;var p=function(){function t(t,e,n,o){this.logFunc=t,this.options=e,this.tokenProvider=n,this.listener=o,this.logger=new c.Logger(\"Manager\",t),this.logger.info(\"Created TrouterManager with options \"+r.toJson(this.options)),this.fsm=new h.TrouterManagerFsm(t,this),this.baseEndpointUrl=\"\",this.processedMessageLoss={},this.userActivityObject=new u(s.UserActivityState.Unknown);}return t.prototype.start=function(){this.fsm.start();},t.prototype.stop=function(t){this.fsm.stop(t);},t.prototype.configure=function(t){this.options=t,void 0!==this.firstConnection&&this.firstConnection.configure(t),void 0!==this.secondConnection&&this.secondConnection.configure(t),this.logger.info(\"Reconfigured TrouterManager with options \"+r.toJson(this.options));},t.prototype.checkConnection=function(t){void 0!==this.firstConnection&&this.firstConnection.checkConnection(t),void 0!==this.secondConnection&&this.secondConnection.checkConnection(t);},t.prototype.resendRegistration=function(){return o(this,void 0,void 0,function(){return i(this,function(t){return void 0!==this.secondConnection?(this.logger.info(\"Resending registration on the second/new connection\"),[2,this.secondConnection.resendRegistration()]):void 0!==this.firstConnection?(this.logger.info(\"Resending registration on the first/current connection\"),[2,this.firstConnection.resendRegistration()]):(this.logger.info(\"No connection to resend registration on, will be done upon (re)connect\"),[2])})})},t.prototype.getServerState=function(){if(void 0!==this.firstConnection)return this.firstConnection.getServerState()},t.prototype.getState=function(){return this.fsm.getState()},t.prototype.startFirstConnection=function(){var t=new a.TrouterConnection(this.logFunc,this.options,this,this.tokenProvider,this.userActivityObject);this.firstConnection=t,this.getConnectionCache().then(function(e){t.start(e);}).catch();},t.prototype.startSecondConnection=function(t){var e=new a.TrouterConnection(this.logFunc,this.options,this,this.tokenProvider,this.userActivityObject);this.secondConnection=e,void 0!==this.firstConnection&&this.firstConnection.disableRegistrationsAndAutoReconnect(),t?this.getConnectionCache().then(function(t){e.start(t);}).catch():e.start();},t.prototype.stopFirstConnection=function(t){void 0!==this.firstConnection&&(this.storedFirstConnection=this.firstConnection,this.firstConnection.stop(t),this.firstConnection=void 0);},t.prototype.stopSecondConnection=function(t){void 0!==this.secondConnection&&(this.secondConnection.stop(t),this.secondConnection=void 0);},t.prototype.stopSecondConnectionDelayed=function(){if(void 0!==this.secondConnection){var t=this.secondConnection;this.secondConnection=void 0,this.logger.info(\"Closing an inactive connection in \"+Math.round(this.options.lingeringConnectionDelayMs/1e3)+\"s\"),setTimeout(function(){t.stop(!0);},this.options.lingeringConnectionDelayMs);}},t.prototype.forceStopLingeringConnection=function(){this.storedFirstConnection&&(this.storedFirstConnection.stop(!1),this.storedFirstConnection=void 0);},t.prototype.switchConnections=function(){var t=this.firstConnection;this.firstConnection=this.secondConnection,this.secondConnection=t;},t.prototype.doesSecondConnectionExist=function(){return void 0!==this.secondConnection},t.prototype.dispatchConnected=function(){if(void 0!==this.firstConnection){var t=this.firstConnection.getServerState(),e=\"/\"===t.url.slice(-1)?t.url.slice(0,-1):t.url,n={baseEndpointUrl:e,newEndpointUrl:e!==this.baseEndpointUrl,c2cUrlBase:t.c2cUrlBase,clientId:t.connectedClientId,connectionId:t.connectionId,connectionTtlSec:t.getRemainingTtlInSec()};this.baseEndpointUrl=e,this.listener.onTrouterConnected(t.url,n);}},t.prototype.dispatchReconnecting=function(){this.listener.onTrouterDisconnected&&this.listener.onTrouterDisconnected();},t.prototype.dispatchStopped=function(){this.listener.onTrouterDisconnected&&this.listener.onTrouterDisconnected();},t.prototype.dispatchRegistrationState=function(t){this.options.registrationStateCallback&&this.options.registrationStateCallback(t);},t.prototype.onDownstreamRequest=function(t,e,n){var o={id:e.id,method:e.method,path:\"/\"+e.shortUrl,body:e.body,headers:e.headers},i={id:e.id,status:0,headers:{},body:\"\",send:function(){return i.status<=100||i.status>=999?3:(n.writeHead(i.status,i.headers),n.end(i.body))}};this.listener.onTrouterRequest(o,i);},t.prototype.onConnected=function(t){this.fsm.onConnected(t===this.firstConnection);},t.prototype.onRegistered=function(t){this.fsm.onRegistered(t===this.firstConnection);},t.prototype.onUnregistered=function(t){this.fsm.onUnregistered(t===this.firstConnection||t===this.storedFirstConnection);},t.prototype.onReconnecting=function(t){this.fsm.onReconnecting(t===this.firstConnection);},t.prototype.onReconnectIsRequired=function(t,e){this.fsm.onReconnectionRequired(t===this.firstConnection,e);},t.prototype.onDisconnected=function(t){this.fsm.onDisconnected(t===this.storedFirstConnection),this.storedFirstConnection=void 0;},t.prototype.onUserActivityStateAccepted=function(t){this.listener.onTrouterUserActivityStateAccepted&&this.listener.onTrouterUserActivityStateAccepted(t);},t.prototype.onConnectionParametersUpdated=function(t){this.setConnectionCache(t);},t.prototype.setUserActivityState=function(t,e){return this.userActivityObject=new u(t,r.CorrelationVector.extend(e)),void 0!==this.secondConnection?(this.logger.info(\"Setting user activity \"+this.userActivityObject.toEventJSON()+\" on the second/new connection\"),void this.secondConnection.setUserActivityState(this.userActivityObject)):void 0!==this.firstConnection?(this.logger.info(\"Setting user activity \"+this.userActivityObject.toEventJSON()+\" on the first/current connection\"),void this.firstConnection.setUserActivityState(this.userActivityObject)):void 0},t.prototype.onTrouterMessageLost=function(t){var e=this;if(this.listener.onTrouterMessageLoss)if(t&&t.length){var n=t.filter(function(t){return void 0!==e.processedMessageLoss[t.tag+\"-\"+t.etag]});if(n.length&&(this.logger.warn(\"onTrouterMessageLoss - removing duplicates and sending event to server\"),this.sendProcessedDroppedIndicators(n),t=t.filter(function(t){return void 0===e.processedMessageLoss[t.tag+\"-\"+t.etag]}),!t.length))return void this.logger.warn(\"onTrouterMessageLoss - All the data are duplicated\");var o=this.listener.onTrouterMessageLoss(t.map(function(t){return t.tag}));if(!o)return void this.logger.warn(\"onTrouterMessageLoss - flow tags have not been processed by listeners\");t.forEach(function(t){e.processedMessageLoss[t.tag+\"-\"+t.etag]=\"\";}),this.sendProcessedDroppedIndicators(t);}else this.logger.warn(\"onTrouterMessageLoss - no flow tags have been provided\");},t.prototype.getConnectionCache=function(){var t=this;return this.options.connectionCache?(this.logger.debug(\"Querying host's connection cache\"),this.options.connectionCache.onGetTrouterConnectionCache().then(function(t){return t?JSON.parse(t):void 0}).catch(function(e){return t.logger.warn(\"Invalid connection cache content provided: \"+e),t.connectionCache})):Promise.resolve(this.connectionCache)},t.prototype.setConnectionCache=function(t){if(this.connectionCache=t,this.options.connectionCache)try{this.options.connectionCache.onSetTrouterConnectionCache(JSON.stringify(t));}catch(t){this.logger.warn(\"Error setting external connection cache: \"+t);}},t.prototype.sendProcessedDroppedIndicators=function(t){return void 0!==this.firstConnection?void this.firstConnection.sendProcessedDroppedIndicators(t):void 0!==this.secondConnection?void this.secondConnection.sendProcessedDroppedIndicators(t):void 0},t}();e.TrouterManager=p;},function(t,e,n){Object.defineProperty(e,\"__esModule\",{value:!0});var o=function(){function t(t){this.logger=t;}return t.prototype.getPromise=function(){var t=this;return void 0!==this.url?(this.logger.debug(\"[TrouterUrlPromise] returning previously resolved url: \"+this.url),Promise.resolve(this.url)):(void 0===this.pendingPromise?(this.logger.debug(\"[TrouterUrlPromise] creating and returning promise\"),this.pendingPromise=new Promise(function(e,n){t.pendingPromiseResolveRef=e,t.pendingPromiseRejectRef=n;})):this.logger.debug(\"[TrouterUrlPromise] returning existing promise\"),this.pendingPromise)},t.prototype.resolveUrl=function(t){this.url=t,this.logger.debug(\"[TrouterUrlPromise] got url: \"+this.url);var e=this.pendingPromiseResolveRef;this.pendingPromise=void 0,this.pendingPromiseResolveRef=void 0,this.pendingPromiseRejectRef=void 0,void 0!==e&&(this.logger.debug(\"[TrouterUrlPromise] resolving promise\"),e(t));},t.prototype.rejectUrl=function(t){this.logger.debug(\"[TrouterUrlPromise] aborting\");var e=this.pendingPromiseRejectRef;this.url=void 0,this.pendingPromise=void 0,this.pendingPromiseResolveRef=void 0,this.pendingPromiseRejectRef=void 0,void 0!==e&&(this.logger.debug(\"[TrouterUrlPromise] rejecting promise\"),e(t));},t.prototype.resetUrl=function(){this.logger.debug(\"[TrouterUrlPromise] resetting url\"),this.url=void 0;},t}();e.TrouterUrlPromise=o;},function(t,e,n){(function(t,n){!function(t,e){var n=t;n.version=\"0.9.6\",n.protocol=1,n.transports=[],n.j=[],n.sockets={},n.connect=function(t,o){var i,r,s=n.util.parseUri(t);e&&e.location&&(s.protocol=s.protocol||e.location.protocol.slice(0,-1),s.host=s.host||(e.document?e.document.domain:e.location.hostname),s.port=s.port||e.location.port),i=n.util.uniqueUri(s);var c={host:s.host,secure:\"https\"==s.protocol,port:s.port||(\"https\"==s.protocol?443:80),query:s.query||\"\"};return n.util.merge(c,o),!c[\"force new connection\"]&&n.sockets[i]||(r=new n.Socket(c)),!c[\"force new connection\"]&&r&&(n.sockets[i]=r),r=r||n.sockets[i],r.of(s.path.length>1?s.path:\"\")};}(n.exports,void 0===t?window:t);var o=n.exports;!function(t,e){var n=t.util={},o=/^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/,i=[\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"];n.parseUri=function(t){for(var e=o.exec(t||\"\"),n={},r=14;r--;)n[i[r]]=e[r]||\"\";return n},n.uniqueUri=function(t){var n=t.protocol,o=t.host,i=t.port;return \"document\"in e?(o=o||document.domain,i=i||(\"https\"==n&&\"https:\"!==document.location.protocol?443:document.location.port)):(o=o||\"localhost\",i||\"https\"!=n||(i=443)),(n||\"http\")+\"://\"+o+\":\"+(i||80)},n.query=function(t,e){var o=n.chunkQuery(t||\"\"),i=[];n.merge(o,n.chunkQuery(e||\"\"));for(var r in o)o.hasOwnProperty(r)&&i.push(r+\"=\"+o[r]);return i.length?\"?\"+i.join(\"&\"):\"\"},n.chunkQuery=function(t){for(var e,n={},o=t.split(\"&\"),i=0,r=o.length;i<r;++i)e=o[i].split(\"=\"),e[0]&&(n[e[0]]=e[1]);return n};var r=!1;n.load=function(t){if(\"document\"in e&&\"complete\"===document.readyState||r)return t();n.on(e,\"load\",t,!1);},n.on=function(t,e,n,o){t.attachEvent?t.attachEvent(\"on\"+e,n):t.addEventListener&&t.addEventListener(e,n,o);},n.request=function(t){if(t&&\"undefined\"!=typeof XDomainRequest)return new XDomainRequest;if(\"undefined\"!=typeof XMLHttpRequest&&(!t||n.ua.hasCORS))return new XMLHttpRequest;if(!t)try{return new(window[[\"Active\"].concat(\"Object\").join(\"X\")])(\"Microsoft.XMLHTTP\")}catch(t){}return null},\"undefined\"!=typeof window&&n.load(function(){r=!0;}),n.defer=function(t){if(!n.ua.webkit||\"undefined\"!=typeof importScripts)return t();n.load(function(){setTimeout(t,100);});},n.merge=function(t,e,o,i){var r,s=i||[],c=void 0===o?2:o;for(r in e)e.hasOwnProperty(r)&&n.indexOf(s,r)<0&&(\"object\"==typeof t[r]&&c?n.merge(t[r],e[r],c-1,s):(t[r]=e[r],s.push(e[r])));return t},n.mixin=function(t,e){n.merge(t.prototype,e.prototype);},n.inherit=function(t,e){function n(){}n.prototype=e.prototype,t.prototype=new n;},n.isArray=Array.isArray||function(t){return \"[object Array]\"===Object.prototype.toString.call(t)},n.intersect=function(t,e){for(var o=[],i=t.length>e.length?t:e,r=t.length>e.length?e:t,s=0,c=r.length;s<c;s++)~n.indexOf(i,r[s])&&o.push(r[s]);return o},n.indexOf=function(t,e,n){for(var o=t.length,n=n<0?n+o<0?0:n+o:n||0;n<o&&t[n]!==e;n++);return o<=n?-1:n},n.toArray=function(t){for(var e=[],n=0,o=t.length;n<o;n++)e.push(t[n]);return e},n.ua={},n.ua.hasCORS=\"undefined\"!=typeof XMLHttpRequest&&function(){try{var t=new XMLHttpRequest;}catch(t){return !1}return void 0!=t.withCredentials}(),n.ua.webkit=\"undefined\"!=typeof navigator&&/webkit/i.test(navigator.userAgent);}(void 0!==o?o:n.exports,void 0===t?window:t),function(t,e){function n(){}t.EventEmitter=n,n.prototype.on=function(t,n){return this.$events||(this.$events={}),this.$events[t]?e.util.isArray(this.$events[t])?this.$events[t].push(n):this.$events[t]=[this.$events[t],n]:this.$events[t]=n,this},n.prototype.addListener=n.prototype.on,n.prototype.once=function(t,e){function n(){o.removeListener(t,n),e.apply(this,arguments);}var o=this;return n.listener=e,this.on(t,n),this},n.prototype.removeListener=function(t,n){if(this.$events&&this.$events[t]){var o=this.$events[t];if(e.util.isArray(o)){for(var i=-1,r=0,s=o.length;r<s;r++)if(o[r]===n||o[r].listener&&o[r].listener===n){i=r;break}if(i<0)return this;o.splice(i,1),o.length||delete this.$events[t];}else (o===n||o.listener&&o.listener===n)&&delete this.$events[t];}return this},n.prototype.removeAllListeners=function(t){return this.$events&&this.$events[t]&&(this.$events[t]=null),this},n.prototype.listeners=function(t){return this.$events||(this.$events={}),this.$events[t]||(this.$events[t]=[]),e.util.isArray(this.$events[t])||(this.$events[t]=[this.$events[t]]),this.$events[t]},n.prototype.emit=function(t){if(!this.$events)return !1;var n=this.$events[t];if(!n)return !1;var o=Array.prototype.slice.call(arguments,1);if(\"function\"==typeof n)n.apply(this,o);else {if(!e.util.isArray(n))return !1;for(var i=n.slice(),r=0,s=i.length;r<s;r++)i[r].apply(this,o);}return !0};}(void 0!==o?o:n.exports,void 0!==o?o:n.parent.exports),function(t,e){if(e&&e.parse)return t.JSON={parse:e.parse,stringify:e.stringify};throw new Error(\"JSON not available\")}(void 0!==o?o:n.exports,\"undefined\"!=typeof JSON?JSON:void 0),function(t,e){var n=t.parser={},o=n.packets=[\"disconnect\",\"connect\",\"heartbeat\",\"message\",\"json\",\"event\",\"ack\",\"error\",\"noop\"],i=n.reasons=[\"transport not supported\",\"client not handshaken\",\"unauthorized\"],r=n.advice=[\"reconnect\"],s=e.JSON,c=e.util.indexOf;n.encodePacket=function(t){var e=c(o,t.type),n=t.id||\"\",a=t.endpoint||\"\",h=t.ack,u=null;switch(t.type){case\"error\":var p=t.reason?c(i,t.reason):\"\",l=t.advice?c(r,t.advice):\"\";\"\"===p&&\"\"===l||(u=p+(\"\"!==l?\"+\"+l:\"\"));break;case\"message\":\"\"!==t.data&&(u=t.data);break;case\"event\":var d={name:t.name};t.args&&t.args.length&&(d.args=t.args),u=s.stringify(d);break;case\"json\":u=s.stringify(t.data);break;case\"connect\":t.qs&&(u=t.qs);break;case\"ack\":u=t.ackId+(t.args&&t.args.length?\"+\"+s.stringify(t.args):\"\");}var g=[e,n+(\"data\"==h?\"+\":\"\"),a];return null!==u&&void 0!==u&&g.push(u),g.join(\":\")},n.encodePayload=function(t){var e=\"\";if(1==t.length)return t[0];for(var n=0,o=t.length;n<o;n++){e+=\"�\"+t[n].length+\"�\"+t[n];}return e};var a=/([^:]+):([0-9]+)?(\\+)?:([^:]+)?:?([\\s\\S]*)?/;n.decodePacket=function(t){var e=t.match(a);if(!e)return {};var n=e[2]||\"\",t=e[5]||\"\",c={type:o[e[1]],endpoint:e[4]||\"\"};switch(n&&(c.id=n,e[3]?c.ack=\"data\":c.ack=!0),c.type){case\"error\":var e=t.split(\"+\");c.reason=i[e[0]]||\"\",c.advice=r[e[1]]||\"\";break;case\"message\":c.data=t||\"\";break;case\"event\":try{var h=s.parse(t);c.name=h.name,c.args=h.args;}catch(t){}c.args=c.args||[];break;case\"json\":try{c.data=s.parse(t);}catch(t){}break;case\"connect\":c.qs=t||\"\";break;case\"ack\":var e=t.match(/^([0-9]+)(\\+)?(.*)/);if(e&&(c.ackId=e[1],c.args=[],e[3]))try{c.args=e[3]?s.parse(e[3]):[];}catch(t){}break;case\"disconnect\":c.reason=t;}return c},n.decodePayload=function(t){if(\"�\"==t.charAt(0)){for(var e=[],o=1,i=\"\";o<t.length;o++)\"�\"==t.charAt(o)?(e.push(n.decodePacket(t.substr(o+1).substr(0,i))),o+=Number(i)+1,i=\"\"):i+=t.charAt(o);return e}return [n.decodePacket(t)]};}(void 0!==o?o:n.exports,void 0!==o?o:n.parent.exports),function(t,e){function n(t,e){this.socket=t,this.sessid=e,this.connectErrorCallback=void 0,this.isOpened=!1;}t.Transport=n,e.util.mixin(n,e.EventEmitter),n.prototype.onData=function(t){if(this.clearCloseTimeout(),(this.socket.connected||this.socket.connecting||this.socket.reconnecting)&&this.setCloseTimeout(),\"\"!==t){var n=e.parser.decodePayload(t);if(n&&n.length)for(var o=0,i=n.length;o<i;o++)this.onPacket(n[o]);}return this},n.prototype.onPacket=function(t){return this.socket.setHeartbeatTimeout(),\"heartbeat\"==t.type?this.onHeartbeat():(\"connect\"==t.type&&\"\"==t.endpoint&&this.onConnect(),\"error\"==t.type&&\"reconnect\"==t.advice&&(this.isOpened=!1),this.socket.onPacket(t),this)},n.prototype.setCloseTimeout=function(){if(!this.closeTimeout){var t=this;this.closeTimeout=setTimeout(function(){t.onDisconnect();},this.socket.closeTimeout);}},n.prototype.onDisconnect=function(){return this.close&&this.isOpened&&this.close(),this.clearTimeouts(),this.socket.onDisconnect(),this},n.prototype.onConnect=function(){return this.socket.onConnect(),this.connectErrorCallback=void 0,this},n.prototype.clearCloseTimeout=function(){this.closeTimeout&&(clearTimeout(this.closeTimeout),this.closeTimeout=null);},n.prototype.clearTimeouts=function(){this.clearCloseTimeout(),this.reopenTimeout&&clearTimeout(this.reopenTimeout);},n.prototype.packet=function(t){this.send(e.parser.encodePacket(t));},n.prototype.onHeartbeat=function(t){this.packet({type:\"heartbeat\"});},n.prototype.onOpen=function(){this.isOpened=!0,this.clearCloseTimeout(),this.socket.onOpen();},n.prototype.onClose=function(){this.isOpened=!1,this.socket.onClose(),this.onDisconnect();},n.prototype.prepareUrl=function(){var t=this.socket.options;return this.scheme()+\"://\"+t.host+\":\"+t.port+\"/\"+t.resource+\"/\"+e.protocol+\"/\"+this.name+\"/\"+this.sessid},n.prototype.ready=function(t,e){e.call(this);},n.prototype.clearEventHandlers=function(){return this};}(void 0!==o?o:n.exports,void 0!==o?o:n.parent.exports),function(t,e,n){function o(t){if(this.options={port:80,secure:!1,document:\"document\"in n&&document,resource:\"socket.io\",transports:e.transports.slice(),\"connect timeout\":1e4,\"try multiple transports\":!0,reconnect:!0,\"reconnection delay\":500,\"reconnection limit\":1/0,\"reopen delay\":3e3,\"max reconnection attempts\":10,\"sync disconnect on unload\":!0,\"auto connect\":!0,\"flash policy port\":10843},e.util.merge(this.options,t),this.connected=!1,this.open=!1,this.connecting=!1,this.reconnecting=!1,this.namespaces={},this.buffer=[],this.doBuffer=!1,this.disconnected=!1,this.options[\"sync disconnect on unload\"]&&(!this.isXDomain()||e.util.ua.hasCORS)){var o=this;e.util.on(n,\"unload\",function(){o.disconnectSync();},!1);}this.options[\"auto connect\"]&&this.connect();}function i(){}t.Socket=o,e.util.mixin(o,e.EventEmitter),o.prototype.of=function(t){return this.namespaces[t]||(this.namespaces[t]=new e.SocketNamespace(this,t),\"\"!==t&&this.namespaces[t].packet({type:\"connect\"})),this.namespaces[t]},o.prototype.publish=function(){this.emit.apply(this,arguments);var t;for(var e in this.namespaces)this.namespaces.hasOwnProperty(e)&&(t=this.of(e),t.$emit.apply(t,arguments));},o.prototype.handshake=function(t){function n(e){e instanceof Error?o.onError(e.message):t.apply(null,e.split(\":\"));}var o=this,r=this.options;if(!o.disconnected){var s=[\"http\"+(r.secure?\"s\":\"\")+\":/\",r.host+\":\"+r.port,r.resource,e.protocol,e.util.query(this.options.query,\"t=\"+ +new Date)].join(\"/\");if(this.isXDomain()&&!e.util.ua.hasCORS){var c=document.getElementsByTagName(\"script\")[0],a=document.createElement(\"script\");a.src=s+\"&jsonp=\"+e.j.length,c.parentNode.insertBefore(a,c),e.j.push(function(t){n(t),a.parentNode.removeChild(a);});}else {var h=e.util.request();h.open(\"GET\",s,!0),h.withCredentials=!0,h.onreadystatechange=function(){4==h.readyState&&(h.onreadystatechange=i,200==h.status?n(h.responseText):!o.reconnecting&&o.onError(h.responseText));},h.send(null);}}},o.prototype.getTransport=function(t){for(var n,o=t||this.transports,i=0;n=o[i];i++)if(e.Transport[n]&&e.Transport[n].check(this)&&(!this.isXDomain()||e.Transport[n].xdomainCheck()))return new e.Transport[n](this,this.sessionid);return null},o.prototype.connect=function(t){if(this.connecting||this.disconnected)return this;var n=this;return this.handshake(function(o,i,r,s){function c(){if(!n.connected&&!n.disconnected)if(n.connecting=!1,clearTimeout(n.connectTimeoutTimer),n.options[\"try multiple transports\"]){for(;n.remainingTransports.length>0&&n.remainingTransports.splice(0,1)[0]!=n.transport.name;);n.remainingTransports.length?a(n.remainingTransports):n.publish(\"connect_failed\");}else n.publish(\"connect_failed\");}function a(t){if(n.transport&&(n.transport.clearTimeouts(),n.transport.clearEventHandlers()),n.transport=n.getTransport(t),!n.transport||n.disconnected)return n.publish(\"connect_failed\");n.transport.ready(n,function(){n.connecting=!0,n.publish(\"connecting\",n.transport.name),n.transport.open(c),n.options[\"connect timeout\"]&&(n.connectTimeoutTimer=setTimeout(function(){c();},n.options[\"connect timeout\"]));});}n.sessionid=o,n.closeTimeout=1e3*r+2e3,n.heartbeatTimeout=1e3*i+2e3,n.transports=s?e.util.intersect(s.split(\",\"),n.options.transports):n.options.transports,n.setHeartbeatTimeout(),n.remainingTransports=n.transports.slice(0),a(n.transports),n.once(\"connect\",function(){clearTimeout(n.connectTimeoutTimer),t&&\"function\"==typeof t&&t();});}),this},o.prototype.setHeartbeatTimeout=function(){clearTimeout(this.heartbeatTimeoutTimer);var t=this;this.heartbeatTimeoutTimer=setTimeout(function(){t.transport.onClose();},this.heartbeatTimeout);},o.prototype.packet=function(t){return this.connected&&!this.doBuffer?this.transport.packet(t):this.buffer.push(t),this},o.prototype.setBuffer=function(t){this.doBuffer=t,!t&&this.connected&&this.buffer.length&&(this.transport.payload(this.buffer),this.buffer=[]);},o.prototype.disconnect=function(){return (this.connected||this.connecting)&&(this.open&&this.of(\"\").packet({type:\"disconnect\"}),this.onDisconnect(\"booted\")),this.disconnected=!0,this},o.prototype.disconnectSync=function(){var t=e.util.request(),n=this.resource+\"/\"+e.protocol+\"/\"+this.sessionid;t.open(\"GET\",n,!0),this.onDisconnect(\"booted\");},o.prototype.isXDomain=function(){var t=n.location.port||(\"https:\"==n.location.protocol?443:80);return this.options.host!==n.location.hostname||this.options.port!=t},o.prototype.onConnect=function(){this.connected||(this.connected=!0,this.connecting=!1,this.doBuffer||this.setBuffer(!1),this.emit(\"connect\"));},o.prototype.onOpen=function(){this.open=!0;},o.prototype.onClose=function(){this.open=!1,clearTimeout(this.heartbeatTimeoutTimer);},o.prototype.onPacket=function(t){this.of(t.endpoint).onPacket(t);},o.prototype.onError=function(t){t&&t.advice&&\"reconnect\"===t.advice&&(this.connected||this.connecting)&&(this.disconnect(),this.options.reconnect&&this.reconnect()),this.publish(\"error\",t&&t.reason?t.reason:t);},o.prototype.onDisconnect=function(t){var e=this.connected,n=this.connecting;this.connected=!1,this.connecting=!1,this.open=!1,(e||n)&&(this.transport.close(),this.transport.clearTimeouts(),e&&(this.publish(\"disconnect\",t),\"booted\"!=t&&this.options.reconnect&&!this.reconnecting&&this.reconnect()));},o.prototype.reconnect=function(){function t(){if(n.connected){for(var t in n.namespaces)n.namespaces.hasOwnProperty(t)&&\"\"!==t&&n.namespaces[t].packet({type:\"connect\"});n.publish(\"reconnect\",n.transport.name,n.reconnectionAttempts);}clearTimeout(n.reconnectionTimer),n.removeListener(\"connect_failed\",e),n.removeListener(\"connect\",e),n.reconnecting=!1,delete n.reconnectionAttempts,delete n.reconnectionDelay,delete n.reconnectionTimer,delete n.redoTransports,n.options[\"try multiple transports\"]=i;}function e(){if(n.reconnecting)return n.connected?t():n.connecting&&n.reconnecting?n.reconnectionTimer=setTimeout(e,1e3):void(n.reconnectionAttempts++>=o?n.redoTransports?(n.publish(\"reconnect_failed\"),t()):(n.on(\"connect_failed\",e),n.options[\"try multiple transports\"]=!0,n.transport=n.getTransport(),n.redoTransports=!0,n.connect()):(n.reconnectionDelay<r&&(n.reconnectionDelay*=2),n.connect(),n.publish(\"reconnecting\",n.reconnectionDelay,n.reconnectionAttempts),n.reconnectionTimer=setTimeout(e,n.reconnectionDelay)))}this.reconnecting=!0,this.reconnectionAttempts=0,this.reconnectionDelay=this.options[\"reconnection delay\"];var n=this,o=this.options[\"max reconnection attempts\"],i=this.options[\"try multiple transports\"],r=this.options[\"reconnection limit\"];this.options[\"try multiple transports\"]=!1,this.reconnectionTimer=setTimeout(e,this.reconnectionDelay),this.on(\"connect\",e);};}(void 0!==o?o:n.exports,void 0!==o?o:n.parent.exports,void 0===t?window:t),function(t,e){function n(t,e){this.socket=t,this.name=e||\"\",this.flags={},this.json=new o(this,\"json\"),this.ackPackets=0,this.acks={};}function o(t,e){this.namespace=t,this.name=e;}t.SocketNamespace=n,e.util.mixin(n,e.EventEmitter),n.prototype.$emit=e.EventEmitter.prototype.emit,n.prototype.of=function(){return this.socket.of.apply(this.socket,arguments)},n.prototype.packet=function(t){return t.endpoint=this.name,this.socket.packet(t),this.flags={},this},n.prototype.send=function(t,e){var n={type:this.flags.json?\"json\":\"message\",data:t};return \"function\"==typeof e&&(n.id=++this.ackPackets,n.ack=!0,this.acks[n.id]=e),this.packet(n)},n.prototype.emit=function(t){var e=Array.prototype.slice.call(arguments,1),n=e[e.length-1],o={type:\"event\",name:t};return \"function\"==typeof n&&(o.id=++this.ackPackets,o.ack=\"data\",this.acks[o.id]=n,e=e.slice(0,e.length-1)),o.args=e,this.packet(o)},n.prototype.disconnect=function(){return \"\"===this.name?this.socket.disconnect():(this.packet({type:\"disconnect\"}),this.$emit(\"disconnect\")),this},n.prototype.onPacket=function(t){function n(){o.packet({type:\"ack\",args:e.util.toArray(arguments),ackId:t.id});}var o=this;switch(t.type){case\"connect\":this.$emit(\"connect\");break;case\"disconnect\":\"\"===this.name?this.socket.onDisconnect(t.reason||\"booted\"):this.$emit(\"disconnect\",t.reason||\"\");break;case\"message\":case\"json\":var i=[\"message\",t.data];\"data\"==t.ack?i.push(n):t.ack&&this.packet({type:\"ack\",ackId:t.id}),this.$emit.apply(this,i);break;case\"event\":var i=[t.name].concat(t.args);\"data\"==t.ack&&i.push(n),this.$emit.apply(this,i);break;case\"ack\":this.acks[t.ackId]&&(this.acks[t.ackId].apply(this,t.args),delete this.acks[t.ackId]);break;case\"error\":t.advice?this.socket.onError(t):\"unauthorized\"==t.reason?this.$emit(\"connect_failed\",t.reason):this.$emit(\"error\",t.reason);}},o.prototype.send=function(){this.namespace.flags[this.name]=!0,this.namespace.send.apply(this.namespace,arguments);},o.prototype.emit=function(){this.namespace.flags[this.name]=!0,this.namespace.emit.apply(this.namespace,arguments);};}(void 0!==o?o:n.exports,void 0!==o?o:n.parent.exports),function(t,e,n){function o(t){e.Transport.apply(this,arguments);}function i(){}t.websocket=o,e.util.inherit(o,e.Transport),o.prototype.name=\"websocket\",o.prototype.open=function(t){var o,i=e.util.query(this.socket.options.query),r=this;return this.connectErrorCallback=t,o||(o=n.MozWebSocket||n.WebSocket),this.websocket=new o(this.prepareUrl()+i),this.websocket.onopen=function(){r.onOpen(),r.socket.setBuffer(!1);},this.websocket.onmessage=function(t){r.onData(t.data);},this.websocket.onclose=function(){r.onClose(),r.socket.setBuffer(!0);},this.websocket.onerror=function(t){r.onError(t);},this},o.prototype.send=function(t){return this.websocket.send(t),this},o.prototype.payload=function(t){for(var e=0,n=t.length;e<n;e++)this.packet(t[e]);return this},o.prototype.close=function(){return this.websocket.close(),this},o.prototype.onError=function(t){void 0!==this.connectErrorCallback&&(this.connectErrorCallback(),this.connectErrorCallback=void 0),this.socket.onError(t);},o.prototype.scheme=function(){return this.socket.options.secure?\"wss\":\"ws\"},o.check=function(){return \"WebSocket\"in n&&!(\"__addTask\"in WebSocket)||\"MozWebSocket\"in n},o.xdomainCheck=function(){return !0},o.prototype.clearEventHandlers=function(){return this.websocket&&(this.websocket.onopen=this.websocket.onmessage=this.websocket.onclose=this.websocket.onerror=i),this},e.transports.push(\"websocket\");}(void 0!==o?o.Transport:n.exports,void 0!==o?o:n.parent.exports,void 0===t?window:t),function(t,e,n){function o(t){t&&(e.Transport.apply(this,arguments),this.sendBuffer=[]);}function i(){}t.XHR=o,e.util.inherit(o,e.Transport),o.prototype.open=function(){return this.socket.setBuffer(!1),this.onOpen(),this.get(),this.setCloseTimeout(),this},o.prototype.payload=function(t){for(var n=[],o=0,i=t.length;o<i;o++)n.push(e.parser.encodePacket(t[o]));this.send(e.parser.encodePayload(n));},o.prototype.send=function(t){return this.post(t),this},o.prototype.post=function(t){function e(){4==this.readyState&&(this.onreadystatechange=i,r.posting=!1,200==this.status?(r.socket.setBuffer(!1),clearTimeout(r.sendXHR.ackTimeoutTimer)):r.onClose());}function o(){this.onload=i,r.socket.setBuffer(!1);}var r=this;this.socket.setBuffer(!0),this.sendXHR=this.request(\"POST\"),n.XDomainRequest&&this.sendXHR instanceof XDomainRequest?this.sendXHR.onload=this.sendXHR.onerror=o:this.sendXHR.onreadystatechange=e,this.sendXHR.send(t),r.sendXHR.ackTimeoutTimer=setTimeout(function(){r.onClose();},r.socket.options.ackTimeoutMs);},o.prototype.close=function(){return this.onClose(),this},o.prototype.request=function(t){var n=e.util.request(this.socket.isXDomain()),o=e.util.query(this.socket.options.query,\"t=\"+ +new Date);if(n.open(t||\"GET\",this.prepareUrl()+o,!0),\"POST\"==t)try{n.setRequestHeader?n.setRequestHeader(\"Content-type\",\"text/plain;charset=UTF-8\"):n.contentType=\"text/plain\";}catch(t){}return n},o.prototype.scheme=function(){return this.socket.options.secure?\"https\":\"http\"},o.check=function(t,o){try{var i=e.util.request(o),r=n.XDomainRequest&&i instanceof XDomainRequest,s=t&&t.options&&t.options.secure?\"https:\":\"http:\",c=s!=n.location.protocol;if(i&&(!r||!c))return !0}catch(t){}return !1},o.xdomainCheck=function(){return o.check(null,!0)},o.prototype.clearEventHandlers=function(){return this.sendXHR&&(this.sendXHR.onreadystatechange=this.sendXHR.onload=i),this};}(void 0!==o?o.Transport:n.exports,void 0!==o?o:n.parent.exports,void 0===t?window:t),function(t,e,n){function o(){e.Transport.XHR.apply(this,arguments);}function i(){}t[\"xhr-polling\"]=o,e.util.inherit(o,e.Transport.XHR),e.util.merge(o,e.Transport.XHR),o.prototype.name=\"xhr-polling\",o.prototype.open=function(t){var n=this;return n.connectErrorCallback=t,e.Transport.XHR.prototype.open.call(n),!1},o.prototype.get=function(){function t(){4==this.readyState&&(this.onreadystatechange=i,200==this.status?(r.connectErrorCallback=void 0,r.onData(this.responseText),r.get()):(r.onClose(),void 0!==r.connectErrorCallback&&(r.connectErrorCallback(),r.connectErrorCallback=void 0)));}function e(){r.connectErrorCallback=void 0,this.onload=i,this.onerror=i,r.onData(this.responseText),r.get();}function o(){r.onClose(),void 0!==r.connectErrorCallback&&(r.connectErrorCallback(),r.connectErrorCallback=void 0);}if(this.isOpened){var r=this;this.xhr=this.request(),n.XDomainRequest&&this.xhr instanceof XDomainRequest?(this.xhr.onload=e,this.xhr.onerror=o):this.xhr.onreadystatechange=t,this.xhr.send(null);}},o.prototype.onClose=function(){if(e.Transport.XHR.prototype.onClose.call(this),this.xhr){this.xhr.onreadystatechange=this.xhr.onload=this.xhr.onerror=i;try{this.xhr.abort();}catch(t){}this.xhr=null;}},o.prototype.ready=function(t,n){var o=this;e.util.defer(function(){n.call(o);});},o.prototype.clearEventHandlers=function(){return e.Transport.XHR.prototype.clearEventHandlers.call(this),this.xhr&&(this.xhr.onreadystatechange=this.xhr.onload=this.xhr.onerror=i),this},e.transports.push(\"xhr-polling\");}(void 0!==o?o.Transport:n.exports,void 0!==o?o:n.parent.exports,void 0===t?window:t),e.io=o;}).call(e,n(10),n(11)(t));},function(t,e){var n;n=function(){return this}();try{n=n||Function(\"return this\")()||(0,eval)(\"this\");}catch(t){\"object\"==typeof window&&(n=window);}t.exports=n;},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,\"loaded\",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,\"id\",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t};},function(t,e,n){Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(3),i=n(1),r=n(0),s=function(){function t(t){this.id=t,this.status=200,this.headers={},this.body=\"\";}return t}();e.ResponseData=s;var c;!function(t){t.Connected=\"trouter_js_client_connected\",t.Disconnected=\"trouter_js_client_disconnected\",t.Error=\"trouter_js_client_error\",t.Progress=\"trouter_js_client_progress\",t.Response=\"trouter_js_client_response\",t.Request=\"trouter_js_client_request\",t.CheckConnection=\"trouter_js_client_check_connection\",t.Registration=\"trouter_js_client_registration\",t.Unregistration=\"trouter_js_client_unregistration\";}(c=e.ClientEventName||(e.ClientEventName={}));var a=function(){function t(t,e,n,o,i){this.stepName=t,this.operation=e,this.delta=n,this.ts=o,this.error=i;}return t}();e.TrackerStep=a;var h=function(){function t(){}return t}();e.Properties=h;var u=function(){function t(){this.numberOfPingReplies=0,this.connectedTimestamp=0,this.isNewUrl=!1,this.transportType=\"\",this.connectionNumber=0;}return t}(),p=function(){function t(){this.enabled=!1,this.numberOfStepsToMaintain=40,this.logHealthCheckError=!1,this.sendProgressTimeoutSecs=55,this.logSendPingError=!1,this.maxBackoffInMs=12e4,this.trouter_js_client_connected=!1,this.trouter_js_client_disconnected=!1,this.trouter_js_client_error=!1,this.trouter_js_client_progress=!1,this.trouter_js_client_response=!1,this.trouter_js_client_request=!1,this.trouter_js_client_registration=!1,this.trouter_js_client_unregistration=!1,this.trouter_js_client_check_connection=!0;}return t}(),l=function(){function t(t,e,n,i,s,c,a){this.clientId=e,this.clientInfo=n,this.getServerState=i,this.endpointId=s,this.clientCorrelationID=c,this.environment=a,this.logger=new r.Logger(\"ConnectionTracker\",t),this.clientCorrelationID=void 0!==c?c:\"\",this.steps=[],this.connectionAttempt=0,this.totalStepCount=0,this.beginTimestamp=new o.Timespan,this.eventLogSettings=new p,this.connectedInfo=new u;}return t.prototype.enable=function(t){this.eventLogSettings.enabled=!0,this.eventLogger=t;},t.prototype.disable=function(){this.eventLogSettings.enabled=!1;},t.prototype.sendProgress=function(t){this.steps.length>0&&this.sendTelemetry(c.Progress,t,this.steps);},t.prototype.cancelProgressTimer=function(){void 0!==this.progressTimeout&&(clearTimeout(this.progressTimeout),this.progressTimeout=void 0);},t.prototype.resetProgressSendTimer=function(){var t=this;this.cancelProgressTimer(),void 0!==this.eventLogSettings.sendProgressTimeoutSecs&&this.eventLogSettings.sendProgressTimeoutSecs>0&&(this.progressTimeout=setTimeout(function(){t.sendProgress({reason:\"timeout\",timeoutSecs:t.eventLogSettings.sendProgressTimeoutSecs});},1e3*this.eventLogSettings.sendProgressTimeoutSecs));},t.prototype.setConnectedInfo=function(t,e){this.connectedInfo.numberOfPingReplies=0,this.connectedInfo.connectedTimestamp=Date.now(),this.connectedInfo.isNewUrl=t,this.connectedInfo.transportType=e,++this.connectedInfo.connectionNumber;},t.prototype.clearConnectedInfo=function(){this.connectedInfo.numberOfPingReplies=0,this.connectedInfo.connectedTimestamp=0,this.connectedInfo.isNewUrl=!0,this.connectedInfo.transportType=\"\";},t.prototype.copyProperties=function(t,e){for(var n=0,o=Object.keys(e);n<o.length;n++){var i=o[n];e.hasOwnProperty(i)&&void 0!==e[i]&&(t[i.replace(/-/g,\"_\")]={value:e[i]});}},t.prototype.increasePingResponseCount=function(){++this.connectedInfo.numberOfPingReplies;},t.prototype.sendTelemetry=function(t,e,n){try{if(!0===this.eventLogSettings.enabled&&!0===this.eventLogSettings[t]&&void 0!==this.eventLogger){var r=this.getServerState(),s={name:t,properties:{connectionAttempt:{value:this.connectionAttempt},epid:{value:this.endpointId},clientCorrelationID:{value:this.clientCorrelationID},steps:{value:o.toJson(n)},clientID:{value:this.clientId},eventVersion:{value:3},environment:{value:this.environment},cv:{value:i.CLIENT_VERSION},ua:{value:this.clientInfo.ua},connectionId:{value:r.connectionId},connectedClientId:{value:r.connectedClientId},domId:{value:r.domId},url:{value:r.unsecureUrl},surl:{value:r.url},ttlInSecs:{value:r.getRemainingTtlInSec()},numberOfPingReplies:{value:this.connectedInfo.numberOfPingReplies},connectedTimestamp:{value:this.connectedInfo.connectedTimestamp},isNewUrl:{value:this.connectedInfo.isNewUrl},transportType:{value:this.connectedInfo.transportType},connectionNumber:{value:this.connectedInfo.connectionNumber}}};this.copyProperties(s.properties,e),this.eventLogger.logEvent(s);}}catch(e){this.logger.warn(\"error in sending event \"+t+\": \"+o.toJson(e));}},t.prototype.createStep=function(t,e,n){return new a(t,e,this.beginTimestamp.duration,Date.now(),n)},t.prototype.addStep=function(t,e,n){if(!1!==this.eventLogSettings.enabled&&(0===this.steps.length&&this.beginTimestamp.reset(),this.steps.push(this.createStep(t,e,n)),++this.totalStepCount,void 0!==this.eventLogSettings.numberOfStepsToMaintain&&this.steps.length>this.eventLogSettings.numberOfStepsToMaintain)){var o=this.steps.slice(0);this.steps.length=0,this.sendTelemetry(c.Progress,{reason:\"flush\"},o);}},t.prototype.trackStart=function(t){this.addStep(t,\"start\");},t.prototype.trackEnd=function(t){this.addStep(t,\"end\");},t.prototype.trackError=function(t,e,n,o){void 0===n&&(n=!0),\"health\"===t&&!0!==this.eventLogSettings.logHealthCheckError||\"ping\"===t&&!1===this.eventLogSettings.logSendPingError||(void 0===o&&(o=\"error\"),!0===n&&this.addStep(t,o,e),this.sendTelemetry(c.Error,{},[this.createStep(t,o,e)]));},t.prototype.trackProgress=function(t,e){this.addStep(t,e);},t.prototype.trackConnected=function(t,e){this.setConnectedInfo(t,e);var n=this.steps.slice(0),o=this.totalStepCount,i=this.beginTimestamp.duration;this.steps.length=0,this.totalStepCount=0,this.sendTelemetry(c.Connected,{stepCount:n.length,totalStepCount:o,connectionEstablishmentMs_Total:i},n),this.cancelProgressTimer();},t.prototype.trackDisconnected=function(t){t.sessionLengthMS=Date.now()-this.connectedInfo.connectedTimestamp,this.sendTelemetry(c.Disconnected,t,[]),this.resetProgressSendTimer();},t.prototype.trackNewConnection=function(){++this.connectionAttempt;},t.prototype.trackRequest=function(t,e){var n={};void 0!==e&&(n.hasError=!0,n.error=e);try{if(t){n.requestID=t.id,n.httpMethod=t.method,n.url=t.url,n.bodyLength=t.body.length,n.shortUrl=t.shortUrl,n.requestTimeStamp=t.startTS,n.correlationVector=t.correlationVector;for(var i=t.headers,r=0,s=Object.keys(i);r<s.length;r++){var a=s[r];i.hasOwnProperty(a)&&(n[a]=i[a]);}}}catch(t){n.hasError=!0,n.error=n.error+\" error creating request context \"+o.toJson(t);}this.sendTelemetry(c.Request,n,[]);},t.prototype.trackResponse=function(t,e,n,i){var r={};void 0!==i&&(r.hasError=!0,r.error=i);try{if(r.responseTimestamp=void 0!==n?n.sentTS:Date.now(),t){r.requestID=t.id,r.httpMethod=t.method,r.shortUrl=t.shortUrl,r.correlationVector=t.correlationVector;for(var s=t.headers,a=0,h=Object.keys(s);a<h.length;a++){var u=h[a];s.hasOwnProperty(u)&&(r[u]=s[u]);}}n&&(r.latencyMS=e,r.responseCode=n.status,r.responseLength=n.body.length);}catch(t){r.hasError=!0,r.error=r.error+\" error creating response context \"+o.toJson(t);}this.sendTelemetry(c.Response,r,[]);},t.prototype.sendResponseError=function(t,e,n){this.trackResponse(e,void 0,n,t);},t.prototype.close=function(){this.sendProgress({reason:\"closed\"}),this.steps.length=0,this.cancelProgressTimer();},t.prototype.mergeSettings=function(t){if(t){this.eventLogSettings.numberOfStepsToMaintain=Math.min(40,Math.max(10,void 0!==t.numberOfStepsToMaintain?t.numberOfStepsToMaintain:0));var e=Math.min(3600,Math.max(55,void 0!==t.sendProgressTimeoutSecs?t.sendProgressTimeoutSecs:0));this.eventLogSettings.logHealthCheckError=t.logHealthCheckError,this.eventLogSettings.logSendPingError=t.logSendPingError;for(var n=0,o=Object.keys(c).map(function(t){return c[t]});n<o.length;n++){var i=o[n];t.hasOwnProperty(i)&&void 0!==t[i]&&(this.eventLogSettings[i]=t[i]);}this.eventLogSettings.sendProgressTimeoutSecs!==e&&(this.eventLogSettings.sendProgressTimeoutSecs=e,this.resetProgressSendTimer());}},t}();e.ConnectionTracker=l;},function(t,e,n){Object.defineProperty(e,\"__esModule\",{value:!0});var o=function(){function t(t,e){this.logger=t,this.maxBackoffInMs=e,this.backoffId=0,this.backoffCount=0;}return t.calculateNextBackoffMs=function(t,e){var n=1+.4*(Math.random()-.5),o=1e3*Math.pow(2,t)*n;return o=Math.round(o),Math.min(e,o)},t.prototype.setMaxBackoffMs=function(t){this.maxBackoffInMs=t;},t.prototype.backoff=function(e,n){var o=this;void 0!==this.timerHandle&&(this.logger.debug(\"Clearing current back off\"),clearTimeout(this.timerHandle),this.timerHandle=void 0);var i=t.calculateNextBackoffMs(this.backoffCount,this.maxBackoffInMs);this.backoffId++,this.backoffCount++,this.logger.info(\"Backing off \"+e+\" for \"+i+\" milliseconds with ID \"+this.backoffId),this.timerHandle=setTimeout(function(){o.logger.info(\"Back off for \"+e+\" with ID \"+o.backoffId+\" complete, invoking handler\"),o.timerHandle=void 0,n();},i);},t.prototype.reset=function(){void 0!==this.timerHandle&&(this.logger.debug(\"Resetting back off\"),clearTimeout(this.timerHandle),this.timerHandle=void 0),this.backoffCount=0;},t}();e.ExponentialBackoff=o;},function(t,e,n){var o=this&&this.__assign||Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++){e=arguments[n];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);}return t};Object.defineProperty(e,\"__esModule\",{value:!0});var i=n(18),r=n(3),s=n(12),c=n(1),a=n(13),h=n(2),u=n(4),p=n(0),l=n(15),d=n(9),g=function(){function t(){this.cv=c.CLIENT_VERSION,this.ua=\"\",this.hr=\"\",this.v=\"\";}return t}(),f=function(){function t(){this[\"force new connection\"]=!0,this.reconnect=!1,this.query=\"\",this.ackTimeoutMs=5e3;}return t}(),m=\"MS-CV\",v=function(){function t(t){this.cvCounter=0;var e=JSON.parse(t);this.startTS=e.hasOwnProperty(\"startTS\")?e.startTS:0,this.url=e.hasOwnProperty(\"url\")?e.url:\"\",this.shortUrl=e.hasOwnProperty(\"shortUrl\")?e.shortUrl:\"\",this.body=e.hasOwnProperty(\"body\")?e.body:\"\",this.headers=e.hasOwnProperty(\"headers\")?e.headers:{},this.id=e.hasOwnProperty(\"id\")&&\"number\"==typeof e.id?e.id:-1,this.method=e.hasOwnProperty(\"method\")?e.method:\"\",this.replied=!1,this.timedout=!1,this.timeoutTimerId=0,this.receivedCv=this.headers[m],this.updateCvHeader();}return Object.defineProperty(t.prototype,\"correlationVector\",{get:function(){return this.receivedCv?this.receivedCv+\".\"+this.cvCounter:\"\"},enumerable:!0,configurable:!0}),t.prototype.on=function(t,e){\"data\"===t?this.dataCallback=e:\"end\"===t&&(\"function\"==typeof this.dataCallback&&this.dataCallback(this.body),e());},t.prototype.incrementCorrelationVector=function(){++this.cvCounter,this.updateCvHeader();},t.prototype.updateCvHeader=function(){var t=this.correlationVector;t&&(this.headers[m]=t);},t}(),y=function(){function t(t,e,n){this.request=t,this.responseData=e,this.sendResponse=n;}return t.prototype.writeHead=function(t,e){this.responseData.status=t,this.responseData.headers=e;},t.prototype.write=function(t){this.responseData.body+=t;},t.prototype.end=function(t){return t&&(this.responseData.body+=t),this.sendResponse(this.request,this.responseData)},t}(),k=function(){function t(t){this.name=t,this.args={},this.timeoutTimerId=0;}return t}(),T=function(){function t(t,e,n,o,r){var h=this;this.options=e,this.manager=n,this.tokenProvider=o,this.connectionId=\"\",this.inIncallMode=!1,this.connectionAttempt=0,this.connectedClientId=\"\",this.c2cUrlBase=\"\",this.allocationErrorsInRow=0,this.pendingTimers={},this.lastDisconnectReason=\"\",this.UNKNOWN_TRANSPORT=\"unknown_transport\",this.logger=new p.Logger(\"Connection\",t),this.timeoutOptions=this.options.timeoutOptions,this.healthBackoff=new a.ExponentialBackoff(this.logger,this.timeoutOptions.maxBackoffMs),this.tokenBackoff=new a.ExponentialBackoff(this.logger,this.timeoutOptions.maxBackoffMs),this.clientID=Date.now(),\"undefined\"!=typeof window&&window.location&&(this.domId=window.location.hostname),this.clientInfo=new g,this.clientInfo.cv=c.CLIENT_VERSION,this.clientInfo.ua=\"\",this.options&&this.options.clientInfo&&(this.clientInfo.ua=this.safeString(this.options.clientInfo.ua),this.clientInfo.v=this.safeString(this.options.clientInfo.v)),this.connectionTracker=new s.ConnectionTracker(t,this.clientID,this.clientInfo,function(){return h.getServerState()},this.options.endpointId,this.options.clientCorrelationID,this.options.environment),this.applyConnectionTrackerOptions(e);var u=this.options.incallModeTimeoutMs>0;if(this.fsm=new l.TrouterFsm(t,this,u),e.registration){var d={registrarUrl:e.registration.registrarUrl,registrationId:e.registration.registrationId,requestTimeoutMs:e.timeoutOptions.fetchTimeoutMs,initialRetryDelayMs:1e3,maxRetryDelayMs:e.timeoutOptions.maxBackoffMs};this.registrarClient=i.createRegistrarClient(t,this.tokenProvider,d);}this.userActivityState=r;}return t.prototype.start=function(t){this.logger.info(\"Starting\"),this.externalConnectParams=t,this.fsm.start();},t.prototype.stop=function(t){this.logger.info(\"Stopping\"),this.connectionTracker.close(),this.fsm.stop(t);},t.prototype.configure=function(t){var e=this.options.trouterUrl!==t.trouterUrl;this.options=t,this.applyConnectionTrackerOptions(t),e&&(this.logger.info(\"Configuration changed. Reconnection required.\"),this.fsm.onReconnectRequired(!1));},t.prototype.checkConnection=function(t){this.logger.info(\"checkConnection called with \"+t),this.fsm.checkConnection(t),t&&this.connectionTracker.sendTelemetry(s.ClientEventName.CheckConnection,{disconnectDetected:t},[]);},t.prototype.disableRegistrationsAndAutoReconnect=function(){this.stopRegisterTimer(),this.resetRegisterBackoff(),this.fsm.disableAutoReconnect();},t.prototype.getServerState=function(){return new u.ServerState(this.connectionId,this.connectedClientId,this.domId?this.domId:\"\",this.allocateResult?this.allocateResult.url:\"\",this.allocateResult?this.allocateResult.surl:\"\",this.c2cUrlBase,this.connectionExpireTimestampInSecs)},t.prototype.getToken=function(t,e){var n=this;this.logger.info(\"Getting token \"+(e?\"with backoff\":\"without backoff\"));var o=function(){n.connectionTracker.trackStart(\"token\"),n.tokenProvider(!t).then(function(t){n.logger.debug(\"token is received\"),n.connectionTracker.trackEnd(\"token\"),n.fsm.onTokenReceived(t);}).catch(function(e){var o=r.toJson(e.stack);n.logger.error(\"Getting token failed, will retry after timeout. Error: \"+o),n.connectionTracker.trackError(\"token\",o),n.getToken(t,!0);});};e?this.tokenBackoff.backoff(\"getting token\",o):(this.tokenBackoff.reset(),o());},t.prototype.startConnectionTimer=function(){var t=this;this.stopConnectionTimer(),this.logger.debug(\"Starting connection timeout for \"+this.timeoutOptions.connectionTimeoutMs+\" ms\"),this.connectionTimeoutId=setTimeout(function(){t.logger.info(\"Connection timeout is fired\"),t.fsm.onConnectingTimeout();},this.timeoutOptions.connectionTimeoutMs);},t.prototype.stopConnectionTimer=function(){this.connectionTimeoutId&&(this.logger.debug(\"Stopping connection timeout\"),clearTimeout(this.connectionTimeoutId),this.connectionTimeoutId=void 0);},t.prototype.startPingTimer=function(){var t=this;\"websocket\"===this.transportTypeName?(this.logger.debug(\"Starting ping timeout for \"+this.timeoutOptions.pingTimeoutMs+\" ms\"),this.pingTimerId=setInterval(function(){t.logger.info(\"Ping interval fired\"),t.fsm.onPingInterval();},this.timeoutOptions.pingTimeoutMs)):this.logger.debug(\"Not starting ping for transport \"+this.transportTypeName);},t.prototype.stopPingTimer=function(){this.pingTimerId&&(this.logger.debug(\"Stopping ping timeout\"),this.clearPingResponseTimer(),clearInterval(this.pingTimerId),this.pingTimerId=void 0);},t.prototype.shouldSkipRegistration=function(){return void 0===this.options.registration},t.prototype.hasCustomRegisterTtl=function(){return this.options.registration&&this.options.registration.registrarTtlSec},t.prototype.startRegisterTimer=function(){var t=this;void 0!==this.registrationTimerId&&this.stopRegisterTimer();var e=this.getRegistrationTtl()-30;this.logger.debug(\"Starting registration timeout for \"+e+\" sec\"),this.registrationTimerId=setTimeout(function(){t.logger.info(\"Registration timeout is fired\"),t.registrationTimerId=setTimeout(function(){t.registrationTimerId=void 0,t.logger.debug(\"Re-registration did not happen in time\"),t.dispatchUnregistered();},3e4),t.fsm.onRegistrationTimeout();},1e3*e);},t.prototype.stopRegisterTimer=function(){this.registrationTimerId&&(this.logger.debug(\"Stopping registration timeout\"),clearTimeout(this.registrationTimerId),this.registrationTimerId=void 0);},t.prototype.resendRegistration=function(){if(!this.registrarClient)throw new Error(\"Trouter Client not configured to handle registrations\");return this.registrarClient.resendRegistration()},t.prototype.buildSocketIoUrlParams=function(){if(!this.allocateResult)throw new Error(\"Allocate result is undefined in buildSocketIoUrlParams()\");for(var t={},e=this.allocateResult.connectparams,n=0,o=Object.keys(e);n<o.length;n++){var i=o[n];e.hasOwnProperty(i)&&void 0!==e[i]&&(t[i]=e[i]);}return t.v=\"v4\",t.tc=encodeURI(r.toJson(this.clientInfo)),t.timeout=this.timeoutOptions.pingTimeoutMs/1e3,t.auth=\"true\",this.options.endpointId&&(t.epid=this.options.endpointId),this.userActivityState.state!==h.UserActivityState.Unknown&&(t.userActivity=encodeURI(r.toJson(this.userActivityState.toEventObject()))),this.appendConnectedClientIds(this.buildQuery(t),!0)},t.prototype.startSocketIo=function(){var t=this;if(this.logger.info(\"Starting socket io\"),this.connectionTracker.trackStart(\"connectSocket\"),!this.allocateResult)throw new Error(\"Allocate result is undefined in startSocketIo()\");var e=this.options.ioOptions||new f;if(e[\"force new connection\"]=!0,e.reconnect=!1,e.query=this.buildSocketIoUrlParams(),this.logger.info(\"connecting to \"+this.allocateResult.socketio+\"?\"+e.query),this.stopSocketIo(),this.socket=(this.options.io||d).connect(this.allocateResult.socketio,e),void 0===this.socket)throw new Error(\"Can't create Socket.io object\");this.socket.on(\"connecting\",function(e){t.onSocketConnecting(e);}),this.socket.on(\"connect\",function(){t.onSocketConnect();}),this.socket.on(\"connect_failed\",function(e){t.onSocketConnectFailed(e);}),this.socket.on(\"disconnect\",function(e){t.onSocketDisconnect(e);}),this.socket.on(\"reconnect\",function(){t.onSocketReconnect();}),this.socket.on(\"reconnect_failed\",function(e){t.onSocketReconnectFailed(e);}),this.socket.on(\"reconnecting\",function(){t.onSocketReconnecting();}),this.socket.on(\"error\",function(e){t.onSocketError(e);}),this.socket.on(\"message\",function(e){t.onSocketMessage(e);}),this.socket.on(\"trouter.connected\",function(e){t.onTrouterConnected(e);}),this.socket.on(\"trouter.reconnect\",function(e){t.onTrouterReconnect(e);}),this.socket.on(\"trouter.message_loss\",function(e){t.onTrouterMessageLoss(e);});},t.prototype.stopSocketIo=function(){if(this.socket){this.logger.info(\"clearing socket.io\");try{for(var t=0,e=[\"connecting\",\"connect\",\"connect_failed\",\"disconnect\",\"reconnect\",\"reconnect_failed\",\"reconnecting\",\"error\",\"message\",\"trouter.connected\",\"trouter.reconnect\",\"trouter.message_loss\"];t<e.length;t++){var n=e[t];this.socket.removeAllListeners(n);}this.socket.disconnect(),this.logger.debug(\"cleared socket\"),this.socket=void 0;}catch(t){this.logger.error(\"exception in disconnecting previous socket. Error: \"+r.toJson(t.stack));}}},t.prototype.dispatchConnected=function(){this.logger.info(\"dispatching connected\"),this.manager.onConnected(this);},t.prototype.dispatchRegistered=function(){this.logger.info(\"dispatching registered\"),this.manager.onRegistered(this);},t.prototype.dispatchUnregistered=function(){this.logger.info(\"dispatching unregistered\"),this.manager.onUnregistered(this);},t.prototype.dispatchDownstreamRequest=function(t){var e=this;this.logger.info(\"dispatching downstream request\");try{var n=new y(t,new s.ResponseData(t.id),function(t,n){return e.logger.info(\"sending response to downstream\"),e.sendResponse(t,n)});this.manager.onDownstreamRequest(this,t,n);}catch(t){this.logger.error(\"exception in socket.on message. Error : \"+r.toJson(t.stack));}},t.prototype.dispatchReconnecting=function(){this.logger.info(\"dispatching reconnecting\"),this.manager.onReconnecting(this);},t.prototype.dispatchReconnectIsRequired=function(t){this.logger.info(\"dispatching reconnect is required by server\"),this.manager.onReconnectIsRequired(this,t);},t.prototype.dispatchDisconnected=function(){this.logger.info(\"dispatching disconnected\"),this.manager.onDisconnected(this);},t.prototype.dispatchTrouterMessageLost=function(t){this.logger.info(\"dispatching trouter lost message\"),this.manager.onTrouterMessageLost(t);},t.prototype.sendProcessedDroppedIndicators=function(t){var e=this;try{this.logger.info(\"emitting processed flow tags to the server\");var n=new k(\"trouter.processed_message_loss\");n.args={droppedIndicators:t},this.sendDownstreamEvent(n,function(){e.logger.info(\"emitted processed flow tags to the server\");});}catch(t){var o=r.toJson(t.stack);this.logger.error(\"unable to send processed message loss event. Error: \"+o),this.connectionTracker.trackError(\"trouter.processed_message_loss\",o,!1);}},t.prototype.resetAllocationConnectionParams=function(){this.allocateResult&&(this.logger.info(\"Resetting allocation connection parameters\"),this.allocateResult=void 0);},t.prototype.sendAllocateRequest=function(t){var e=this;this.connectionAttempt++,this.connectionTracker.trackNewConnection();var n,i=this.options.trouterUrl,s=i;if(this.allocateResult)s=this.getReconnectUrlFromAllocateResult(this.allocateResult),n=this.allocateResult.connectparams;else {var c=this.externalConnectParams;c&&c.se&&parseInt(c.se,10)<=Date.now()+36e5&&(this.logger.warn(\"Dropping expired cached connection parameters: \"+new Date(parseInt(c.se,10))),this.externalConnectParams=c=void 0),c&&c.serviceUrl!==s&&(this.logger.warn(\"Dropping cached connection parameters for a different environment (\"+c.serviceUrl+\", now \"+s+\")\"),this.externalConnectParams=c=void 0),c&&c.reconnectUrl?(s=c.reconnectUrl,n=o({},c,{reconnectUrl:void 0})):n=c;}s=this.appendCorrelationIds(s,!1),s=this.appendEndpointId(s,!1),n&&(s+=\"&\"+this.buildQuery(n),n.v||(s+=\"&v=v4\"));var a=new Request(s,{method:\"POST\",mode:\"cors\",headers:new Headers({\"X-Skypetoken\":t,\"Content-Type\":\"text/plain\"})});this.logger.info(\"sendAllocateRequest: POST \"+s),this.connectionTracker.trackStart(\"allocation\");var h=-1;r.fetchWithTimeout(a,this.timeoutOptions.fetchTimeoutMs).then(function(t){if(h=t.status,!t.ok)throw new Error(t.statusText);var n=t.headers.get(\"content-type\");if(!n||\"application/json\"!==n&&\"application/json;\"!==n.substring(0,17))throw new Error(\"Content-type '\"+n+\"' is unexpected\");return e.connectionTracker.trackEnd(\"allocation\"),t.json()}).then(function(t){e.allocationErrorsInRow=0,e.onAllocationResponse(t,i);}).catch(function(t){e.allocationErrorsInRow++;var n=t+\", status code \"+h;e.logger.error(e.allocationErrorsInRow+\" failed allocation attempts in a row. Error: \"+n),e.connectionTracker.trackError(\"allocation\",n),e.allocationErrorsInRow>=2&&e.resetAllocationConnectionParams(),e.externalConnectParams&&e.connectionAttempt>2&&(h>=400&&h<=599?(e.logger.warn(e.connectionAttempt+\" connection attempts, server-side failure: erasing external connection parameters\"),e.externalConnectParams=void 0):e.externalConnectParams.reconnectUrl&&(e.logger.warn(e.connectionAttempt+\" connection attempts, erasing reconnect URL\"),delete e.externalConnectParams.reconnectUrl)),e.fsm.onAllocationFailed(401===h);});},t.prototype.sendPingRequest=function(){var t=this;if(this.socket&&void 0===this.pingResponseTimerId)try{this.logger.info(\"emitting ping event\"),this.socket.emit(\"ping\",function(){t.onPingResponse();}),this.pingResponseTimerId=setTimeout(function(){t.logger.error(\"Ping response timeout is fired\"),t.clearPingResponseTimer(),t.fsm.onPingResponseTimeout();},this.timeoutOptions.pongTimeoutMs);}catch(t){var e=r.toJson(t.stack);this.logger.error(\"unable to send ping. Error: \"+e),this.connectionTracker.trackError(\"ping\",e,!1);}},t.prototype.setUserActivityState=function(t){var e=t.state!==this.userActivityState.state;this.userActivityState=t,this.fsm.onSetUserActivityState(t,e);},t.prototype.sendUserActivityState=function(t,e){this.userActivityState.state!==h.UserActivityState.Unknown&&(\"websocket\"===this.transportTypeName&&e?t===u.UserActivityEventReason.Connected?this.sendUserActivityStateMultiple(2):this.sendUserActivityStateMultiple(1):\"xhr-polling\"===this.transportTypeName&&t===u.UserActivityEventReason.Modified&&this.fsm.forceReconnect());},t.prototype.sendRegisterRequest=function(){var t=this;if(!this.options.registration||!this.registrarClient)throw new Error(\"Internal error - options.registration is undefined\");if(!this.allocateResult)throw new Error(\"Allocate result is undefined in sendRegisterRequest()\");this.logger.info(\"sending register request\");var e=new r.Timespan;this.connectionTracker.trackStart(\"registration\"),this.registrarClient.register({appId:this.options.registration.pnhAppId,aesKey:\"\",languageId:\"en-US\",platform:this.options.registration.platform,templateKey:this.options.registration.pnhTemplateKey,platformUIVersion:this.options.registration.platformUIVersion,productContext:this.options.registration.productContext},{TROUTER:[{context:this.options.registration.context,path:this.allocateResult.surl,ttl:this.getRegistrationTtl()}]}).then(function(){t.logger.info(\"Register request successful\"),t.connectionTracker.trackEnd(\"registration\"),t.fsm.onRegistrationSucceed(),t.connectionTracker.sendTelemetry(s.ClientEventName.Registration,{duration:e.duration},[]);}).catch(function(n){t.logger.error(\"Register request failed. Error: \"+n),t.connectionTracker.trackError(\"registration\",n.message),t.fsm.onRegistrationFailed(!1),t.connectionTracker.sendTelemetry(s.ClientEventName.Registration,{duration:e.duration},[]);});},t.prototype.sendUnregisterRequest=function(){var t=this;this.logger.info(\"sending unregister request\");var e=new r.Timespan;if(!this.options.registration||!this.registrarClient)throw new Error(\"Internal error - options.registration is undefined\");this.connectionTracker.trackStart(\"unregistration\"),this.registrarClient.unregister().then(function(){t.logger.info(\"Unregister request successful\"),t.connectionTracker.trackEnd(\"unregistration\"),t.fsm.onUnregistrationSucceed(),t.connectionTracker.sendTelemetry(s.ClientEventName.Unregistration,{duration:e.duration},[]);}).catch(function(n){t.logger.error(\"Unregister request failed. Error: \"+n),t.connectionTracker.trackError(\"unregistration\",n.message),t.fsm.onUnregistrationFailed(!1),t.connectionTracker.sendTelemetry(s.ClientEventName.Unregistration,{duration:e.duration},[]);});},t.prototype.resetTokenBackoff=function(){this.tokenBackoff.reset();},t.prototype.resetRegisterBackoff=function(){this.registrarClient&&this.registrarClient.cancelPendingRequests();},t.prototype.clearTimers=function(){this.logger.debug(\"Clearing all pending downstream events related timers\");for(var t=0,e=Object.keys(this.pendingTimers);t<e.length;t++){var n=e[t];this.clearTimer(Number(n));}},t.prototype.restartIncallModeTimer=function(){var t=this;this.clearIncallModeTimerId(),this.logger.debug(\"Restarting incall mode timer\"),this.incallModeTimerId=setTimeout(function(){t.logger.info(\"Call mode timer fired\"),t.fsm.onIncallModeTimer();},this.options.incallModeTimeoutMs);},t.prototype.enterIncallMode=function(){this.logger.info(\"Entering incall mode\"),this.timeoutOptions=this.options.incallTimeoutOptions,this.healthBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs),this.tokenBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs),this.inIncallMode=!0;},t.prototype.exitIncallMode=function(){this.logger.info(\"Exiting incall mode\"),this.clearIncallModeTimerId(),this.timeoutOptions=this.options.timeoutOptions,this.healthBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs),this.tokenBackoff.setMaxBackoffMs(this.timeoutOptions.maxBackoffMs),this.inIncallMode=!1;},t.prototype.isIncallMode=function(){return this.inIncallMode},t.prototype.onSocketConnecting=function(t){this.logger.info(\"onSocketConnecting(\"+t+\")\"),this.transportTypeName=t,this.connectionTracker.trackProgress(\"connecting\",this.transportTypeName),this.fsm.onConnecting();},t.prototype.onSocketConnect=function(){this.logger.info(\"onSocketConnect\");},t.prototype.onSocketConnectFailed=function(t){this.logger.error(\"onSocketConnectFailed\"),this.connectionTracker.trackError(\"connect_failed\",t,!0,this.transportTypeName?this.transportTypeName:this.UNKNOWN_TRANSPORT),this.fsm.onConnectingFailed();},t.prototype.onSocketDisconnect=function(t){this.logger.error(\"onSocketDisconnect, reason: \"+t);var e={reason:t,serverClosed:!this.fsm.isActive()};this.connectionTracker.trackDisconnected(e),this.connectionTracker.clearConnectedInfo();var n=e.sessionLengthMS||0;\"dup\"===t&&\"dup\"===this.lastDisconnectReason&&n<this.options.duplicateDisconnectThresholdMs&&(this.logger.warn(\"Socket was closed by server as Duplicate for the second time in a row after \"+n+\" ms which is below the threshold of \"+this.options.duplicateDisconnectThresholdMs+\" ms. Resetting cached connection parameters and making a new allocation.\"),this.resetAllocationConnectionParams()),this.lastDisconnectReason=t,this.fsm.onSocketError(void 0),this.connectionExpireTimestampInSecs=void 0;},t.prototype.onSocketReconnect=function(){this.logger.error(\"onSocketReconnect\"),this.fsm.onTrouterConnected();},t.prototype.onSocketReconnectFailed=function(t){this.logger.error(\"onSocketReconnectFailed with '\"+t+\"'\"),this.fsm.onSocketError(\"string\"==typeof t?t:void 0);},t.prototype.onSocketReconnecting=function(){this.logger.error(\"onSocketReconnecting\");},t.prototype.onSocketError=function(t){this.logger.error(\"onSocketError with '\"+r.toJson(t)+\"'\"),this.connectionTracker.trackError(\"connectSocket\",t),this.fsm.onSocketError(\"string\"==typeof t?t:void 0);},t.prototype.onSocketMessage=function(t){var e=this;this.logger.info(\"onSocketMessage\");var n;try{n=new v(t);var o=n.headers&&n.headers[\"X-Microsoft-Skype-Chain-ID\"],i=o?\" Chain-Id \"+o:\"\";this.logger.info(\"Received request N \"+n.id+i+\" CV \"+n.correlationVector+\" to '\"+n.url+\"'\"),n.startTS=Date.now(),n.url&&this.urlPath&&0===n.url.indexOf(this.urlPath)&&(n.shortUrl=n.url.substring(this.urlPath.length));}catch(t){var c=r.toJson(t.stack);return this.logger.error(\"unable to parse request. Error: \"+c),this.connectionTracker.trackRequest(void 0,c),void this.connectionTracker.sendResponseError(\"unable to parse request, error: \"+t)}n.timeoutTimerId=setTimeout(function(){if(!n.replied){e.logger.error(\"Request \"+n.id+\" timed out\");var t=new s.ResponseData(n.id);t.status=504,t.headers={\"Trouter-Responder\":\"ClientLib\"},e.sendResponse(n,t),n.timedout=!0;}},this.timeoutOptions.requestTimeoutMs);try{this.connectionTracker.trackRequest(n),this.fsm.onDownstreamRequest(n);}catch(t){this.logger.error(\"exception in socket.on message. Error: \"+r.toJson(t.stack)),this.connectionTracker.sendResponseError(t.message,n,void 0);}},t.prototype.onTrouterConnected=function(t){if(!this.allocateResult)return void this.logger.error(\"Invalid internal state - received onTrouterConnected while allocateResult is not set\");this.logger.info(\"onTrouterConnected: \"+this.allocateResult.url),this.socket&&this.socket.socket&&this.socket.socket.options&&this.socket.socket.options.query&&(this.socket.socket.options.query+=\"&connected=true\"),this.urlPath=this.allocateResult.url.replace(/https?:\\/\\/([A-z0-9\\:\\$\\-\\_\\.\\+\\!\\*\\\"\\(\\)\\,]*)\\//,\"/\");var e=this.connectedUrl!==this.allocateResult.url;this.connectedUrl=this.allocateResult.url,this.connectionExpireTimestampInSecs=r.calculateExpireTsInSec(t.ttl),this.connectionTracker.trackEnd(\"connectSocket\"),this.connectionTracker.trackConnected(e,this.transportTypeName?this.transportTypeName:this.UNKNOWN_TRANSPORT),this.fsm.onTrouterConnected();},t.prototype.onTrouterReconnect=function(t){var e=t.target;this.logger.info(\"onTrouterReconnect target: \"+e),\"self\"===e?this.fsm.onReconnectRequired(!0):this.fsm.onReconnectRequired(!1);},t.prototype.onTrouterMessageLoss=function(t){this.logger.info(\"onTrouterMessageLoss\"),this.fsm.onTrouterMessageLost(t.droppedIndicators);},t.prototype.getReconnectUrlFromAllocateResult=function(t){return t.socketio+\"v4/a\"},t.prototype.onAllocationResponse=function(t,e){this.logger.info(\"Received allocation response \"+JSON.stringify(t)),this.allocateResult=t,this.externalConnectParams=void 0;var n=+t.ttl;if(this.connectionExpireTimestampInSecs=r.calculateExpireTsInSec(n),this.connectionId=this.allocateResult.id||\"\",this.connectedClientId=this.allocateResult.ccid,this.logger.info(\"connected client id set {connectedClientId:\"+this.connectedClientId+\"}\"),this.c2cUrlBase=t.curlb||\"\",\"\"===this.c2cUrlBase){var i=t.surl.indexOf(\"://\");i>=0&&(i=t.surl.indexOf(\"/\",i+3))>=5&&\":3443\"===t.surl.substr(i-5,5)&&(this.c2cUrlBase=t.surl.substr(0,i-5));}var s=o({serviceUrl:e,reconnectUrl:this.getReconnectUrlFromAllocateResult(this.allocateResult)},t.connectparams);this.manager.onConnectionParametersUpdated(s),this.fsm.onAllocationSucceed();},t.prototype.onPingResponse=function(){this.logger.info(\"onPingResponse\"),this.connectionTracker.increasePingResponseCount(),this.clearPingResponseTimer(),this.fsm.onPingResponse();},t.prototype.clearPingResponseTimer=function(){void 0!==this.pingResponseTimerId&&(clearTimeout(this.pingResponseTimerId),this.pingResponseTimerId=void 0);},t.prototype.buildQuery=function(t){for(var e=[],n=0,o=Object.keys(t);n<o.length;n++){var i=o[n];t.hasOwnProperty(i)&&void 0!==t[i]&&e.push(i+\"=\"+t[i]);}return e.join(\"&\")},t.prototype.appendConnectedClientIds=function(t,e){var n=\"\";t.indexOf(\"ccid=\")<0&&(n=\"ccid=\"+this.connectedClientId+\"&\"),this.domId&&(n+=\"dom=\"+this.domId+\"&\"),n.length>0&&(n=n.slice(0,-1));var o=e||-1!==t.indexOf(\"?\")?\"&\":\"?\";return this.appendCorrelationIds(t+o+n,e)},t.prototype.appendEndpointId=function(t,e){var n=e||-1!==t.indexOf(\"?\")?\"&\":\"?\";return t.indexOf(\"epid\")<0&&this.options.endpointId?\"\"+t+n+\"epid=\"+this.options.endpointId:t},t.prototype.appendCorrelationIds=function(t,e){var n=e||-1!==t.indexOf(\"?\")?\"&\":\"?\";return t.indexOf(\"cor_id\")<0?\"\"+t+n+\"cor_id=\"+this.options.clientCorrelationID+\"&con_num=\"+this.clientID+\"_\"+this.connectionAttempt:t},t.prototype.getHealthUrl=function(t){return t.substring(0,t.lastIndexOf(\"/a\"))+\"/h\"},t.prototype.safeString=function(t){return \"string\"==typeof t?t:\"\"},t.prototype.sendResponse=function(t,e){if(t.timedout)return this.logger.error(\"Request \"+t.id+\" already timed out\"),1;if(t.replied)return this.logger.error(\"Response for request \"+t.id+\" already sent\"),2;clearTimeout(t.timeoutTimerId),t.timeoutTimerId=0,t.replied=!0,e.headers=e.headers||{};var n=t.correlationVector;this.logger.info(\"Sending response for request N \"+t.id+\" CV \"+n+\" with status \"+e.status),n&&(e.headers[m]=n),t.headers&&t.headers[\"trouter-request\"]&&!e.headers[\"trouter-request\"]&&(e.headers[\"trouter-request\"]=t.headers[\"trouter-request\"]);var o=Date.now()-t.startTS;if(e.headers[\"trouter-client\"]=r.toJson({cd:o}),this.logger.debug(\"response: \"+r.toJson(e)),!this.socket)return this.connectionTracker.sendResponseError(\"no socket\",t,e),4;try{return this.socket.send(r.toJson(e)),e.sentTS=Date.now(),t.incrementCorrelationVector(),this.connectionTracker.trackResponse(t,o,e),\"websocket\"===this.transportTypeName&&this.sendPingRequest(),0}catch(n){var i=\"unable to send data on response.end. Error: \"+r.toJson(n.stack);return this.logger.error(i),this.connectionTracker.sendResponseError(i,t,e),4}},t.prototype.sendUserActivityStateMultiple=function(t){var e=this,n=new k(\"user.activity\"),o=this.userActivityState.toEventObject();n.args=o,this.userActivityState.correlationVector.increase(),this.logger.debug(\"Sending user activity '\"+this.userActivityState.toEventJSON()+\"', remaining \"+(t-1)),this.sendDownstreamEvent(n,function(){if(e.logger.info(\"User activity state: \"+o.state+\", cv: \"+o.cv+\" accepted\"),e.manager.onUserActivityStateAccepted&&e.manager.onUserActivityStateAccepted(o.cv),e.clearTimer(n.timeoutTimerId),t>1){var i=setTimeout(function(){e.clearTimer(i),e.sendUserActivityStateMultiple(t-1);},e.options.userActivitySecondResendDelayMs);e.registerTimer(i,\"user.activity/resend\");}}),n.timeoutTimerId=setTimeout(function(){e.logger.error(\"Activity state response timeout is fired\"),e.fsm.onActivityStateResponseTimeout(),e.clearTimer(n.timeoutTimerId);},this.timeoutOptions.userActivityResponseTimeoutMs),this.registerTimer(n.timeoutTimerId,\"user.activity/response\");},t.prototype.sendDownstreamEvent=function(t,e){this.logger.info(\"Sending downstream event \"+t.name),this.socket&&this.socket.emit(t.name,t.args,e);},t.prototype.registerTimer=function(t,e){this.logger.debug(\"registering timer \"+t+\" -> \"+e),this.pendingTimers[t]=e;},t.prototype.clearTimer=function(t){var e=this.pendingTimers[t];this.logger.debug(\"clearing timer \"+t+\" -> \"+e),delete this.pendingTimers[t],clearTimeout(t);},t.prototype.getRegistrationTtl=function(){var t=r.calculateTtlInSec(this.connectionExpireTimestampInSecs);return this.logger.debug(\"Current connectionID will expire in \"+t+\" seconds\"),this.options.registration&&this.options.registration.registrarTtlSec&&t>0?Math.min(this.options.registration.registrarTtlSec,t):this.options.registration&&this.options.registration.registrarTtlSec?this.options.registration.registrarTtlSec:t>0?t:3600},t.prototype.clearIncallModeTimerId=function(){void 0!==this.incallModeTimerId&&(this.logger.debug(\"Clearing in-call mode timer\"),clearTimeout(this.incallModeTimerId),this.incallModeTimerId=void 0);},t.prototype.applyConnectionTrackerOptions=function(t){try{t.eventLogger&&\"function\"==typeof t.eventLogger.logEvent?(this.connectionTracker.mergeSettings(t.telemetrySettings),this.connectionTracker.enable(t.eventLogger)):this.logger.warn(\"Trouter client event logging disabled due to invalid configuration.\");}catch(t){this.logger.warn(\"Trouter client event logging disabled. Error: \"+r.toJson(t.stack)),this.connectionTracker.disable();}},t}();e.TrouterConnection=T;},function(t,e,n){Object.defineProperty(e,\"__esModule\",{value:!0});var o,i=n(4),r=n(0);!function(t){t[t.Initial=0]=\"Initial\",t[t.RetrievingToken=1]=\"RetrievingToken\",t[t.Allocating=2]=\"Allocating\",t[t.Handshaking=3]=\"Handshaking\",t[t.Connecting=4]=\"Connecting\",t[t.Connected=5]=\"Connected\",t[t.UnregisteringRetrievingToken=6]=\"UnregisteringRetrievingToken\",t[t.Unregistering=7]=\"Unregistering\";}(o=e.State||(e.State={}));var s;!function(t){t[t.Initial=0]=\"Initial\",t[t.RetrievingToken=1]=\"RetrievingToken\",t[t.Registering=2]=\"Registering\",t[t.Registered=3]=\"Registered\",t[t.NotRegistered=4]=\"NotRegistered\";}(s||(s={}));var c=function(){function t(t,e,n){this.worker=e,this.incallModeEnabled=n,this.state=o.Initial,this.connectionErrors=0,this.autoReconnect=!0,this.logger=new r.Logger(\"ConnectionFsm\",t),this.connectedSubstate=s.Initial;}return t.prototype.getState=function(){return this.state},t.prototype.isActive=function(){return this.state===o.Allocating||this.state===o.Connected||this.state===o.Handshaking||this.state===o.Connecting||this.state===o.RetrievingToken},t.prototype.start=function(){return this.state===o.Initial?(this.setState(o.RetrievingToken),this.worker.getToken(!0,!1),!0):(this.showIgnored(\"start\"),!1)},t.prototype.stop=function(t){t&&(this.connectedSubstate=s.Initial),this.worker.isIncallMode()&&this.worker.exitIncallMode(),this.worker.resetTokenBackoff(),this.worker.resetRegisterBackoff(),this.worker.stopConnectionTimer(),this.worker.stopPingTimer(),this.worker.clearTimers(),this.worker.stopRegisterTimer(),this.state!==o.Connecting&&this.state!==o.Handshaking&&this.state!==o.Connected||this.worker.stopSocketIo(),this.isRegistered()&&this.state!==o.UnregisteringRetrievingToken&&this.state!==o.Unregistering?(this.setState(o.UnregisteringRetrievingToken),this.worker.getToken(!0,!1)):(this.setState(o.Initial),this.worker.dispatchDisconnected());},t.prototype.onTokenReceived=function(t){this.state===o.RetrievingToken?(this.setState(o.Allocating),this.worker.startConnectionTimer(),this.worker.sendAllocateRequest(t)):this.state===o.Connected&&this.connectedSubstate===s.RetrievingToken?(this.connectedSubstate=s.Registering,this.worker.sendRegisterRequest()):this.state===o.UnregisteringRetrievingToken?(this.setState(o.Unregistering),this.worker.sendUnregisterRequest()):this.showIgnored(\"onTokenReceived\");},t.prototype.checkConnection=function(t){t&&this.onPingInterval();},t.prototype.onAllocationSucceed=function(){return this.state===o.Allocating?(this.setState(o.Handshaking),this.connectedSubstate===s.Registered&&this.worker.dispatchUnregistered(),this.connectedSubstate=s.Initial,this.worker.startSocketIo(),!0):(this.showIgnored(\"onAllocationSucceed\"),!1)},t.prototype.onAllocationFailed=function(t){this.state===o.Allocating?(this.setState(o.RetrievingToken),this.worker.stopConnectionTimer(),this.worker.getToken(!t,!0)):this.showIgnored(\"onAllocationFailed\");},t.prototype.onConnectingTimeout=function(){this.state===o.Allocating||this.state===o.Connecting||this.state===o.Handshaking?(this.setState(o.RetrievingToken),this.resetAllocationIfNecessary(void 0),this.worker.stopSocketIo(),this.worker.getToken(!0,!1)):this.showIgnored(\"onConnectingTimeout\");},t.prototype.onConnecting=function(){this.state===o.Handshaking?this.setState(o.Connecting):this.showIgnored(\"onConnecting\");},t.prototype.onConnectingFailed=function(){this.state===o.Connecting?this.onConnectingTimeout():this.state===o.Handshaking?(this.logger.error(\"Unexpected error in Socket.io - no valid transports\"),this.onConnectingTimeout()):this.showIgnored(\"onConnectingFailed\");},t.prototype.onSocketError=function(t){this.state===o.Handshaking||this.state===o.Connected?(this.worker.stopSocketIo(),this.worker.stopPingTimer(),this.worker.clearTimers(),this.worker.stopConnectionTimer(),this.state!==o.Connected&&this.worker.resetAllocationConnectionParams(),this.autoReconnect?(this.setState(o.RetrievingToken),this.worker.resetRegisterBackoff(),this.worker.dispatchReconnecting(),this.worker.getToken(!0,!1)):(this.logger.debug(\"Socket error/disconnect occurred and automatic reconnect is disabled. Connection will stop.\"),this.stop(!0))):this.showIgnored(\"onSocketError\");},t.prototype.onTrouterConnected=function(){this.state===o.Connecting?(this.setState(o.Connected),this.worker.resetTokenBackoff(),this.worker.stopConnectionTimer(),this.worker.sendUserActivityState(i.UserActivityEventReason.Connected,!0),this.worker.startPingTimer(),this.worker.dispatchConnected(),this.connectionErrors=0,this.worker.shouldSkipRegistration()?(this.connectedSubstate=s.NotRegistered,this.worker.dispatchRegistered()):(this.connectedSubstate=s.RetrievingToken,this.worker.getToken(!0,!1))):this.showIgnored(\"onTrouterConnected\");},t.prototype.onReconnectRequired=function(t){this.worker.dispatchReconnectIsRequired(t);},t.prototype.disableAutoReconnect=function(){this.autoReconnect=!1;},t.prototype.onDownstreamRequest=function(t){this.state===o.Connected?(this.switchToIncallModeIfEnabled(),this.worker.dispatchDownstreamRequest(t)):this.showIgnored(\"onDownstreamRequest\");},t.prototype.onTrouterMessageLost=function(t){this.state===o.Connected?this.worker.dispatchTrouterMessageLost(t):this.showIgnored(\"onTrouterMessageLost\");},t.prototype.onPingInterval=function(){this.state===o.Connected?this.worker.sendPingRequest():this.showIgnored(\"onPingInterval\");},t.prototype.onPingResponseTimeout=function(){this.onMissedResponse(\"onPingResponseTimeout\");},t.prototype.onPingResponse=function(){this.state===o.Connected||this.showIgnored(\"onPingResponse\");},t.prototype.onRegistrationFailed=function(t){this.state===o.Connected&&this.connectedSubstate===s.Registering?(this.connectedSubstate=s.RetrievingToken,this.worker.getToken(!t,!0)):this.showIgnored(\"onRegistrationFailed\");},t.prototype.onRegistrationSucceed=function(){this.state===o.Connected?(this.connectedSubstate===s.Registering&&(this.connectedSubstate=s.Registered,this.worker.dispatchRegistered()),this.worker.hasCustomRegisterTtl()&&this.worker.startRegisterTimer()):this.showIgnored(\"onRegistrationSucceed\");},t.prototype.onRegistrationTimeout=function(){this.state===o.Connected&&this.connectedSubstate!==s.NotRegistered?(this.connectedSubstate=s.RetrievingToken,this.worker.getToken(!0,!1)):this.showIgnored(\"onRegistrationTimeout\");},t.prototype.onUnregistrationFailed=function(t){this.state===o.Unregistering?(this.setState(o.UnregisteringRetrievingToken),this.worker.getToken(!t,!t)):this.showIgnored(\"onUnregistrationFailed\");},t.prototype.onUnregistrationSucceed=function(){this.state===o.Unregistering?(this.setState(o.Initial),this.worker.dispatchUnregistered(),this.worker.dispatchDisconnected()):this.showIgnored(\"onUnregistrationSucceed\");},t.prototype.onIncallModeTimer=function(){this.worker.exitIncallMode(),this.state===o.Connected?(this.worker.stopPingTimer(),this.worker.startPingTimer()):this.showIgnored(\"onIncallModeTimer\");},t.prototype.onSetUserActivityState=function(t,e){e?(this.logger.info(\"Changing user activity state to '\"+t.toEventJSON()+\"'\"),this.worker.sendUserActivityState(i.UserActivityEventReason.Modified,this.state===o.Connected)):this.logger.debug(\"Not changing the same user activity state '\"+t.toEventJSON()+\"'\");},t.prototype.onActivityStateResponseTimeout=function(){this.onMissedResponse(\"onActivityStateResponseTimeout\");},t.prototype.forceReconnect=function(){this.setState(o.RetrievingToken),this.worker.resetTokenBackoff(),this.worker.stopConnectionTimer(),this.worker.resetRegisterBackoff(),this.worker.stopPingTimer(),this.worker.clearTimers(),this.worker.stopSocketIo(),this.worker.dispatchReconnecting(),this.worker.getToken(!0,!1);},t.prototype.onMissedResponse=function(t){this.state===o.Connected?(this.setState(o.RetrievingToken),this.worker.resetRegisterBackoff(),this.worker.stopPingTimer(),this.worker.clearTimers(),this.worker.stopSocketIo(),this.worker.dispatchReconnecting(),this.worker.getToken(!0,!1)):this.showIgnored(t);},t.prototype.showIgnored=function(t){this.logger.debug(\"Ignoring event '\"+t+\"' in state '\"+o[this.state]+\"'\");},t.prototype.setState=function(t){if(this.logger.info(\"Switching from state '\"+o[this.state]+\"' to state '\"+o[t]+\"'\"),this.state===t)return void this.logger.error(\"Attempt to switching into the current state '\"+o[t]+\"'\");this.state=t;},t.prototype.resetAllocationIfNecessary=function(t){this.connectionErrors++,this.connectionErrors>=2||void 0!==t&&/^4\\d\\d /.test(t)?(this.logger.error(\"Connection error count is \"+this.connectionErrors+\" - will reset allocation\"),this.connectionErrors=0):this.logger.info(\"Connection error count is \"+this.connectionErrors+\" - will NOT reset allocation\");},t.prototype.isRegistered=function(){return this.connectedSubstate===s.Registered||this.connectedSubstate===s.Registering},t.prototype.switchToIncallModeIfEnabled=function(){this.incallModeEnabled&&(this.worker.isIncallMode()||(this.worker.enterIncallMode(),this.worker.stopPingTimer(),this.worker.startPingTimer()),this.worker.restartIncallModeTimer());},t}();e.TrouterFsm=c;},function(t,e,n){Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(2),i=n(0),r=function(){function t(t,e){this.worker=e,this.state=o.TrouterState.Unknown,this.logger=new i.Logger(\"ManagerFsm\",t);}return t.prototype.start=function(){this.state===o.TrouterState.Unknown?(this.setState(o.TrouterState.Disconnected),this.worker.forceStopLingeringConnection(),this.worker.startFirstConnection()):this.showIgnored(\"start\");},t.prototype.stop=function(t){this.state!==o.TrouterState.Unknown?(this.setState(o.TrouterState.Unknown),this.worker.stopFirstConnection(!0===t),this.worker.stopSecondConnection(!0===t)):this.showIgnored(\"stop\");},t.prototype.getState=function(){return this.state},t.prototype.onConnected=function(t){this.state===o.TrouterState.Disconnected&&t?this.worker.doesSecondConnectionExist()?this.setState(o.TrouterState.Switching):(this.setState(o.TrouterState.Connected),this.worker.dispatchConnected()):this.showIgnored(\"onConnected(\"+t+\")\");},t.prototype.onRegistered=function(t){this.state!==o.TrouterState.Disconnected||t?this.state!==o.TrouterState.Switching||t||(this.setState(o.TrouterState.Connected),this.worker.switchConnections(),this.worker.stopSecondConnectionDelayed(),this.worker.dispatchConnected()):(this.setState(o.TrouterState.Connected),this.worker.switchConnections(),this.worker.stopSecondConnection(!0),this.worker.dispatchConnected()),this.worker.dispatchRegistrationState(!0);},t.prototype.onUnregistered=function(t){t&&this.worker.dispatchRegistrationState(!1);},t.prototype.onReconnecting=function(t){this.state===o.TrouterState.Connected&&t?(this.setState(o.TrouterState.Disconnected),this.worker.dispatchReconnecting()):this.state===o.TrouterState.Switching&&t?(this.setState(o.TrouterState.Disconnected),this.worker.dispatchReconnecting()):this.showIgnored(\"onReconnecting(\"+t+\")\");},t.prototype.onReconnectionRequired=function(t,e){this.state===o.TrouterState.Connected&&t?(this.setState(o.TrouterState.Switching),this.worker.startSecondConnection(e)):this.state===o.TrouterState.Disconnected&&t?this.worker.startSecondConnection(e):this.showIgnored(\"onReconnectionRequired(\"+t+\")\");},t.prototype.onDisconnected=function(t){this.state===o.TrouterState.Unknown&&t?this.worker.dispatchStopped():this.showIgnored(\"onDisconnected(\"+t+\")\");},t.prototype.showIgnored=function(t){this.logger.info(\"Ignoring event '\"+t+\"' in state '\"+o.TrouterState[this.state]+\"'\");},t.prototype.setState=function(t){if(this.logger.info(\"Switching from state '\"+o.TrouterState[this.state]+\"' to state '\"+o.TrouterState[t]+\"'\"),this.state===t)return void this.logger.error(\"Attempt to switching into the current state '\"+o.TrouterState[t]+\"'\");this.state=t;},t}();e.TrouterManagerFsm=r;},function(t,e,n){function o(t,e){if(!e)return t;var n=a({},t,{enabled:e.TelemetryEnabled});return void 0!==e.ClientTelemetryEventEnabled&&(n=a({},n,e.ClientTelemetryEventEnabled)),n}function i(t,e){return {clientInfo:{ua:t.trouterSettings.productName,v:t.trouterSettings.version},ioOptions:{ackTimeoutMs:5e3},clientCorrelationID:t.trouterSettings.sessionId,environment:t.trouterSettings.environment,telemetrySettings:o(t.telemetryConfig.settings,e),eventLogger:t.telemetryConfig.eventLogger,endpointId:t.trouterSettings.registrationId,trouterUrl:e&&e.TrouterConnectionUrl||t.trouterSettings.trouterServiceUrl,registration:t.trouterSettings.registrarServiceUrl?{registrarUrl:t.trouterSettings.registrarServiceUrl,registrationId:t.trouterSettings.registrationId||\"\",pnhAppId:t.trouterSettings.pnhAppId||\"\",platform:t.trouterSettings.platform||\"\",pnhTemplateKey:t.trouterSettings.pnhTemplate||\"\",platformUIVersion:t.trouterSettings.platformUIVersion||\"\",productContext:t.trouterSettings.pnhProductContext||void 0,context:t.trouterSettings.pnhContext||\"\",registrarTtlSec:(t.trouterSettings.maxRegistrationTimeInMs||0)/1e3}:void 0,timeoutOptions:a({connectionTimeoutMs:t.trouterSettings.trouterConnectTimeoutInMs||3e4,fetchTimeoutMs:1e4,pingTimeoutMs:4e4,pongTimeoutMs:5e3,maxBackoffMs:3e4,requestTimeoutMs:5e3,userActivityResponseTimeoutMs:1e4},t.trouterSettings.timeoutOptions),incallTimeoutOptions:a({connectionTimeoutMs:1e4,fetchTimeoutMs:5e3,pingTimeoutMs:5e3,pongTimeoutMs:2e3,maxBackoffMs:1e4,requestTimeoutMs:5e3,userActivityResponseTimeoutMs:1e4},t.trouterSettings.incallTimeoutOptions),incallModeTimeoutMs:t.trouterSettings.incallModeTimeoutMs||0,lingeringConnectionDelayMs:6e4,userActivitySecondResendDelayMs:t.trouterSettings.userActivitySecondResendDelayMs||1e4,duplicateDisconnectThresholdMs:1e4,connectionCache:t.connectionCache,registrationStateCallback:t.registrationStateCallbackForAcsDoNotUse}}function r(t){return new y(t)}function s(){return p.CLIENT_VERSION}function c(t,e){var n=t.indexOf(\"://\");if(n>=0){var o=t.indexOf(\"/\",n+3);if(o>=0)return e+t.substr(o)}return \"\"}var a=this&&this.__assign||Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++){e=arguments[n];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);}return t},h=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))(function(i,r){function s(t){try{a(o.next(t));}catch(t){r(t);}}function c(t){try{a(o.throw(t));}catch(t){r(t);}}function a(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,c);}a((o=o.apply(t,e||[])).next());})},u=this&&this.__generator||function(t,e){function n(t){return function(e){return o([t,e])}}function o(n){if(i)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(i=1,r&&(s=2&n[0]?r.return:n[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,n[1])).done)return s;switch(r=0,s&&(n=[2&n[0],s.value]),n[0]){case 0:case 1:s=n;break;case 4:return a.label++,{value:n[1],done:!1};case 5:a.label++,r=n[1],n=[0];continue;case 7:n=a.ops.pop(),a.trys.pop();continue;default:if(s=a.trys,!(s=s.length>0&&s[s.length-1])&&(6===n[0]||2===n[0])){a=0;continue}if(3===n[0]&&(!s||n[1]>s[0]&&n[1]<s[3])){a.label=n[1];break}if(6===n[0]&&a.label<s[1]){a.label=s[1],s=n;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(n);break}s[2]&&a.ops.pop(),a.trys.pop();continue}n=e.call(t,a);}catch(t){n=[6,t],r=0;}finally{i=s=0;}if(5&n[0])throw n[1];return {value:n[0]?n[1]:void 0,done:!0}}var i,r,s,c,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return c={next:n(0),throw:n(1),return:n(2)},\"function\"==typeof Symbol&&(c[Symbol.iterator]=function(){return this}),c};Object.defineProperty(e,\"__esModule\",{value:!0});var p=n(1),l=n(2);e.TrouterState=l.TrouterState,e.UserActivityState=l.UserActivityState;var d=n(0),g=n(5),f=n(6),m=n(7),v=n(8),y=function(){function t(t){this.logProvider=t,this.stateChangedListeners=[],this.logger=new d.Logger(\"Trouter\",t),this.trouterUrlPromise=new v.TrouterUrlPromise(t),this.messageHandlers=new g.MessageHandlerRegistry(t),this.listeners={},this.connectionInfo=null,this.logger.info(\"Created TrouterService version \"+p.CLIENT_VERSION);}return t.prototype.start=function(t){if(this.logger.info(\"Start\"),!t.trouterSettings.disableInternalSkypeTokenCache){var e=t.skypeTokenProvider;t.skypeTokenProvider=f.addCacheAsBackupTo(e);}this.trouterCfg=t;var n=i(t,this.ecsCfg);void 0===this.trouterServer&&(this.trouterServer=new m.TrouterManager(this.logProvider,n,t.skypeTokenProvider,this)),this.trouterServer.start();},t.prototype.stop=function(t){this.logger.info(\"close connection\"),this.trouterUrlPromise.rejectUrl(new Error(\"TrouterService is stopped\")),void 0!==this.trouterServer&&this.trouterServer.stop(t);},t.prototype.setEcsConfig=function(t){return h(this,void 0,void 0,function(){var e=this;return u(this,function(n){return [2,new Promise(function(n,o){if(e.ecsCfg=t.TrouterJScriptClient,e.logger.info(\"Setting ECS configuration to \"+JSON.stringify(e.ecsCfg)),void 0!==e.trouterServer&&void 0!==e.trouterCfg){var r=i(e.trouterCfg,e.ecsCfg);e.trouterServer.configure(r);}n();})]})})},t.prototype.checkConnection=function(t){void 0!==this.trouterServer&&this.trouterServer.checkConnection(t||!1);},t.prototype.resendRegistration=function(){return h(this,void 0,void 0,function(){return u(this,function(t){if(!this.trouterServer)throw new Error(\"resendRegistration called too early\");return [2,this.trouterServer.resendRegistration()]})})},t.prototype.registerListener=function(t,e){return \"\"===e||\"/\"!==e[0]||e.indexOf(\"?\")>=0||e.indexOf(\"#\")>=0?(this.logger.error(\"Listener path '\"+e+\"' is not valid\"),!1):this.listeners[e]?(this.logger.error(\"Another listener is already registered for path '\"+e+\"'\"),!1):(this.listeners[e]=t,this.logger.debug(\"Listener for path '\"+e+\"' registered\"),this.connectionInfo&&t.onTrouterConnected(this.connectionInfo.baseEndpointUrl+e,this.connectionInfo),!0)},t.prototype.unregisterListener=function(t){for(var e=[],n=0,o=Object.keys(this.listeners);n<o.length;n++){var i=o[n];this.listeners[i]===t&&e.push(i);}if(0===e.length)return !1;for(var r=0,s=e;r<s.length;r++){var i=s[r];delete this.listeners[i];}return this.logger.debug(\"Listener for path(s) '\"+e.join(\"', '\")+\"' unregistered\"),!0},t.prototype.onTrouterConnected=function(t,e){this.logger.debug(\"Trouter is now connected\");for(var n=0,o=Object.keys(this.listeners);n<o.length;n++){var i=o[n];try{this.listeners[i].onTrouterConnected(e.baseEndpointUrl+i,e);}catch(t){this.logger.error(\"Listener '\"+i+\"' threw an exception from onTrouterConnected(): \"+t);}}this.connectionInfo=e,this.trouterUrlPromise.resolveUrl(t),this.notifyStateChanged(l.TrouterState.Connected,{url:t,getRemainingTtlInSec:function(){return e.connectionTtlSec}});},t.prototype.onTrouterDisconnected=function(){this.logger.debug(\"Trouter is now disconnected\"),this.connectionInfo=null;for(var t=0,e=Object.keys(this.listeners);t<e.length;t++){var n=e[t],o=this.listeners[n];if(o.onTrouterDisconnected)try{o.onTrouterDisconnected();}catch(t){this.logger.error(\"Listener '\"+n+\"' threw an exception from onTrouterDisconnected(): \"+t);}}this.notifyStateChanged(l.TrouterState.Disconnected);},t.prototype.onTrouterRequest=function(t,e){for(var n=\"\",o=0,i=Object.keys(this.listeners);o<i.length;o++){var r=i[o];t.path.substring(0,r.length)===r&&r.length>n.length&&(n=r);}if(\"\"===n)this.tryMessageHandlers(t,e)||(e.status=404,e.headers={\"Trouter-Responder\":\"ClientLib\"},e.send());else try{this.listeners[n].onTrouterRequest(t,e);}catch(t){this.logger.error(\"Listener '\"+n+\"' threw an exception from onTrouterRequest(): \"+t),e.status=500,e.headers={\"Trouter-Responder\":\"ClientLib\"},e.send();}},t.prototype.onTrouterMessageLoss=function(t){this.logger.info(\"onTrouterMessageLoss called with value \"+t);for(var e=!0,n=0,o=Object.keys(this.listeners);n<o.length;n++){var i=o[n],r=this.listeners[i];if(r.onTrouterMessageLoss)try{e=r.onTrouterMessageLoss(t)&&e,void 0===e&&(this.logger.error(\"Listener '\"+i+\"' did not response with boolean value onTrouterMessageLoss()\"),e=!1);}catch(t){this.logger.error(\"Listener '\"+i+\"' threw an exception from onTrouterMessageLoss(): \"+t),e=!1;}}return e},t.prototype.onTrouterUserActivityStateAccepted=function(t){this.logger.debug(\"onTrouterUserActivityStateAccepted cv: \"+t);for(var e=0,n=Object.keys(this.listeners);e<n.length;e++){var o=n[e],i=this.listeners[o];if(i.onTrouterUserActivityStateAccepted)try{i.onTrouterUserActivityStateAccepted(t);}catch(t){this.logger.error(\"Listener '\"+o+\"' threw an exception from onTrouterUserActivityStateAccepted(): \"+t);}}},t.prototype.setUserActivityState=function(t,e){if(t!==l.UserActivityState.Active&&t!==l.UserActivityState.Inactive)throw new Error(\"setUserActivityState called with unsupported value \"+t);if(this.logger.info(\"setUserActivityState called with value \"+l.UserActivityState[t]),!this.trouterServer||this.state()===l.TrouterState.Unknown)throw new Error(\"setUserActivityState called too early\");this.trouterServer.setUserActivityState(t,e);},t.prototype.state=function(){return void 0!==this.trouterServer?this.trouterServer.getState():l.TrouterState.Unknown},t.prototype.getServerState=function(){if(void 0!==this.trouterServer)return this.trouterServer.getServerState()},t.prototype.getTrouterUrlAsync=function(){return void 0!==this.trouterServer?this.trouterUrlPromise.getPromise():Promise.reject(new Error(\"TrouterService has not been started\"))},t.prototype.onStateChanged=function(t){if(this.logger.info(\"onStateChanged called\"),void 0===t)this.stateChangedListeners=this.stateChangedListeners.filter(function(t){return void 0===t.wrappedCallback});else {this.offStateChanged(t);var e=function(e,n){t(e,n?n.url:\"\");};e.wrappedCallback=t,this.stateChangedListeners.push(e);}},t.prototype.offStateChanged=function(t){this.logger.info(\"offStateChanged called\");var e=this.stateChangedListeners.length;return this.stateChangedListeners=this.stateChangedListeners.filter(function(e){return e.wrappedCallback!==t}),e>this.stateChangedListeners.length},t.prototype.addCallback=function(t){this.logger.info(\"addListener called\"),-1===this.stateChangedListeners.indexOf(t,0)&&void 0!==t&&this.stateChangedListeners.push(t);},t.prototype.removeCallback=function(t){this.logger.info(\"removeListener called\");var e=this.stateChangedListeners.indexOf(t,0);return e>-1&&(this.stateChangedListeners.splice(e,1),!0)},t.prototype.registerMessageHandler=function(t){this.logger.info(\"registerMessageHandler is called\"),this.messageHandlers.register(t);},t.prototype.clearMessageHandlers=function(){this.logger.info(\"clearMessageHandlers is called\"),this.messageHandlers.clear();},t.prototype.notifyStateChanged=function(t,e){var n=this;this.logger.info(\"notifyStateChanged called, will forward to \"+this.stateChangedListeners.length+\" listeners\"),this.stateChangedListeners.forEach(function(o){try{o(t,e);}catch(t){n.logger.error(\"Error in callback \"+t);}});},t.prototype.tryMessageHandlers=function(t,e){if(!this.messageHandlers.active())return !1;var n,o=null;try{n=JSON.parse(t.body),o=n&&(n.evt||n.eventId)||null;}catch(t){}var i={eventId:o,url:(this.connectionInfo?this.connectionInfo.baseEndpointUrl:\"\")+t.path,body:n,rawBody:t.body,headers:t.headers},r=this.messageHandlers.handleMessage(i);return !!r.isHandled&&(e.status=r.resultCode,r.responseHeaders&&(e.headers=r.responseHeaders),r.responseBody&&(e.body=r.responseBody),e.send(),!0)},t}();e.TrouterService=y,e.createTrouterService=r,e.getTrouterServiceVersion=s,e.replaceTrouterUrlBase=c;},function(e,n){e.exports=t;}])});\n\n});\n\nunwrapExports(tstrouter);\n\nvar constants = createCommonjsModule(function (module, exports) {\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nexports.__esModule = true;\r\nexports.MAX_NUMBER_OF_TOKEN_FETCH_RETRIES = 3;\r\n// GCC High gov cloud URLs\r\nexports.GCCHIGH_TROUTER_SERVICE_URL = \"https://go.trouter.gov.teams.microsoft.us/v4/a\";\r\nexports.GCCHIGH_REGISTRAR_SERVICE_URL = \"https://registrar.gov.teams.microsoft.us/V3/registrations\";\r\n// DoD gov cloud URLs\r\nexports.DOD_TROUTER_SERVICE_URL = \"https://go.trouter.dod.teams.microsoft.us/v4/a\";\r\nexports.DOD_REGISTRAR_SERVICE_URL = \"https://registrar.dod.teams.microsoft.us/V3/registrations\";\r\n// Int URLs\r\nexports.INT_TROUTER_SERVICE_URL = \"https://go.trouter-int.skype.net/v4/a\";\r\nexports.INT_REGISTRAR_SERVICE_URL = \"https://edge.skype.net/registrar/testenv/v3/registrations\";\r\n// Public URLs\r\nexports.PUBLIC_TROUTER_SERVICE_URL = \"https://go.trouter.skype.com/v4/a\";\r\nexports.PUBLIC_REGISTRAR_SERVICE_URL = \"https://edge.skype.com/registrar/prod/v3/registrations\";\r\n// Gov cloud types\r\nvar CloudType;\r\n(function (CloudType) {\r\n    CloudType[\"Public\"] = \"Public\";\r\n    CloudType[\"GccHigh\"] = \"GCC High\";\r\n    CloudType[\"Dod\"] = \"DoD\";\r\n})(CloudType = exports.CloudType || (exports.CloudType = {}));\r\nvar CloudPrefix;\r\n(function (CloudPrefix) {\r\n    CloudPrefix[\"OrgId\"] = \"orgid\";\r\n    CloudPrefix[\"Acs\"] = \"acs\";\r\n    CloudPrefix[\"Spool\"] = \"spool\";\r\n    CloudPrefix[\"GccHigh\"] = \"gcch\";\r\n    CloudPrefix[\"GccHighAcs\"] = \"gcch-acs\";\r\n    CloudPrefix[\"Dod\"] = \"dod\";\r\n    CloudPrefix[\"DodAcs\"] = \"dod-acs\";\r\n})(CloudPrefix = exports.CloudPrefix || (exports.CloudPrefix = {}));\n});\n\nunwrapExports(constants);\nvar constants_1 = constants.MAX_NUMBER_OF_TOKEN_FETCH_RETRIES;\nvar constants_2 = constants.GCCHIGH_TROUTER_SERVICE_URL;\nvar constants_3 = constants.GCCHIGH_REGISTRAR_SERVICE_URL;\nvar constants_4 = constants.DOD_TROUTER_SERVICE_URL;\nvar constants_5 = constants.DOD_REGISTRAR_SERVICE_URL;\nvar constants_6 = constants.INT_TROUTER_SERVICE_URL;\nvar constants_7 = constants.INT_REGISTRAR_SERVICE_URL;\nvar constants_8 = constants.PUBLIC_TROUTER_SERVICE_URL;\nvar constants_9 = constants.PUBLIC_REGISTRAR_SERVICE_URL;\nvar constants_10 = constants.CloudType;\nvar constants_11 = constants.CloudPrefix;\n\nvar TrouterUtils = createCommonjsModule(function (module, exports) {\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nvar __awaiter = (commonjsGlobal && commonjsGlobal.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (commonjsGlobal && commonjsGlobal.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\n\r\n\r\nvar eventIds = new Map([\r\n    [\"chatMessageReceived\", 200],\r\n    [\"typingIndicatorReceived\", 245],\r\n    [\"readReceiptReceived\", 246],\r\n    [\"chatMessageEdited\", 247],\r\n    [\"chatMessageDeleted\", 248],\r\n    [\"chatThreadCreated\", 257],\r\n    [\"chatThreadPropertiesUpdated\", 258],\r\n    [\"chatThreadDeleted\", 259],\r\n    [\"participantsAdded\", 260],\r\n    [\"participantsRemoved\", 261]\r\n]);\r\nvar publicTeamsUserPrefix = \"8:orgid:\";\r\nvar dodTeamsUserPrefix = \"8:dod:\";\r\nvar gcchTeamsUserPrefix = \"8:gcch:\";\r\nvar teamsVisitorUserPrefix = \"8:teamsvisitor:\";\r\nvar phoneNumberPrefix = \"4:\";\r\nvar acsUserPrefix = \"8:acs:\";\r\nvar spoolUserPrefix = \"8:spool:\";\r\nexports.toMessageHandler = function (event, listener) {\r\n    var eventId = eventIds.get(event);\r\n    return {\r\n        handleMessage: function (message) {\r\n            var genericPayload = null;\r\n            if (message === null || message === void 0 ? void 0 : message.rawBody) {\r\n                genericPayload = JSON.parse(message.rawBody);\r\n            }\r\n            if (genericPayload === null || genericPayload.eventId !== eventId) {\r\n                return undefined;\r\n            }\r\n            var eventPayload = toEventPayload(event, genericPayload);\r\n            if (eventPayload === null) {\r\n                return undefined;\r\n            }\r\n            listener(eventPayload);\r\n            return { isHandled: true, resultCode: 200 };\r\n        }\r\n    };\r\n};\r\nvar toEventPayload = function (event, genericPayload) {\r\n    if (event === \"chatMessageReceived\") {\r\n        var payload = genericPayload;\r\n        var eventPayload = {\r\n            threadId: payload.groupId,\r\n            sender: constructIdentifierKindFromMri(payload.senderId),\r\n            senderDisplayName: payload.senderDisplayName,\r\n            recipient: constructIdentifierKindFromMri(payload.recipientMri),\r\n            id: payload.messageId,\r\n            createdOn: new Date(payload.originalArrivalTime),\r\n            version: payload.version,\r\n            type: payload.messageType,\r\n            message: payload.messageBody,\r\n            metadata: parseMetadata(payload.acsChatMessageMetadata)\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"chatMessageEdited\") {\r\n        var payload = genericPayload;\r\n        var eventPayload = {\r\n            threadId: payload.groupId,\r\n            sender: constructIdentifierKindFromMri(payload.senderId),\r\n            senderDisplayName: payload.senderDisplayName,\r\n            recipient: constructIdentifierKindFromMri(payload.recipientMri),\r\n            id: payload.messageId,\r\n            createdOn: new Date(payload.originalArrivalTime),\r\n            version: payload.version,\r\n            message: payload.messageBody,\r\n            editedOn: new Date(payload.edittime),\r\n            type: payload.messageType,\r\n            metadata: parseMetadata(payload.acsChatMessageMetadata)\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"chatMessageDeleted\") {\r\n        var payload = genericPayload;\r\n        var eventPayload = {\r\n            threadId: payload.groupId,\r\n            sender: constructIdentifierKindFromMri(payload.senderId),\r\n            senderDisplayName: payload.senderDisplayName,\r\n            recipient: constructIdentifierKindFromMri(payload.recipientMri),\r\n            id: payload.messageId,\r\n            createdOn: new Date(payload.originalArrivalTime),\r\n            version: payload.version,\r\n            deletedOn: new Date(payload.deletetime),\r\n            type: payload.messageType\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"typingIndicatorReceived\") {\r\n        var payload = genericPayload;\r\n        var eventPayload = {\r\n            threadId: payload.groupId,\r\n            sender: constructIdentifierKindFromMri(payload.senderId),\r\n            senderDisplayName: payload.senderDisplayName,\r\n            recipient: constructIdentifierKindFromMri(payload.recipientMri),\r\n            version: payload.version,\r\n            receivedOn: new Date(payload.originalArrivalTime)\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"readReceiptReceived\") {\r\n        var payload = genericPayload;\r\n        var readReceiptMessageBody = JSON.parse(payload.messageBody);\r\n        var consumptionHorizon = readReceiptMessageBody.consumptionhorizon.split(\";\");\r\n        var eventPayload = {\r\n            threadId: payload.groupId,\r\n            sender: constructIdentifierKindFromMri(payload.senderId),\r\n            senderDisplayName: \"\",\r\n            recipient: constructIdentifierKindFromMri(payload.recipientMri),\r\n            chatMessageId: payload.messageId,\r\n            readOn: new Date(+consumptionHorizon[1])\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"chatThreadCreated\") {\r\n        var payload = genericPayload;\r\n        var createdByPayload = JSON.parse(unescape(payload.createdBy));\r\n        var membersPayload = JSON.parse(unescape(payload.members));\r\n        var propertiesPayload = JSON.parse(unescape(payload.properties));\r\n        var createdBy = {\r\n            id: constructIdentifierKindFromMri(createdByPayload.participantId),\r\n            displayName: createdByPayload.displayName\r\n        };\r\n        var chatParticipants = membersPayload.map(function (m) {\r\n            return {\r\n                id: constructIdentifierKindFromMri(m.participantId),\r\n                displayName: m.displayName\r\n            };\r\n        });\r\n        var eventPayload = {\r\n            threadId: payload.threadId,\r\n            createdOn: new Date(payload.createTime),\r\n            createdBy: createdBy,\r\n            version: payload.version,\r\n            participants: chatParticipants,\r\n            properties: propertiesPayload\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"chatThreadPropertiesUpdated\") {\r\n        var payload = genericPayload;\r\n        var updatedByPayload = JSON.parse(unescape(payload.editedBy));\r\n        var propertiesPayload = JSON.parse(unescape(payload.properties));\r\n        var updatedBy = {\r\n            id: constructIdentifierKindFromMri(updatedByPayload.participantId),\r\n            displayName: updatedByPayload.displayName\r\n        };\r\n        var eventPayload = {\r\n            threadId: payload.threadId,\r\n            updatedOn: new Date(payload.editTime),\r\n            updatedBy: updatedBy,\r\n            version: payload.version,\r\n            properties: propertiesPayload\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"chatThreadDeleted\") {\r\n        var payload = genericPayload;\r\n        var deletedByPayload = JSON.parse(unescape(payload.deletedBy));\r\n        var deletedBy = {\r\n            id: constructIdentifierKindFromMri(deletedByPayload.participantId),\r\n            displayName: deletedByPayload.displayName\r\n        };\r\n        var eventPayload = {\r\n            threadId: payload.threadId,\r\n            deletedOn: new Date(payload.deleteTime),\r\n            deletedBy: deletedBy,\r\n            version: payload.version\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"participantsAdded\") {\r\n        var payload = genericPayload;\r\n        var addedByPayload = JSON.parse(unescape(payload.addedBy));\r\n        var participantsAddedPayload = JSON.parse(unescape(payload.participantsAdded));\r\n        var addedBy = {\r\n            id: constructIdentifierKindFromMri(addedByPayload.participantId),\r\n            displayName: addedByPayload.displayName\r\n        };\r\n        var chatParticipants = participantsAddedPayload.map(function (m) {\r\n            return {\r\n                id: constructIdentifierKindFromMri(m.participantId),\r\n                displayName: m.displayName,\r\n                shareHistoryTime: new Date(m.shareHistoryTime)\r\n            };\r\n        });\r\n        var eventPayload = {\r\n            threadId: payload.threadId,\r\n            addedOn: new Date(payload.time),\r\n            addedBy: addedBy,\r\n            version: payload.version,\r\n            participantsAdded: chatParticipants\r\n        };\r\n        return eventPayload;\r\n    }\r\n    if (event === \"participantsRemoved\") {\r\n        var payload = genericPayload;\r\n        var removedByPayload = JSON.parse(unescape(payload.removedBy));\r\n        var participantsRemovedPayload = JSON.parse(unescape(payload.participantsRemoved));\r\n        var removedBy = {\r\n            id: constructIdentifierKindFromMri(removedByPayload.participantId),\r\n            displayName: removedByPayload.displayName\r\n        };\r\n        var chatParticipants = participantsRemovedPayload.map(function (m) {\r\n            return {\r\n                id: constructIdentifierKindFromMri(m.participantId),\r\n                displayName: m.displayName,\r\n                shareHistoryTime: new Date(m.shareHistoryTime)\r\n            };\r\n        });\r\n        var eventPayload = {\r\n            threadId: payload.threadId,\r\n            removedOn: new Date(payload.time),\r\n            removedBy: removedBy,\r\n            version: payload.version,\r\n            participantsRemoved: chatParticipants\r\n        };\r\n        return eventPayload;\r\n    }\r\n    return null;\r\n};\r\nexports.toLogProvider = function (logger) {\r\n    return {\r\n        log: function () {\r\n            var message = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                message[_i] = arguments[_i];\r\n            }\r\n            return logger.info(message);\r\n        },\r\n        warn: function () {\r\n            var message = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                message[_i] = arguments[_i];\r\n            }\r\n            return logger.warning(message);\r\n        },\r\n        error: function () {\r\n            var message = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                message[_i] = arguments[_i];\r\n            }\r\n            return logger.error(message);\r\n        },\r\n        debug: function () {\r\n            var message = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                message[_i] = arguments[_i];\r\n            }\r\n            return logger.verbose(message);\r\n        },\r\n        info: function () {\r\n            var message = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                message[_i] = arguments[_i];\r\n            }\r\n            return logger.verbose(message);\r\n        }\r\n    };\r\n};\r\nexports.toTelemetrySender = function (logger) {\r\n    return {\r\n        logEvent: function (clientEvent) { return logger.info(clientEvent); }\r\n    };\r\n};\r\nvar constructIdentifierKindFromMri = function (mri) {\r\n    if (mri.startsWith(publicTeamsUserPrefix)) {\r\n        return {\r\n            kind: \"microsoftTeamsUser\",\r\n            rawId: mri,\r\n            microsoftTeamsUserId: mri.substring(publicTeamsUserPrefix.length),\r\n            isAnonymous: false,\r\n            cloud: \"public\"\r\n        };\r\n    }\r\n    else if (mri.startsWith(dodTeamsUserPrefix)) {\r\n        return {\r\n            kind: \"microsoftTeamsUser\",\r\n            rawId: mri,\r\n            microsoftTeamsUserId: mri.substring(dodTeamsUserPrefix.length),\r\n            isAnonymous: false,\r\n            cloud: \"dod\"\r\n        };\r\n    }\r\n    else if (mri.startsWith(gcchTeamsUserPrefix)) {\r\n        return {\r\n            kind: \"microsoftTeamsUser\",\r\n            rawId: mri,\r\n            microsoftTeamsUserId: mri.substring(gcchTeamsUserPrefix.length),\r\n            isAnonymous: false,\r\n            cloud: \"gcch\"\r\n        };\r\n    }\r\n    else if (mri.startsWith(teamsVisitorUserPrefix)) {\r\n        return {\r\n            kind: \"microsoftTeamsUser\",\r\n            rawId: mri,\r\n            microsoftTeamsUserId: mri.substring(teamsVisitorUserPrefix.length),\r\n            isAnonymous: true\r\n        };\r\n    }\r\n    else if (mri.startsWith(phoneNumberPrefix)) {\r\n        return {\r\n            kind: \"phoneNumber\",\r\n            rawId: mri,\r\n            phoneNumber: mri.substring(phoneNumberPrefix.length)\r\n        };\r\n    }\r\n    else if (mri.startsWith(acsUserPrefix) || mri.startsWith(spoolUserPrefix)) {\r\n        return { kind: \"communicationUser\", communicationUserId: mri };\r\n    }\r\n    else {\r\n        return { kind: \"unknown\", id: mri };\r\n    }\r\n};\r\nvar parseMetadata = function (metadata) {\r\n    if (metadata === undefined || metadata === null || metadata === \"\" || metadata === \"null\") {\r\n        return {};\r\n    }\r\n    return JSON.parse(metadata);\r\n};\r\nfunction base64decode(encodedString) {\r\n    return !coreHttp.isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\r\n}\r\nexports.base64decode = base64decode;\r\nvar parseJWT = function (token) {\r\n    var _a = token === null || token === void 0 ? void 0 : token.split(\".\"), payload = _a[1];\r\n    if (payload === undefined) {\r\n        throw new Error(\"Invalid token\");\r\n    }\r\n    payload = payload.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    return JSON.parse(decodeURIComponent(escape(base64decode(payload))));\r\n};\r\nexports.getCloudTypeFromCredential = function (credential) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var accessToken, jwtToken, parsedJwtToken, identityMri;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, credential.getToken()];\r\n            case 1:\r\n                accessToken = _a.sent();\r\n                jwtToken = accessToken === null || accessToken === void 0 ? void 0 : accessToken.token;\r\n                parsedJwtToken = parseJWT(jwtToken);\r\n                identityMri = parsedJwtToken.skypeid;\r\n                return [2 /*return*/, getCloudTypeFromSkypeId(identityMri)];\r\n        }\r\n    });\r\n}); };\r\nfunction getCloudTypeFromSkypeId(skypeId) {\r\n    var cloudPrefix = skypeId.substring(0, skypeId.indexOf(\":\"));\r\n    switch (cloudPrefix) {\r\n        case constants.CloudPrefix.OrgId:\r\n        case constants.CloudPrefix.Acs:\r\n        case constants.CloudPrefix.Spool: {\r\n            return constants.CloudType.Public;\r\n        }\r\n        case constants.CloudPrefix.GccHigh:\r\n        case constants.CloudPrefix.GccHighAcs: {\r\n            return constants.CloudType.GccHigh;\r\n        }\r\n        case constants.CloudPrefix.Dod:\r\n        case constants.CloudPrefix.DodAcs: {\r\n            return constants.CloudType.Dod;\r\n        }\r\n        default: {\r\n            return constants.CloudType.Public;\r\n        }\r\n    }\r\n}\n});\n\nunwrapExports(TrouterUtils);\nvar TrouterUtils_1 = TrouterUtils.toMessageHandler;\nvar TrouterUtils_2 = TrouterUtils.toLogProvider;\nvar TrouterUtils_3 = TrouterUtils.toTelemetrySender;\nvar TrouterUtils_4 = TrouterUtils.base64decode;\nvar TrouterUtils_5 = TrouterUtils.getCloudTypeFromCredential;\n\nvar TrouterSettings = createCommonjsModule(function (module, exports) {\nvar __awaiter = (commonjsGlobal && commonjsGlobal.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (commonjsGlobal && commonjsGlobal.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\n\r\n\r\n\r\nvar defaultSettings = {\r\n    version: \"1.0.0\",\r\n    registrationId: \"\",\r\n    sessionId: \"\",\r\n    pnhAppId: \"AcsWeb\",\r\n    pnhTemplate: \"AcsWeb_Chat_1.2\",\r\n    platform: \"SPOOL\",\r\n    platformUIVersion: \"0.0.0\",\r\n    environment: \"\",\r\n    productName: \"acs-chat-web\",\r\n    trouterServiceUrl: constants.PUBLIC_TROUTER_SERVICE_URL,\r\n    registrarServiceUrl: constants.PUBLIC_REGISTRAR_SERVICE_URL,\r\n    registrarRefreshTimeoutInMs: 350000,\r\n    timeoutOptions: {\r\n        connectionTimeoutMs: 20000,\r\n        fetchTimeoutMs: 10000,\r\n        pingTimeoutMs: 40000,\r\n        pongTimeoutMs: 5000,\r\n        maxBackoffMs: 50000,\r\n        requestTimeoutMs: 5000\r\n    },\r\n    maxRegistrationTimeInMs: 7200000\r\n};\r\nvar createDefaultSettings = function () {\r\n    var settings = defaultSettings;\r\n    settings.registrationId = coreHttp.generateUuid();\r\n    settings.sessionId = coreHttp.generateUuid();\r\n    return settings;\r\n};\r\nvar createIntSettings = function () {\r\n    var settings = createDefaultSettings();\r\n    settings.pnhAppId = \"cns-e2e-test\";\r\n    settings.pnhTemplate = \"cns-e2e-test:1.2\";\r\n    settings.registrarServiceUrl = constants.INT_REGISTRAR_SERVICE_URL;\r\n    settings.trouterServiceUrl = constants.INT_TROUTER_SERVICE_URL;\r\n    return settings;\r\n};\r\nvar createGcchSettings = function () {\r\n    var settings = createDefaultSettings();\r\n    settings.registrarServiceUrl = constants.GCCHIGH_REGISTRAR_SERVICE_URL;\r\n    settings.trouterServiceUrl = constants.GCCHIGH_TROUTER_SERVICE_URL;\r\n    return settings;\r\n};\r\nvar createDodSettings = function () {\r\n    var settings = createDefaultSettings();\r\n    settings.registrarServiceUrl = constants.DOD_REGISTRAR_SERVICE_URL;\r\n    settings.trouterServiceUrl = constants.DOD_TROUTER_SERVICE_URL;\r\n    return settings;\r\n};\r\nexports.createSettings = function (credential, options) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var settings, cloud;\r\n    var _a;\r\n    return __generator(this, function (_b) {\r\n        switch (_b.label) {\r\n            case 0:\r\n                if (!((options === null || options === void 0 ? void 0 : options.environment) === \"INT\")) return [3 /*break*/, 1];\r\n                settings = createIntSettings();\r\n                return [3 /*break*/, 3];\r\n            case 1: return [4 /*yield*/, TrouterUtils.getCloudTypeFromCredential(credential)];\r\n            case 2:\r\n                cloud = _b.sent();\r\n                if (cloud === constants.CloudType.GccHigh) {\r\n                    settings = createGcchSettings();\r\n                }\r\n                else if (cloud === constants.CloudType.Dod) {\r\n                    settings = createDodSettings();\r\n                }\r\n                else {\r\n                    settings = createDefaultSettings();\r\n                }\r\n                _b.label = 3;\r\n            case 3:\r\n                settings.maxRegistrationTimeInMs = (_a = options === null || options === void 0 ? void 0 : options.registrationTimeInMs) !== null && _a !== void 0 ? _a : defaultSettings.maxRegistrationTimeInMs;\r\n                return [2 /*return*/, settings];\r\n        }\r\n    });\r\n}); };\r\nexports.defaultTelemetrySettings = {\r\n    // TBD Can we hook up OpenTelemetry?\r\n    enabled: false\r\n};\n});\n\nunwrapExports(TrouterSettings);\nvar TrouterSettings_1 = TrouterSettings.createSettings;\nvar TrouterSettings_2 = TrouterSettings.defaultTelemetrySettings;\n\nvar SignalingClient = createCommonjsModule(function (module, exports) {\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nvar __awaiter = (commonjsGlobal && commonjsGlobal.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (commonjsGlobal && commonjsGlobal.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nexports.__esModule = true;\r\n\r\n\r\n\r\n\r\nvar CommunicationSignalingClient = /** @class */ (function () {\r\n    function CommunicationSignalingClient(credential, logger, options) {\r\n        this.credential = credential;\r\n        this.logger = logger;\r\n        this.options = options;\r\n        this.stateChangedListener = null;\r\n        this.tokenFetchRetries = 0;\r\n        this.trouter = tstrouter.createTrouterService(TrouterUtils.toLogProvider(logger));\r\n    }\r\n    CommunicationSignalingClient.prototype.start = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, _b;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!(this.config === undefined)) return [3 /*break*/, 2];\r\n                        _a = this;\r\n                        _b = {};\r\n                        return [4 /*yield*/, TrouterSettings.createSettings(this.credential, this.options)];\r\n                    case 1:\r\n                        _a.config = (_b.trouterSettings = _c.sent(),\r\n                            _b.skypeTokenProvider = function (forceRefresh) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var _a, _b;\r\n                                return __generator(this, function (_c) {\r\n                                    switch (_c.label) {\r\n                                        case 0:\r\n                                            if (!forceRefresh) return [3 /*break*/, 3];\r\n                                            this.tokenFetchRetries += 1;\r\n                                            if (!(this.tokenFetchRetries > constants.MAX_NUMBER_OF_TOKEN_FETCH_RETRIES)) return [3 /*break*/, 2];\r\n                                            return [4 /*yield*/, this.stop(true)];\r\n                                        case 1:\r\n                                            _c.sent();\r\n                                            throw new Error(\"Access token is expired and failed to fetch a valid one after \" +\r\n                                                constants.MAX_NUMBER_OF_TOKEN_FETCH_RETRIES +\r\n                                                \" retries\");\r\n                                        case 2: return [3 /*break*/, 4];\r\n                                        case 3:\r\n                                            this.tokenFetchRetries = 0;\r\n                                            _c.label = 4;\r\n                                        case 4:\r\n                                            _b = (_a = Promise).resolve;\r\n                                            return [4 /*yield*/, this.credential.getToken()];\r\n                                        case 5: return [2 /*return*/, _b.apply(_a, [(_c.sent()).token])];\r\n                                    }\r\n                                });\r\n                            }); },\r\n                            _b.telemetryConfig = {\r\n                                eventLogger: TrouterUtils.toTelemetrySender(this.logger),\r\n                                settings: TrouterSettings.defaultTelemetrySettings\r\n                            },\r\n                            _b);\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        this.trouter.start(this.config);\r\n                        this.trouter.setUserActivityState(tstrouter.UserActivityState.Active);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    CommunicationSignalingClient.prototype.stop = function (isTokenExpired) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this.trouter.offStateChanged(this.stateChangedListener);\r\n                this.trouter.clearMessageHandlers();\r\n                this.trouter.stop(isTokenExpired !== null && isTokenExpired !== void 0 ? isTokenExpired : this.tokenFetchRetries > constants.MAX_NUMBER_OF_TOKEN_FETCH_RETRIES);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    CommunicationSignalingClient.prototype.on = function (event, listener) {\r\n        if (event === \"connectionChanged\") {\r\n            this.trouter.offStateChanged(this.stateChangedListener);\r\n            this.stateChangedListener = function (state, _url) { return listener(state); };\r\n            this.trouter.onStateChanged(this.stateChangedListener);\r\n            return;\r\n        }\r\n        this.trouter.registerMessageHandler(TrouterUtils.toMessageHandler(event, listener));\r\n    };\r\n    return CommunicationSignalingClient;\r\n}());\r\nexports.CommunicationSignalingClient = CommunicationSignalingClient;\n});\n\nunwrapExports(SignalingClient);\nvar SignalingClient_1 = SignalingClient.CommunicationSignalingClient;\n\nvar src = createCommonjsModule(function (module, exports) {\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nexports.__esModule = true;\r\n__export(SignalingClient);\n});\n\nvar index = unwrapExports(src);\n\nmodule.exports = index;\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/communication-signaling/dist/index.js?");

/***/ }),

/***/ "./node_modules/@azure/core-asynciterator-polyfill/dist/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/core-asynciterator-polyfill/dist/index.js ***!
  \***********************************************************************/
/***/ (() => {

"use strict";
eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nif (typeof Symbol === undefined || !Symbol.asyncIterator) {\n    Symbol.asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-asynciterator-polyfill/dist/index.js?");

/***/ }),

/***/ "./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isTokenCredential\": () => (/* binding */ isTokenCredential)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nfunction isTokenCredential(credential) {\n    // Check for an object with a 'getToken' function and possibly with\n    // a 'signRequest' function.  We do this check to make sure that\n    // a ServiceClientCredentials implementor (like TokenClientCredentials\n    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n    // it doesn't actually implement TokenCredential also.\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.getToken === \"function\" &&\n        (castCredential.signRequest === undefined || castCredential.getToken.length > 0));\n}\n//# sourceMappingURL=tokenCredential.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/base64.browser.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/base64.browser.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encodeString\": () => (/* binding */ encodeString),\n/* harmony export */   \"encodeByteArray\": () => (/* binding */ encodeByteArray),\n/* harmony export */   \"decodeString\": () => (/* binding */ decodeString),\n/* harmony export */   \"decodeStringToString\": () => (/* binding */ decodeStringToString)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Encodes a string in base64 format.\n * @param value - the string to encode\n */\nfunction encodeString(value) {\n    return btoa(value);\n}\n/**\n * Encodes a byte array in base64 format.\n * @param value - the Uint8Aray to encode\n */\nfunction encodeByteArray(value) {\n    let str = \"\";\n    for (let i = 0; i < value.length; i++) {\n        str += String.fromCharCode(value[i]);\n    }\n    return btoa(str);\n}\n/**\n * Decodes a base64 string into a byte array.\n * @param value - the base64 string to decode\n */\nfunction decodeString(value) {\n    const byteString = atob(value);\n    const arr = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n        arr[i] = byteString.charCodeAt(i);\n    }\n    return arr;\n}\n/**\n * Decodes a base64 string into a string.\n * @param value - the base64 string to decode\n */\nfunction decodeStringToString(value) {\n    return atob(value);\n}\n//# sourceMappingURL=base64.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/base64.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/deserializationPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/deserializationPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deserializationPolicyName\": () => (/* binding */ deserializationPolicyName),\n/* harmony export */   \"deserializationPolicy\": () => (/* binding */ deserializationPolicy)\n/* harmony export */ });\n/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interfaces */ \"./node_modules/@azure/core-client/dist-esm/src/interfaces.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/restError.js\");\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-client/dist-esm/src/serializer.js\");\n/* harmony import */ var _operationHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operationHelpers */ \"./node_modules/@azure/core-client/dist-esm/src/operationHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n/**\n * The programmatic identifier of the deserializationPolicy.\n */\nconst deserializationPolicyName = \"deserializationPolicy\";\n/**\n * This policy handles parsing out responses according to OperationSpecs on the request.\n */\nfunction deserializationPolicy(options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const jsonContentTypes = (_b = (_a = options.expectedContentTypes) === null || _a === void 0 ? void 0 : _a.json) !== null && _b !== void 0 ? _b : defaultJsonContentTypes;\n    const xmlContentTypes = (_d = (_c = options.expectedContentTypes) === null || _c === void 0 ? void 0 : _c.xml) !== null && _d !== void 0 ? _d : defaultXmlContentTypes;\n    const parseXML = options.parseXML;\n    const serializerOptions = options.serializerOptions;\n    const updatedOptions = {\n        xml: {\n            rootName: (_e = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.rootName) !== null && _e !== void 0 ? _e : \"\",\n            includeRoot: (_f = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.includeRoot) !== null && _f !== void 0 ? _f : false,\n            xmlCharKey: (_g = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.xmlCharKey) !== null && _g !== void 0 ? _g : _interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n        },\n    };\n    return {\n        name: deserializationPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, updatedOptions, parseXML);\n        },\n    };\n}\nfunction getOperationResponseMap(parsedResponse) {\n    let result;\n    const request = parsedResponse.request;\n    const operationInfo = (0,_operationHelpers__WEBPACK_IMPORTED_MODULE_1__.getOperationRequestInfo)(request);\n    const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n    if (operationSpec) {\n        if (!(operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationResponseGetter)) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    const request = parsedResponse.request;\n    const operationInfo = (0,_operationHelpers__WEBPACK_IMPORTED_MODULE_1__.getOperationRequestInfo)(request);\n    const shouldDeserialize = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.shouldDeserialize;\n    let result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\nasync function deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, options, parseXML) {\n    const parsedResponse = await parse(jsonContentTypes, xmlContentTypes, response, options, parseXML);\n    if (!shouldDeserializeResponse(parsedResponse)) {\n        return parsedResponse;\n    }\n    const operationInfo = (0,_operationHelpers__WEBPACK_IMPORTED_MODULE_1__.getOperationRequestInfo)(parsedResponse.request);\n    const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n    if (!operationSpec || !operationSpec.responses) {\n        return parsedResponse;\n    }\n    const responseSpec = getOperationResponseMap(parsedResponse);\n    const { error, shouldReturnResponse } = handleErrorResponse(parsedResponse, operationSpec, responseSpec);\n    if (error) {\n        throw error;\n    }\n    else if (shouldReturnResponse) {\n        return parsedResponse;\n    }\n    // An operation response spec does exist for current status code, so\n    // use it to deserialize the response.\n    if (responseSpec) {\n        if (responseSpec.bodyMapper) {\n            let valueToDeserialize = parsedResponse.parsedBody;\n            if (operationSpec.isXML && responseSpec.bodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                valueToDeserialize =\n                    typeof valueToDeserialize === \"object\"\n                        ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName]\n                        : [];\n            }\n            try {\n                parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\");\n            }\n            catch (deserializeError) {\n                const restError = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_3__.RestError(`Error ${deserializeError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`, {\n                    statusCode: parsedResponse.status,\n                    request: parsedResponse.request,\n                    response: parsedResponse,\n                });\n                throw restError;\n            }\n        }\n        else if (operationSpec.httpMethod === \"HEAD\") {\n            // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n            parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n        }\n        if (responseSpec.headersMapper) {\n            parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.toJSON(), \"operationRes.parsedHeaders\");\n        }\n    }\n    return parsedResponse;\n}\nfunction isOperationSpecEmpty(operationSpec) {\n    const expectedStatusCodes = Object.keys(operationSpec.responses);\n    return (expectedStatusCodes.length === 0 ||\n        (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\"));\n}\nfunction handleErrorResponse(parsedResponse, operationSpec, responseSpec) {\n    var _a;\n    const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n    const isExpectedStatusCode = isOperationSpecEmpty(operationSpec)\n        ? isSuccessByStatus\n        : !!responseSpec;\n    if (isExpectedStatusCode) {\n        if (responseSpec) {\n            if (!responseSpec.isError) {\n                return { error: null, shouldReturnResponse: false };\n            }\n        }\n        else {\n            return { error: null, shouldReturnResponse: false };\n        }\n    }\n    const errorResponseSpec = responseSpec !== null && responseSpec !== void 0 ? responseSpec : operationSpec.responses.default;\n    const initialErrorMessage = ((_a = parsedResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(parsedResponse.status))\n        ? `Unexpected status code: ${parsedResponse.status}`\n        : parsedResponse.bodyAsText;\n    const error = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_3__.RestError(initialErrorMessage, {\n        statusCode: parsedResponse.status,\n        request: parsedResponse.request,\n        response: parsedResponse,\n    });\n    // If the item failed but there's no error spec or default spec to deserialize the error,\n    // we should fail so we just throw the parsed response\n    if (!errorResponseSpec) {\n        throw error;\n    }\n    const defaultBodyMapper = errorResponseSpec.bodyMapper;\n    const defaultHeadersMapper = errorResponseSpec.headersMapper;\n    try {\n        // If error response has a body, try to deserialize it using default body mapper.\n        // Then try to extract error code & message from it\n        if (parsedResponse.parsedBody) {\n            const parsedBody = parsedResponse.parsedBody;\n            let deserializedError;\n            if (defaultBodyMapper) {\n                let valueToDeserialize = parsedBody;\n                if (operationSpec.isXML && defaultBodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                    valueToDeserialize = [];\n                    const elementName = defaultBodyMapper.xmlElementName;\n                    if (typeof parsedBody === \"object\" && elementName) {\n                        valueToDeserialize = parsedBody[elementName];\n                    }\n                }\n                deserializedError = operationSpec.serializer.deserialize(defaultBodyMapper, valueToDeserialize, \"error.response.parsedBody\");\n            }\n            const internalError = parsedBody.error || deserializedError || parsedBody;\n            error.code = internalError.code;\n            if (internalError.message) {\n                error.message = internalError.message;\n            }\n            if (defaultBodyMapper) {\n                error.response.parsedBody = deserializedError;\n            }\n        }\n        // If error response has headers, try to deserialize it using default header mapper\n        if (parsedResponse.headers && defaultHeadersMapper) {\n            error.response.parsedHeaders =\n                operationSpec.serializer.deserialize(defaultHeadersMapper, parsedResponse.headers.toJSON(), \"operationRes.parsedHeaders\");\n        }\n    }\n    catch (defaultError) {\n        error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n    }\n    return { error, shouldReturnResponse: false };\n}\nasync function parse(jsonContentTypes, xmlContentTypes, operationResponse, opts, parseXML) {\n    var _a;\n    if (!((_a = operationResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(operationResponse.status)) &&\n        operationResponse.bodyAsText) {\n        const text = operationResponse.bodyAsText;\n        const contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        const contentComponents = !contentType\n            ? []\n            : contentType.split(\";\").map((component) => component.toLowerCase());\n        try {\n            if (contentComponents.length === 0 ||\n                contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)) {\n                operationResponse.parsedBody = JSON.parse(text);\n                return operationResponse;\n            }\n            else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n                if (!parseXML) {\n                    throw new Error(\"Parsing XML not supported.\");\n                }\n                const body = await parseXML(text, opts.xml);\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            }\n        }\n        catch (err) {\n            const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n            const errCode = err.code || _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_3__.RestError.PARSE_ERROR;\n            const e = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_3__.RestError(msg, {\n                code: errCode,\n                statusCode: operationResponse.status,\n                request: operationResponse.request,\n                response: operationResponse,\n            });\n            throw e;\n        }\n    }\n    return operationResponse;\n}\n//# sourceMappingURL=deserializationPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/deserializationPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/httpClientCache.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/httpClientCache.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCachedDefaultHttpClient\": () => (/* binding */ getCachedDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/defaultHttpClient.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nlet cachedHttpClient;\nfunction getCachedDefaultHttpClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createDefaultHttpClient)();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=httpClientCache.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/httpClientCache.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/interfaceHelpers.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/interfaceHelpers.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getStreamingResponseStatusCodes\": () => (/* binding */ getStreamingResponseStatusCodes),\n/* harmony export */   \"getPathStringFromParameter\": () => (/* binding */ getPathStringFromParameter)\n/* harmony export */ });\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-client/dist-esm/src/serializer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nfunction getStreamingResponseStatusCodes(operationSpec) {\n    const result = new Set();\n    for (const statusCode in operationSpec.responses) {\n        const operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper &&\n            operationResponse.bodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_0__.MapperTypeNames.Stream) {\n            result.add(Number(statusCode));\n        }\n    }\n    return result;\n}\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n * @internal\n */\nfunction getPathStringFromParameter(parameter) {\n    const { parameterPath, mapper } = parameter;\n    let result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=interfaceHelpers.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/interfaceHelpers.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/interfaces.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/interfaces.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"XML_ATTRKEY\": () => (/* binding */ XML_ATTRKEY),\n/* harmony export */   \"XML_CHARKEY\": () => (/* binding */ XML_CHARKEY)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Default key used to access the XML attributes.\n */\nconst XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nconst XML_CHARKEY = \"_\";\n//# sourceMappingURL=interfaces.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/interfaces.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/operationHelpers.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/operationHelpers.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getOperationArgumentValueFromParameter\": () => (/* binding */ getOperationArgumentValueFromParameter),\n/* harmony export */   \"getOperationRequestInfo\": () => (/* binding */ getOperationRequestInfo)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * @internal\n * Retrieves the value to use for a given operation argument\n * @param operationArguments - The arguments passed from the generated client\n * @param parameter - The parameter description\n * @param fallbackObject - If something isn't found in the arguments bag, look here.\n *  Generally used to look at the service client properties.\n */\nfunction getOperationArgumentValueFromParameter(operationArguments, parameter, fallbackObject) {\n    let parameterPath = parameter.parameterPath;\n    const parameterMapper = parameter.mapper;\n    let value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound && fallbackObject) {\n                    propertySearchResult = getPropertyFromParameterPath(fallbackObject, parameterPath);\n                }\n                let useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue =\n                        parameterMapper.required ||\n                            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n        }\n    }\n    else {\n        if (parameterMapper.required) {\n            value = {};\n        }\n        for (const propertyName in parameterPath) {\n            const propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            const propertyPath = parameterPath[propertyName];\n            const propertyValue = getOperationArgumentValueFromParameter(operationArguments, {\n                parameterPath: propertyPath,\n                mapper: propertyMapper,\n            }, fallbackObject);\n            if (propertyValue !== undefined) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    const result = { propertyFound: false };\n    let i = 0;\n    for (; i < parameterPath.length; ++i) {\n        const parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\nconst operationRequestMap = new WeakMap();\nfunction getOperationRequestInfo(request) {\n    let info = operationRequestMap.get(request);\n    if (!info) {\n        info = {};\n        operationRequestMap.set(request, info);\n    }\n    return info;\n}\n//# sourceMappingURL=operationHelpers.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/operationHelpers.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/pipeline.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/pipeline.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createClientPipeline\": () => (/* binding */ createClientPipeline)\n/* harmony export */ });\n/* harmony import */ var _deserializationPolicy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./deserializationPolicy */ \"./node_modules/@azure/core-client/dist-esm/src/deserializationPolicy.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/createPipelineFromOptions.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js\");\n/* harmony import */ var _serializationPolicy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializationPolicy */ \"./node_modules/@azure/core-client/dist-esm/src/serializationPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nfunction createClientPipeline(options = {}) {\n    const pipeline = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineFromOptions)(options !== null && options !== void 0 ? options : {});\n    if (options.credentialOptions) {\n        pipeline.addPolicy((0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.bearerTokenAuthenticationPolicy)({\n            credential: options.credentialOptions.credential,\n            scopes: options.credentialOptions.credentialScopes,\n        }));\n    }\n    pipeline.addPolicy((0,_serializationPolicy__WEBPACK_IMPORTED_MODULE_2__.serializationPolicy)(options.serializationOptions), { phase: \"Serialize\" });\n    pipeline.addPolicy((0,_deserializationPolicy__WEBPACK_IMPORTED_MODULE_3__.deserializationPolicy)(options.deserializationOptions), {\n        phase: \"Deserialize\",\n    });\n    return pipeline;\n}\n//# sourceMappingURL=pipeline.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/pipeline.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/serializationPolicy.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/serializationPolicy.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"serializationPolicyName\": () => (/* binding */ serializationPolicyName),\n/* harmony export */   \"serializationPolicy\": () => (/* binding */ serializationPolicy),\n/* harmony export */   \"serializeHeaders\": () => (/* binding */ serializeHeaders),\n/* harmony export */   \"serializeRequestBody\": () => (/* binding */ serializeRequestBody)\n/* harmony export */ });\n/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interfaces */ \"./node_modules/@azure/core-client/dist-esm/src/interfaces.js\");\n/* harmony import */ var _operationHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operationHelpers */ \"./node_modules/@azure/core-client/dist-esm/src/operationHelpers.js\");\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-client/dist-esm/src/serializer.js\");\n/* harmony import */ var _interfaceHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaceHelpers */ \"./node_modules/@azure/core-client/dist-esm/src/interfaceHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n/**\n * The programmatic identifier of the serializationPolicy.\n */\nconst serializationPolicyName = \"serializationPolicy\";\n/**\n * This policy handles assembling the request body and headers using\n * an OperationSpec and OperationArguments on the request.\n */\nfunction serializationPolicy(options = {}) {\n    const stringifyXML = options.stringifyXML;\n    return {\n        name: serializationPolicyName,\n        async sendRequest(request, next) {\n            const operationInfo = (0,_operationHelpers__WEBPACK_IMPORTED_MODULE_0__.getOperationRequestInfo)(request);\n            const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n            const operationArguments = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationArguments;\n            if (operationSpec && operationArguments) {\n                serializeHeaders(request, operationArguments, operationSpec);\n                serializeRequestBody(request, operationArguments, operationSpec, stringifyXML);\n            }\n            return next(request);\n        },\n    };\n}\n/**\n * @internal\n */\nfunction serializeHeaders(request, operationArguments, operationSpec) {\n    var _a, _b;\n    if (operationSpec.headerParameters) {\n        for (const headerParameter of operationSpec.headerParameters) {\n            let headerValue = (0,_operationHelpers__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, headerParameter);\n            if ((headerValue !== null && headerValue !== undefined) || headerParameter.mapper.required) {\n                headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, (0,_interfaceHelpers__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(headerParameter));\n                const headerCollectionPrefix = headerParameter.mapper\n                    .headerCollectionPrefix;\n                if (headerCollectionPrefix) {\n                    for (const key of Object.keys(headerValue)) {\n                        request.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                    }\n                }\n                else {\n                    request.headers.set(headerParameter.mapper.serializedName || (0,_interfaceHelpers__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(headerParameter), headerValue);\n                }\n            }\n        }\n    }\n    const customHeaders = (_b = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.requestOptions) === null || _b === void 0 ? void 0 : _b.customHeaders;\n    if (customHeaders) {\n        for (const customHeaderName of Object.keys(customHeaders)) {\n            request.headers.set(customHeaderName, customHeaders[customHeaderName]);\n        }\n    }\n}\n/**\n * @internal\n */\nfunction serializeRequestBody(request, operationArguments, operationSpec, stringifyXML = function () {\n    throw new Error(\"XML serialization unsupported!\");\n}) {\n    var _a, _b, _c, _d, _e;\n    const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n    const updatedOptions = {\n        xml: {\n            rootName: (_b = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.rootName) !== null && _b !== void 0 ? _b : \"\",\n            includeRoot: (_c = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.includeRoot) !== null && _c !== void 0 ? _c : false,\n            xmlCharKey: (_d = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.xmlCharKey) !== null && _d !== void 0 ? _d : _interfaces__WEBPACK_IMPORTED_MODULE_2__.XML_CHARKEY,\n        },\n    };\n    const xmlCharKey = updatedOptions.xml.xmlCharKey;\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        request.body = (0,_operationHelpers__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, operationSpec.requestBody);\n        const bodyMapper = operationSpec.requestBody.mapper;\n        const { required, serializedName, xmlName, xmlElementName, xmlNamespace, xmlNamespacePrefix, nullable, } = bodyMapper;\n        const typeName = bodyMapper.type.name;\n        try {\n            if ((request.body !== undefined && request.body !== null) ||\n                (nullable && request.body === null) ||\n                required) {\n                const requestBodyParameterPathString = (0,_interfaceHelpers__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(operationSpec.requestBody);\n                request.body = operationSpec.serializer.serialize(bodyMapper, request.body, requestBodyParameterPathString, updatedOptions);\n                const isStream = typeName === _serializer__WEBPACK_IMPORTED_MODULE_3__.MapperTypeNames.Stream;\n                if (operationSpec.isXML) {\n                    const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n                    const value = getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, request.body, updatedOptions);\n                    if (typeName === _serializer__WEBPACK_IMPORTED_MODULE_3__.MapperTypeNames.Sequence) {\n                        request.body = stringifyXML(prepareXMLRootList(value, xmlElementName || xmlName || serializedName, xmlnsKey, xmlNamespace), { rootName: xmlName || serializedName, xmlCharKey });\n                    }\n                    else if (!isStream) {\n                        request.body = stringifyXML(value, {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey,\n                        });\n                    }\n                }\n                else if (typeName === _serializer__WEBPACK_IMPORTED_MODULE_3__.MapperTypeNames.String &&\n                    (((_e = operationSpec.contentType) === null || _e === void 0 ? void 0 : _e.match(\"text/plain\")) || operationSpec.mediaType === \"text\")) {\n                    // the String serializer has validated that request body is a string\n                    // so just send the string.\n                    return;\n                }\n                else if (!isStream) {\n                    request.body = JSON.stringify(request.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(`Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(serializedName, undefined, \"  \")}.`);\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        request.formData = {};\n        for (const formDataParameter of operationSpec.formDataParameters) {\n            const formDataParameterValue = (0,_operationHelpers__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, formDataParameter);\n            if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n                const formDataParameterPropertyName = formDataParameter.mapper.serializedName || (0,_interfaceHelpers__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(formDataParameter);\n                request.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, (0,_interfaceHelpers__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(formDataParameter), updatedOptions);\n            }\n        }\n    }\n}\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, serializedValue, options) {\n    // Composite and Sequence schemas already got their root namespace set during serialization\n    // We just need to add xmlns to the other schema types\n    if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n        const result = {};\n        result[options.xml.xmlCharKey] = serializedValue;\n        result[_interfaces__WEBPACK_IMPORTED_MODULE_2__.XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n        return result;\n    }\n    return serializedValue;\n}\nfunction prepareXMLRootList(obj, elementName, xmlNamespaceKey, xmlNamespace) {\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    if (!xmlNamespaceKey || !xmlNamespace) {\n        return { [elementName]: obj };\n    }\n    const result = { [elementName]: obj };\n    result[_interfaces__WEBPACK_IMPORTED_MODULE_2__.XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n    return result;\n}\n//# sourceMappingURL=serializationPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/serializationPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/serializer.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/serializer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSerializer\": () => (/* binding */ createSerializer),\n/* harmony export */   \"MapperTypeNames\": () => (/* binding */ MapperTypeNames)\n/* harmony export */ });\n/* harmony import */ var _base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base64 */ \"./node_modules/@azure/core-client/dist-esm/src/base64.browser.js\");\n/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interfaces */ \"./node_modules/@azure/core-client/dist-esm/src/interfaces.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./node_modules/@azure/core-client/dist-esm/src/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nclass SerializerImpl {\n    constructor(modelMappers = {}, isXML = false) {\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    validateConstraints(mapper, value, objectName) {\n        const failValidation = (constraintName, constraintValue) => {\n            throw new Error(`\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`);\n        };\n        if (mapper.constraints && value !== undefined && value !== null) {\n            const { ExclusiveMaximum, ExclusiveMinimum, InclusiveMaximum, InclusiveMinimum, MaxItems, MaxLength, MinItems, MinLength, MultipleOf, Pattern, UniqueItems, } = mapper.constraints;\n            if (ExclusiveMaximum !== undefined && value >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum !== undefined && value <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum !== undefined && value > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum !== undefined && value < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            if (MaxItems !== undefined && value.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength !== undefined && value.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems !== undefined && value.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength !== undefined && value.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf !== undefined && value % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern) {\n                const pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                if (typeof value !== \"string\" || value.match(pattern) === null) {\n                    failValidation(\"Pattern\", Pattern);\n                }\n            }\n            if (UniqueItems &&\n                value.some((item, i, ar) => ar.indexOf(item) !== i)) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    }\n    /**\n     * Serialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     *\n     * @param object - A valid Javascript object to be serialized\n     *\n     * @param objectName - Name of the serialized object\n     *\n     * @param options - additional options to serialization\n     *\n     * @returns A valid serialized Javascript object\n     */\n    serialize(mapper, object, objectName, options = { xml: {} }) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            xml: {\n                rootName: (_a = options.xml.rootName) !== null && _a !== void 0 ? _a : \"\",\n                includeRoot: (_b = options.xml.includeRoot) !== null && _b !== void 0 ? _b : false,\n                xmlCharKey: (_c = options.xml.xmlCharKey) !== null && _c !== void 0 ? _c : _interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n            },\n        };\n        let payload = {};\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/i) !== null) {\n            payload = [];\n        }\n        if (mapper.isConstant) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        const { required, nullable } = mapper;\n        if (required && nullable && object === undefined) {\n            throw new Error(`${objectName} cannot be undefined.`);\n        }\n        if (required && !nullable && (object === undefined || object === null)) {\n            throw new Error(`${objectName} cannot be null or undefined.`);\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(`${objectName} cannot be null.`);\n        }\n        if (object === undefined || object === null) {\n            payload = object;\n        }\n        else {\n            // Validate Constraints if any\n            this.validateConstraints(mapper, object, objectName);\n            if (mapperType.match(/^any$/i) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/i) !== null) {\n                const enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Composite$/i) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n        }\n        return payload;\n    }\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     *\n     * @param responseBody - A valid Javascript entity to be deserialized\n     *\n     * @param objectName - Name of the deserialized object\n     *\n     * @param options - Controls behavior of XML parser and builder.\n     *\n     * @returns A valid deserialized Javascript object\n     */\n    deserialize(mapper, responseBody, objectName, options = { xml: {} }) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            xml: {\n                rootName: (_a = options.xml.rootName) !== null && _a !== void 0 ? _a : \"\",\n                includeRoot: (_b = options.xml.includeRoot) !== null && _b !== void 0 ? _b : false,\n                xmlCharKey: (_c = options.xml.xmlCharKey) !== null && _c !== void 0 ? _c : _interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n            },\n        };\n        if (responseBody === undefined || responseBody === null) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n            if (mapper.defaultValue !== undefined) {\n                responseBody = mapper.defaultValue;\n            }\n            return responseBody;\n        }\n        let payload;\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/i) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName, updatedOptions);\n        }\n        else {\n            if (this.isXML) {\n                const xmlCharKey = updatedOptions.xml.xmlCharKey;\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n                 * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n                 */\n                if (responseBody[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] !== undefined && responseBody[xmlCharKey] !== undefined) {\n                    responseBody = responseBody[xmlCharKey];\n                }\n            }\n            if (mapperType.match(/^Number$/i) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/i) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/i) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = _base64__WEBPACK_IMPORTED_MODULE_1__.decodeString(responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    }\n}\n/**\n * Method that creates and returns a Serializer.\n * @param modelMappers - Known models to map\n * @param isXML - If XML should be supported\n */\nfunction createSerializer(modelMappers = {}, isXML = false) {\n    return new SerializerImpl(modelMappers, isXML);\n}\nfunction trimEnd(str, ch) {\n    let len = str.length;\n    while (len - 1 >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n    }\n    // Uint8Array to Base64.\n    const str = _base64__WEBPACK_IMPORTED_MODULE_1__.encodeByteArray(buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Base64 to Uint8Array.\n    return _base64__WEBPACK_IMPORTED_MODULE_1__.decodeString(str);\n}\nfunction splitSerializeName(prop) {\n    const classes = [];\n    let partialclass = \"\";\n    if (prop) {\n        const subwords = prop.split(\".\");\n        for (const item of subwords) {\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/i) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(`${objectName} with value ${value} must be of type number.`);\n            }\n        }\n        else if (typeName.match(/^String$/i) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n            }\n        }\n        else if (typeName.match(/^Uuid$/i) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && (0,_utils__WEBPACK_IMPORTED_MODULE_2__.isValidUuid)(value))) {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string and a valid uuid.`);\n            }\n        }\n        else if (typeName.match(/^Boolean$/i) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n            }\n        }\n        else if (typeName.match(/^Stream$/i) !== null) {\n            const objectType = typeof value;\n            if (objectType !== \"string\" &&\n                typeof value.pipe !== \"function\" &&\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                // File objects count as a type of Blob, so we want to use instanceof explicitly\n                !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob)) {\n                throw new Error(`${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, or NodeJS.ReadableStream.`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(`Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`);\n    }\n    const isPresent = allowedValues.some((item) => {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(`${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(allowedValues)}.`);\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    if (value !== undefined && value !== null) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        value = _base64__WEBPACK_IMPORTED_MODULE_1__.encodeByteArray(value);\n    }\n    return value;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    if (value !== undefined && value !== null) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        value = bufferToBase64Url(value);\n    }\n    return value;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value !== undefined && value !== null) {\n        if (typeName.match(/^Date$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value =\n                value instanceof Date\n                    ? value.toISOString().substring(0, 10)\n                    : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n            }\n            value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n                    `for it to be serialized in UnixTime/Epoch format.`);\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/i) !== null) {\n            if (!(0,_utils__WEBPACK_IMPORTED_MODULE_2__.isDuration)(value)) {\n                throw new Error(`${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName, isXml, options) {\n    var _a;\n    if (!Array.isArray(object)) {\n        throw new Error(`${objectName} must be of type Array.`);\n    }\n    let elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    // Quirk: Composite mappers referenced by `element` might\n    // not have *all* properties declared (like uberParent),\n    // so let's try to look up the full definition by name.\n    if (elementType.type.name === \"Composite\" && elementType.type.className) {\n        elementType = (_a = serializer.modelMappers[elementType.type.className]) !== null && _a !== void 0 ? _a : elementType;\n    }\n    const tempArray = [];\n    for (let i = 0; i < object.length; i++) {\n        const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n        if (isXml && elementType.xmlNamespace) {\n            const xmlnsKey = elementType.xmlNamespacePrefix\n                ? `xmlns:${elementType.xmlNamespacePrefix}`\n                : \"xmlns\";\n            if (elementType.type.name === \"Composite\") {\n                tempArray[i] = Object.assign({}, serializedValue);\n                tempArray[i][_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n            else {\n                tempArray[i] = {};\n                tempArray[i][options.xml.xmlCharKey] = serializedValue;\n                tempArray[i][_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n        }\n        else {\n            tempArray[i] = serializedValue;\n        }\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName, isXml, options) {\n    if (typeof object !== \"object\") {\n        throw new Error(`${objectName} must be of type object.`);\n    }\n    const valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempDictionary = {};\n    for (const key of Object.keys(object)) {\n        const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n        // If the element needs an XML namespace we need to add it within the $ property\n        tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n    }\n    // Add the namespace to the root element if needed\n    if (isXml && mapper.xmlNamespace) {\n        const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n        const result = tempDictionary;\n        result[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n        return result;\n    }\n    return tempDictionary;\n}\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveAdditionalProperties(serializer, mapper, objectName) {\n    const additionalProperties = mapper.type.additionalProperties;\n    if (!additionalProperties && mapper.type.className) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        return modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.additionalProperties;\n    }\n    return additionalProperties;\n}\n/**\n * Finds the mapper referenced by className\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveReferencedMapper(serializer, mapper, objectName) {\n    const className = mapper.type.className;\n    if (!className) {\n        throw new Error(`Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(mapper, undefined, 2)}\".`);\n    }\n    return serializer.modelMappers[className];\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    let modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        if (!modelMapper) {\n            throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n        }\n        modelProps = modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(`modelProperties cannot be null or undefined in the ` +\n                `mapper \"${JSON.stringify(modelMapper)}\" of type \"${mapper.type.className}\" for object \"${objectName}\".`);\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName, isXml, options) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object !== undefined && object !== null) {\n        const payload = {};\n        const modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (const key of Object.keys(modelProps)) {\n            const propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            let propName;\n            let parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                const paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (const pathName of paths) {\n                    const childObject = parentObject[pathName];\n                    if ((childObject === undefined || childObject === null) &&\n                        ((object[key] !== undefined && object[key] !== null) ||\n                            propertyMapper.defaultValue !== undefined)) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject !== undefined && parentObject !== null) {\n                if (isXml && mapper.xmlNamespace) {\n                    const xmlnsKey = mapper.xmlNamespacePrefix\n                        ? `xmlns:${mapper.xmlNamespacePrefix}`\n                        : \"xmlns\";\n                    parentObject[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = Object.assign(Object.assign({}, parentObject[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY]), { [xmlnsKey]: mapper.xmlNamespace });\n                }\n                const propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                let toSerialize = object[key];\n                const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator &&\n                    polymorphicDiscriminator.clientName === key &&\n                    (toSerialize === undefined || toSerialize === null)) {\n                    toSerialize = mapper.serializedName;\n                }\n                const serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName, options);\n                if (serializedValue !== undefined && propName !== undefined && propName !== null) {\n                    const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n                    if (isXml && propertyMapper.xmlIsAttribute) {\n                        // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = parentObject[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] || {};\n                        parentObject[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY][propName] = serializedValue;\n                    }\n                    else if (isXml && propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = { [propertyMapper.xmlElementName]: value };\n                    }\n                    else {\n                        parentObject[propName] = value;\n                    }\n                }\n            }\n        }\n        const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n        if (additionalPropertiesMapper) {\n            const propNames = Object.keys(modelProps);\n            for (const clientPropName in object) {\n                const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]', options);\n                }\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction getXmlObjectValue(propertyMapper, serializedValue, isXml, options) {\n    if (!isXml || !propertyMapper.xmlNamespace) {\n        return serializedValue;\n    }\n    const xmlnsKey = propertyMapper.xmlNamespacePrefix\n        ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n        : \"xmlns\";\n    const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n    if ([\"Composite\"].includes(propertyMapper.type.name)) {\n        if (serializedValue[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY]) {\n            return serializedValue;\n        }\n        else {\n            const result = Object.assign({}, serializedValue);\n            result[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = xmlNamespace;\n            return result;\n        }\n    }\n    const result = {};\n    result[options.xml.xmlCharKey] = serializedValue;\n    result[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = xmlNamespace;\n    return result;\n}\nfunction isSpecialXmlProperty(propertyName, options) {\n    return [_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY, options.xml.xmlCharKey].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName, options) {\n    var _a;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    let instance = {};\n    const handledPropertyNames = [];\n    for (const key of Object.keys(modelProps)) {\n        const propertyMapper = modelProps[key];\n        const paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        const { serializedName, xmlName, xmlElementName } = propertyMapper;\n        let propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        const headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            const dictionary = {};\n            for (const headerKey of Object.keys(responseBody)) {\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName, options);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY]) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody[_interfaces__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY][xmlName], propertyObjectName, options);\n            }\n            else {\n                const propertyName = xmlElementName || xmlName || serializedName;\n                if (propertyMapper.xmlIsWrapped) {\n                    /* a list of <xmlElementName> wrapped by <xmlName>\n                      For the xml example below\n                        <Cors>\n                          <CorsRule>...</CorsRule>\n                          <CorsRule>...</CorsRule>\n                        </Cors>\n                      the responseBody has\n                        {\n                          Cors: {\n                            CorsRule: [{...}, {...}]\n                          }\n                        }\n                      xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n                    */\n                    const wrapped = responseBody[xmlName];\n                    const elementList = (_a = wrapped === null || wrapped === void 0 ? void 0 : wrapped[xmlElementName]) !== null && _a !== void 0 ? _a : [];\n                    instance[key] = serializer.deserialize(propertyMapper, elementList, propertyObjectName, options);\n                }\n                else {\n                    const property = responseBody[propertyName];\n                    instance[key] = serializer.deserialize(propertyMapper, property, propertyObjectName, options);\n                }\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            let propertyInstance;\n            let res = responseBody;\n            // traversing the object step by step.\n            for (const item of paths) {\n                if (!res)\n                    break;\n                res = res[item];\n            }\n            propertyInstance = res;\n            const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            // checking that the model property name (key)(ex: \"fishtype\") and the\n            // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n            // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n            // is a better approach. The generator is not consistent with escaping '\\.' in the\n            // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n            // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n            // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n            // the transformation of model property name (ex: \"fishtype\") is done consistently.\n            // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n            if (polymorphicDiscriminator &&\n                key === polymorphicDiscriminator.clientName &&\n                (propertyInstance === undefined || propertyInstance === null)) {\n                propertyInstance = mapper.serializedName;\n            }\n            let serializedValue;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                const arrayInstance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                // Copy over any properties that have already been added into the instance, where they do\n                // not exist on the newly de-serialized array\n                for (const [k, v] of Object.entries(instance)) {\n                    if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n                        arrayInstance[k] = v;\n                    }\n                }\n                instance = arrayInstance;\n            }\n            else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    const additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        const isAdditionalProperty = (responsePropName) => {\n            for (const clientPropName in modelProps) {\n                const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (const responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]', options);\n            }\n        }\n    }\n    else if (responseBody) {\n        for (const key of Object.keys(responseBody)) {\n            if (instance[key] === undefined &&\n                !handledPropertyNames.includes(key) &&\n                !isSpecialXmlProperty(key, options)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName, options) {\n    /* jshint validthis: true */\n    const value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        const tempDictionary = {};\n        for (const key of Object.keys(responseBody)) {\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName, options) {\n    var _a;\n    let element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        // Quirk: Composite mappers referenced by `element` might\n        // not have *all* properties declared (like uberParent),\n        // so let's try to look up the full definition by name.\n        if (element.type.name === \"Composite\" && element.type.className) {\n            element = (_a = serializer.modelMappers[element.type.className]) !== null && _a !== void 0 ? _a : element;\n        }\n        const tempArray = [];\n        for (let i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], `${objectName}[${i}]`, options);\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        let discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName) {\n            // The serializedName might have \\\\, which we just want to ignore\n            if (polymorphicPropertyName === \"serializedName\") {\n                discriminatorName = discriminatorName.replace(/\\\\/gi, \"\");\n            }\n            const discriminatorValue = object[discriminatorName];\n            if (discriminatorValue !== undefined && discriminatorValue !== null) {\n                const typeName = mapper.type.uberParent || mapper.type.className;\n                const indexDiscriminator = discriminatorValue === typeName\n                    ? discriminatorValue\n                    : typeName + \".\" + discriminatorValue;\n                const polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return (mapper.type.polymorphicDiscriminator ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.className));\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName &&\n        serializer.modelMappers[typeName] &&\n        serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n/**\n * Known types of Mappers\n */\nconst MapperTypeNames = {\n    Base64Url: \"Base64Url\",\n    Boolean: \"Boolean\",\n    ByteArray: \"ByteArray\",\n    Composite: \"Composite\",\n    Date: \"Date\",\n    DateTime: \"DateTime\",\n    DateTimeRfc1123: \"DateTimeRfc1123\",\n    Dictionary: \"Dictionary\",\n    Enum: \"Enum\",\n    Number: \"Number\",\n    Object: \"Object\",\n    Sequence: \"Sequence\",\n    String: \"String\",\n    Stream: \"Stream\",\n    TimeSpan: \"TimeSpan\",\n    UnixTime: \"UnixTime\",\n};\n//# sourceMappingURL=serializer.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/serializer.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/serviceClient.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/serviceClient.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ServiceClient\": () => (/* binding */ ServiceClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/pipelineRequest.js\");\n/* harmony import */ var _pipeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pipeline */ \"./node_modules/@azure/core-client/dist-esm/src/pipeline.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"./node_modules/@azure/core-client/dist-esm/src/utils.js\");\n/* harmony import */ var _httpClientCache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httpClientCache */ \"./node_modules/@azure/core-client/dist-esm/src/httpClientCache.js\");\n/* harmony import */ var _operationHelpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operationHelpers */ \"./node_modules/@azure/core-client/dist-esm/src/operationHelpers.js\");\n/* harmony import */ var _urlHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./urlHelpers */ \"./node_modules/@azure/core-client/dist-esm/src/urlHelpers.js\");\n/* harmony import */ var _interfaceHelpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interfaceHelpers */ \"./node_modules/@azure/core-client/dist-esm/src/interfaceHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n/**\n * Initializes a new instance of the ServiceClient.\n */\nclass ServiceClient {\n    /**\n     * The ServiceClient constructor\n     * @param credential - The credentials used for authentication with the service.\n     * @param options - The service client options that govern the behavior of the client.\n     */\n    constructor(options = {}) {\n        var _a;\n        this._requestContentType = options.requestContentType;\n        this._baseUri = options.baseUri;\n        this._allowInsecureConnection = options.allowInsecureConnection;\n        this._httpClient = options.httpClient || (0,_httpClientCache__WEBPACK_IMPORTED_MODULE_0__.getCachedDefaultHttpClient)();\n        this.pipeline = options.pipeline || createDefaultPipeline(options);\n        if ((_a = options.additionalPolicies) === null || _a === void 0 ? void 0 : _a.length) {\n            for (const { policy, position } of options.additionalPolicies) {\n                // Sign happens after Retry and is commonly needed to occur\n                // before policies that intercept post-retry.\n                const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n                this.pipeline.addPolicy(policy, {\n                    afterPhase,\n                });\n            }\n        }\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    async sendRequest(request) {\n        return this.pipeline.sendRequest(this._httpClient, request);\n    }\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @typeParam T - The typed result of the request, based on the OperationSpec.\n     * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n     * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n     */\n    async sendOperationRequest(operationArguments, operationSpec) {\n        const baseUri = operationSpec.baseUrl || this._baseUri;\n        if (!baseUri) {\n            throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\");\n        }\n        // Templatized URLs sometimes reference properties on the ServiceClient child class,\n        // so we have to pass `this` below in order to search these properties if they're\n        // not part of OperationArguments\n        const url = (0,_urlHelpers__WEBPACK_IMPORTED_MODULE_1__.getRequestUrl)(baseUri, operationSpec, operationArguments, this);\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_2__.createPipelineRequest)({\n            url,\n        });\n        request.method = operationSpec.httpMethod;\n        const operationInfo = (0,_operationHelpers__WEBPACK_IMPORTED_MODULE_3__.getOperationRequestInfo)(request);\n        operationInfo.operationSpec = operationSpec;\n        operationInfo.operationArguments = operationArguments;\n        const contentType = operationSpec.contentType || this._requestContentType;\n        if (contentType && operationSpec.requestBody) {\n            request.headers.set(\"Content-Type\", contentType);\n        }\n        const options = operationArguments.options;\n        if (options) {\n            const requestOptions = options.requestOptions;\n            if (requestOptions) {\n                if (requestOptions.timeout) {\n                    request.timeout = requestOptions.timeout;\n                }\n                if (requestOptions.onUploadProgress) {\n                    request.onUploadProgress = requestOptions.onUploadProgress;\n                }\n                if (requestOptions.onDownloadProgress) {\n                    request.onDownloadProgress = requestOptions.onDownloadProgress;\n                }\n                if (requestOptions.shouldDeserialize !== undefined) {\n                    operationInfo.shouldDeserialize = requestOptions.shouldDeserialize;\n                }\n                if (requestOptions.allowInsecureConnection) {\n                    request.allowInsecureConnection = true;\n                }\n            }\n            if (options.abortSignal) {\n                request.abortSignal = options.abortSignal;\n            }\n            if (options.tracingOptions) {\n                request.tracingOptions = options.tracingOptions;\n            }\n        }\n        if (this._allowInsecureConnection) {\n            request.allowInsecureConnection = true;\n        }\n        if (request.streamResponseStatusCodes === undefined) {\n            request.streamResponseStatusCodes = (0,_interfaceHelpers__WEBPACK_IMPORTED_MODULE_4__.getStreamingResponseStatusCodes)(operationSpec);\n        }\n        try {\n            const rawResponse = await this.sendRequest(request);\n            const flatResponse = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.flattenResponse)(rawResponse, operationSpec.responses[rawResponse.status]);\n            if (options === null || options === void 0 ? void 0 : options.onResponse) {\n                options.onResponse(rawResponse, flatResponse);\n            }\n            return flatResponse;\n        }\n        catch (error) {\n            if (typeof error === \"object\" && (error === null || error === void 0 ? void 0 : error.response)) {\n                const rawResponse = error.response;\n                const flatResponse = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.flattenResponse)(rawResponse, operationSpec.responses[error.statusCode] || operationSpec.responses[\"default\"]);\n                error.details = flatResponse;\n                if (options === null || options === void 0 ? void 0 : options.onResponse) {\n                    options.onResponse(rawResponse, flatResponse, error);\n                }\n            }\n            throw error;\n        }\n    }\n}\nfunction createDefaultPipeline(options) {\n    const credentialScopes = getCredentialScopes(options);\n    const credentialOptions = options.credential && credentialScopes\n        ? { credentialScopes, credential: options.credential }\n        : undefined;\n    return (0,_pipeline__WEBPACK_IMPORTED_MODULE_6__.createClientPipeline)(Object.assign(Object.assign({}, options), { credentialOptions }));\n}\nfunction getCredentialScopes(options) {\n    if (options.credentialScopes) {\n        const scopes = options.credentialScopes;\n        return Array.isArray(scopes)\n            ? scopes.map((scope) => new URL(scope).toString())\n            : new URL(scopes).toString();\n    }\n    if (options.baseUri) {\n        return `${options.baseUri}/.default`;\n    }\n    if (options.credential && !options.credentialScopes) {\n        throw new Error(`When using credentials, the ServiceClientOptions must contain either a baseUri or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=serviceClient.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/serviceClient.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/urlHelpers.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/urlHelpers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getRequestUrl\": () => (/* binding */ getRequestUrl),\n/* harmony export */   \"appendQueryParams\": () => (/* binding */ appendQueryParams)\n/* harmony export */ });\n/* harmony import */ var _operationHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operationHelpers */ \"./node_modules/@azure/core-client/dist-esm/src/operationHelpers.js\");\n/* harmony import */ var _interfaceHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaceHelpers */ \"./node_modules/@azure/core-client/dist-esm/src/interfaceHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst CollectionFormatToDelimiterMap = {\n    CSV: \",\",\n    SSV: \" \",\n    Multi: \"Multi\",\n    TSV: \"\\t\",\n    Pipes: \"|\",\n};\nfunction getRequestUrl(baseUri, operationSpec, operationArguments, fallbackObject) {\n    const urlReplacements = calculateUrlReplacements(operationSpec, operationArguments, fallbackObject);\n    let isAbsolutePath = false;\n    let requestUrl = replaceAll(baseUri, urlReplacements);\n    if (operationSpec.path) {\n        let path = replaceAll(operationSpec.path, urlReplacements);\n        // QUIRK: sometimes we get a path component like /{nextLink}\n        // which may be a fully formed URL with a leading /. In that case, we should\n        // remove the leading /\n        if (operationSpec.path === \"/{nextLink}\" && path.startsWith(\"/\")) {\n            path = path.substring(1);\n        }\n        // QUIRK: sometimes we get a path component like {nextLink}\n        // which may be a fully formed URL. In that case, we should\n        // ignore the baseUri.\n        if (isAbsoluteUrl(path)) {\n            requestUrl = path;\n            isAbsolutePath = true;\n        }\n        else {\n            requestUrl = appendPath(requestUrl, path);\n        }\n    }\n    const { queryParams, sequenceParams } = calculateQueryParameters(operationSpec, operationArguments, fallbackObject);\n    /**\n     * Notice that this call sets the `noOverwrite` parameter to true if the `requestUrl`\n     * is an absolute path. This ensures that existing query parameter values in `requestUrl`\n     * do not get overwritten. On the other hand when `requestUrl` is not absolute path, it\n     * is still being built so there is nothing to overwrite.\n     */\n    requestUrl = appendQueryParams(requestUrl, queryParams, sequenceParams, isAbsolutePath);\n    return requestUrl;\n}\nfunction replaceAll(input, replacements) {\n    let result = input;\n    for (const [searchValue, replaceValue] of replacements) {\n        result = result.split(searchValue).join(replaceValue);\n    }\n    return result;\n}\nfunction calculateUrlReplacements(operationSpec, operationArguments, fallbackObject) {\n    var _a;\n    const result = new Map();\n    if ((_a = operationSpec.urlParameters) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const urlParameter of operationSpec.urlParameters) {\n            let urlParameterValue = (0,_operationHelpers__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, urlParameter, fallbackObject);\n            const parameterPathString = (0,_interfaceHelpers__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(urlParameter);\n            urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, parameterPathString);\n            if (!urlParameter.skipEncoding) {\n                urlParameterValue = encodeURIComponent(urlParameterValue);\n            }\n            result.set(`{${urlParameter.mapper.serializedName || parameterPathString}}`, urlParameterValue);\n        }\n    }\n    return result;\n}\nfunction isAbsoluteUrl(url) {\n    return url.includes(\"://\");\n}\nfunction appendPath(url, pathToAppend) {\n    if (!pathToAppend) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    let newPath = parsedUrl.pathname;\n    if (!newPath.endsWith(\"/\")) {\n        newPath = `${newPath}/`;\n    }\n    if (pathToAppend.startsWith(\"/\")) {\n        pathToAppend = pathToAppend.substring(1);\n    }\n    const searchStart = pathToAppend.indexOf(\"?\");\n    if (searchStart !== -1) {\n        const path = pathToAppend.substring(0, searchStart);\n        const search = pathToAppend.substring(searchStart + 1);\n        newPath = newPath + path;\n        if (search) {\n            parsedUrl.search = parsedUrl.search ? `${parsedUrl.search}&${search}` : search;\n        }\n    }\n    else {\n        newPath = newPath + pathToAppend;\n    }\n    parsedUrl.pathname = newPath;\n    return parsedUrl.toString();\n}\nfunction calculateQueryParameters(operationSpec, operationArguments, fallbackObject) {\n    var _a;\n    const result = new Map();\n    const sequenceParams = new Set();\n    if ((_a = operationSpec.queryParameters) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const queryParameter of operationSpec.queryParameters) {\n            if (queryParameter.mapper.type.name === \"Sequence\" && queryParameter.mapper.serializedName) {\n                sequenceParams.add(queryParameter.mapper.serializedName);\n            }\n            let queryParameterValue = (0,_operationHelpers__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, queryParameter, fallbackObject);\n            if ((queryParameterValue !== undefined && queryParameterValue !== null) ||\n                queryParameter.mapper.required) {\n                queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, (0,_interfaceHelpers__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(queryParameter));\n                const delimiter = queryParameter.collectionFormat\n                    ? CollectionFormatToDelimiterMap[queryParameter.collectionFormat]\n                    : \"\";\n                if (Array.isArray(queryParameterValue)) {\n                    // replace null and undefined\n                    queryParameterValue = queryParameterValue.map((item) => {\n                        if (item === null || item === undefined) {\n                            return \"\";\n                        }\n                        return item;\n                    });\n                }\n                if (queryParameter.collectionFormat === \"Multi\" && queryParameterValue.length === 0) {\n                    continue;\n                }\n                else if (Array.isArray(queryParameterValue) &&\n                    (queryParameter.collectionFormat === \"SSV\" || queryParameter.collectionFormat === \"TSV\")) {\n                    queryParameterValue = queryParameterValue.join(delimiter);\n                }\n                if (!queryParameter.skipEncoding) {\n                    if (Array.isArray(queryParameterValue)) {\n                        queryParameterValue = queryParameterValue.map((item) => {\n                            return encodeURIComponent(item);\n                        });\n                    }\n                    else {\n                        queryParameterValue = encodeURIComponent(queryParameterValue);\n                    }\n                }\n                // Join pipes and CSV *after* encoding, or the server will be upset.\n                if (Array.isArray(queryParameterValue) &&\n                    (queryParameter.collectionFormat === \"CSV\" || queryParameter.collectionFormat === \"Pipes\")) {\n                    queryParameterValue = queryParameterValue.join(delimiter);\n                }\n                result.set(queryParameter.mapper.serializedName || (0,_interfaceHelpers__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(queryParameter), queryParameterValue);\n            }\n        }\n    }\n    return {\n        queryParams: result,\n        sequenceParams,\n    };\n}\nfunction simpleParseQueryParams(queryString) {\n    const result = new Map();\n    if (!queryString || queryString[0] !== \"?\") {\n        return result;\n    }\n    // remove the leading ?\n    queryString = queryString.slice(1);\n    const pairs = queryString.split(\"&\");\n    for (const pair of pairs) {\n        const [name, value] = pair.split(\"=\", 2);\n        const existingValue = result.get(name);\n        if (existingValue) {\n            if (Array.isArray(existingValue)) {\n                existingValue.push(value);\n            }\n            else {\n                result.set(name, [existingValue, value]);\n            }\n        }\n        else {\n            result.set(name, value);\n        }\n    }\n    return result;\n}\n/** @internal */\nfunction appendQueryParams(url, queryParams, sequenceParams, noOverwrite = false) {\n    if (queryParams.size === 0) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    // QUIRK: parsedUrl.searchParams will have their name/value pairs decoded, which\n    // can change their meaning to the server, such as in the case of a SAS signature.\n    // To avoid accidentally un-encoding a query param, we parse the key/values ourselves\n    const combinedParams = simpleParseQueryParams(parsedUrl.search);\n    for (const [name, value] of queryParams) {\n        const existingValue = combinedParams.get(name);\n        if (Array.isArray(existingValue)) {\n            if (Array.isArray(value)) {\n                existingValue.push(...value);\n                const valueSet = new Set(existingValue);\n                combinedParams.set(name, Array.from(valueSet));\n            }\n            else {\n                existingValue.push(value);\n            }\n        }\n        else if (existingValue) {\n            if (Array.isArray(value)) {\n                value.unshift(existingValue);\n            }\n            else if (sequenceParams.has(name)) {\n                combinedParams.set(name, [existingValue, value]);\n            }\n            if (!noOverwrite) {\n                combinedParams.set(name, value);\n            }\n        }\n        else {\n            combinedParams.set(name, value);\n        }\n    }\n    const searchPieces = [];\n    for (const [name, value] of combinedParams) {\n        if (typeof value === \"string\") {\n            searchPieces.push(`${name}=${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // QUIRK: If we get an array of values, include multiple key/value pairs\n            for (const subValue of value) {\n                searchPieces.push(`${name}=${subValue}`);\n            }\n        }\n        else {\n            searchPieces.push(`${name}=${value}`);\n        }\n    }\n    // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n    parsedUrl.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n    return parsedUrl.toString();\n}\n//# sourceMappingURL=urlHelpers.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/urlHelpers.js?");

/***/ }),

/***/ "./node_modules/@azure/core-client/dist-esm/src/utils.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist-esm/src/utils.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isPrimitiveBody\": () => (/* binding */ isPrimitiveBody),\n/* harmony export */   \"isDuration\": () => (/* binding */ isDuration),\n/* harmony export */   \"isValidUuid\": () => (/* binding */ isValidUuid),\n/* harmony export */   \"flattenResponse\": () => (/* binding */ flattenResponse)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A type guard for a primitive response body.\n * @param value - Value to test\n *\n * @internal\n */\nfunction isPrimitiveBody(value, mapperTypeName) {\n    return (mapperTypeName !== \"Composite\" &&\n        mapperTypeName !== \"Dictionary\" &&\n        (typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\" ||\n            (mapperTypeName === null || mapperTypeName === void 0 ? void 0 : mapperTypeName.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i)) !==\n                null ||\n            value === undefined ||\n            value === null));\n}\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Returns true if the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @internal\n */\nfunction isDuration(value) {\n    return validateISODuration.test(value);\n}\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * Returns true if the provided uuid is valid.\n *\n * @param uuid - The uuid that needs to be validated.\n *\n * @internal\n */\nfunction isValidUuid(uuid) {\n    return validUuidRegex.test(uuid);\n}\n/**\n * Maps the response as follows:\n * - wraps the response body if needed (typically if its type is primitive).\n * - returns null if the combination of the headers and the body is empty.\n * - otherwise, returns the combination of the headers and the body.\n *\n * @param responseObject - a representation of the parsed response\n * @returns the response that will be returned to the user which can be null and/or wrapped\n *\n * @internal\n */\nfunction handleNullableResponseAndWrappableBody(responseObject) {\n    const combinedHeadersAndBody = Object.assign(Object.assign({}, responseObject.headers), responseObject.body);\n    if (responseObject.hasNullableType &&\n        Object.getOwnPropertyNames(combinedHeadersAndBody).length === 0) {\n        return responseObject.shouldWrapBody ? { body: null } : null;\n    }\n    else {\n        return responseObject.shouldWrapBody\n            ? Object.assign(Object.assign({}, responseObject.headers), { body: responseObject.body }) : combinedHeadersAndBody;\n    }\n}\n/**\n * Take a `FullOperationResponse` and turn it into a flat\n * response object to hand back to the consumer.\n * @param fullResponse - The processed response from the operation request\n * @param responseSpec - The response map from the OperationSpec\n *\n * @internal\n */\nfunction flattenResponse(fullResponse, responseSpec) {\n    var _a, _b;\n    const parsedHeaders = fullResponse.parsedHeaders;\n    // head methods never have a body, but we return a boolean set to body property\n    // to indicate presence/absence of the resource\n    if (fullResponse.request.method === \"HEAD\") {\n        return Object.assign(Object.assign({}, parsedHeaders), { body: fullResponse.parsedBody });\n    }\n    const bodyMapper = responseSpec && responseSpec.bodyMapper;\n    const isNullable = Boolean(bodyMapper === null || bodyMapper === void 0 ? void 0 : bodyMapper.nullable);\n    const expectedBodyTypeName = bodyMapper === null || bodyMapper === void 0 ? void 0 : bodyMapper.type.name;\n    /** If the body is asked for, we look at the expected body type to handle it */\n    if (expectedBodyTypeName === \"Stream\") {\n        return Object.assign(Object.assign({}, parsedHeaders), { blobBody: fullResponse.blobBody, readableStreamBody: fullResponse.readableStreamBody });\n    }\n    const modelProperties = (expectedBodyTypeName === \"Composite\" &&\n        bodyMapper.type.modelProperties) ||\n        {};\n    const isPageableResponse = Object.keys(modelProperties).some((k) => modelProperties[k].serializedName === \"\");\n    if (expectedBodyTypeName === \"Sequence\" || isPageableResponse) {\n        const arrayResponse = (_a = fullResponse.parsedBody) !== null && _a !== void 0 ? _a : [];\n        for (const key of Object.keys(modelProperties)) {\n            if (modelProperties[key].serializedName) {\n                arrayResponse[key] = (_b = fullResponse.parsedBody) === null || _b === void 0 ? void 0 : _b[key];\n            }\n        }\n        if (parsedHeaders) {\n            for (const key of Object.keys(parsedHeaders)) {\n                arrayResponse[key] = parsedHeaders[key];\n            }\n        }\n        return isNullable &&\n            !fullResponse.parsedBody &&\n            !parsedHeaders &&\n            Object.getOwnPropertyNames(modelProperties).length === 0\n            ? null\n            : arrayResponse;\n    }\n    return handleNullableResponseAndWrappableBody({\n        body: fullResponse.parsedBody,\n        headers: parsedHeaders,\n        hasNullableType: isNullable,\n        shouldWrapBody: isPrimitiveBody(fullResponse.parsedBody, expectedBodyTypeName),\n    });\n}\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-client/dist-esm/src/utils.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/coreHttp.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WebResource\": () => (/* reexport safe */ _webResource__WEBPACK_IMPORTED_MODULE_0__.WebResource),\n/* harmony export */   \"DefaultHttpClient\": () => (/* reexport safe */ _defaultHttpClient__WEBPACK_IMPORTED_MODULE_1__.XhrHttpClient),\n/* harmony export */   \"HttpHeaders\": () => (/* reexport safe */ _httpHeaders__WEBPACK_IMPORTED_MODULE_2__.HttpHeaders),\n/* harmony export */   \"HttpPipelineLogLevel\": () => (/* reexport safe */ _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_3__.HttpPipelineLogLevel),\n/* harmony export */   \"RestError\": () => (/* reexport safe */ _restError__WEBPACK_IMPORTED_MODULE_4__.RestError),\n/* harmony export */   \"operationOptionsToRequestOptionsBase\": () => (/* reexport safe */ _operationOptions__WEBPACK_IMPORTED_MODULE_5__.operationOptionsToRequestOptionsBase),\n/* harmony export */   \"ServiceClient\": () => (/* reexport safe */ _serviceClient__WEBPACK_IMPORTED_MODULE_6__.ServiceClient),\n/* harmony export */   \"flattenResponse\": () => (/* reexport safe */ _serviceClient__WEBPACK_IMPORTED_MODULE_6__.flattenResponse),\n/* harmony export */   \"createPipelineFromOptions\": () => (/* reexport safe */ _serviceClient__WEBPACK_IMPORTED_MODULE_6__.createPipelineFromOptions),\n/* harmony export */   \"QueryCollectionFormat\": () => (/* reexport safe */ _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_7__.QueryCollectionFormat),\n/* harmony export */   \"Constants\": () => (/* reexport safe */ _util_constants__WEBPACK_IMPORTED_MODULE_8__.Constants),\n/* harmony export */   \"bearerTokenAuthenticationPolicy\": () => (/* reexport safe */ _policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_9__.bearerTokenAuthenticationPolicy),\n/* harmony export */   \"logPolicy\": () => (/* reexport safe */ _policies_logPolicy__WEBPACK_IMPORTED_MODULE_10__.logPolicy),\n/* harmony export */   \"BaseRequestPolicy\": () => (/* reexport safe */ _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_11__.BaseRequestPolicy),\n/* harmony export */   \"RequestPolicyOptions\": () => (/* reexport safe */ _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_11__.RequestPolicyOptions),\n/* harmony export */   \"generateClientRequestIdPolicy\": () => (/* reexport safe */ _policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_12__.generateClientRequestIdPolicy),\n/* harmony export */   \"exponentialRetryPolicy\": () => (/* reexport safe */ _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_13__.exponentialRetryPolicy),\n/* harmony export */   \"RetryMode\": () => (/* reexport safe */ _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_13__.RetryMode),\n/* harmony export */   \"systemErrorRetryPolicy\": () => (/* reexport safe */ _policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_14__.systemErrorRetryPolicy),\n/* harmony export */   \"throttlingRetryPolicy\": () => (/* reexport safe */ _policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_15__.throttlingRetryPolicy),\n/* harmony export */   \"getDefaultProxySettings\": () => (/* reexport safe */ _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_16__.getDefaultProxySettings),\n/* harmony export */   \"proxyPolicy\": () => (/* reexport safe */ _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_16__.proxyPolicy),\n/* harmony export */   \"redirectPolicy\": () => (/* reexport safe */ _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_17__.redirectPolicy),\n/* harmony export */   \"keepAlivePolicy\": () => (/* reexport safe */ _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_18__.keepAlivePolicy),\n/* harmony export */   \"disableResponseDecompressionPolicy\": () => (/* reexport safe */ _policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_19__.disableResponseDecompressionPolicy),\n/* harmony export */   \"signingPolicy\": () => (/* reexport safe */ _policies_signingPolicy__WEBPACK_IMPORTED_MODULE_20__.signingPolicy),\n/* harmony export */   \"userAgentPolicy\": () => (/* reexport safe */ _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_21__.userAgentPolicy),\n/* harmony export */   \"getDefaultUserAgentValue\": () => (/* reexport safe */ _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_21__.getDefaultUserAgentValue),\n/* harmony export */   \"deserializationPolicy\": () => (/* reexport safe */ _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__.deserializationPolicy),\n/* harmony export */   \"deserializeResponseBody\": () => (/* reexport safe */ _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__.deserializeResponseBody),\n/* harmony export */   \"tracingPolicy\": () => (/* reexport safe */ _policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_23__.tracingPolicy),\n/* harmony export */   \"MapperType\": () => (/* reexport safe */ _serializer__WEBPACK_IMPORTED_MODULE_24__.MapperType),\n/* harmony export */   \"Serializer\": () => (/* reexport safe */ _serializer__WEBPACK_IMPORTED_MODULE_24__.Serializer),\n/* harmony export */   \"serializeObject\": () => (/* reexport safe */ _serializer__WEBPACK_IMPORTED_MODULE_24__.serializeObject),\n/* harmony export */   \"stripRequest\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.stripRequest),\n/* harmony export */   \"stripResponse\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.stripResponse),\n/* harmony export */   \"executePromisesSequentially\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.executePromisesSequentially),\n/* harmony export */   \"generateUuid\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.generateUuid),\n/* harmony export */   \"encodeUri\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.encodeUri),\n/* harmony export */   \"promiseToCallback\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.promiseToCallback),\n/* harmony export */   \"promiseToServiceCallback\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.promiseToServiceCallback),\n/* harmony export */   \"isValidUuid\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.isValidUuid),\n/* harmony export */   \"applyMixins\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.applyMixins),\n/* harmony export */   \"isNode\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.isNode),\n/* harmony export */   \"isDuration\": () => (/* reexport safe */ _util_utils__WEBPACK_IMPORTED_MODULE_25__.isDuration),\n/* harmony export */   \"URLBuilder\": () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_26__.URLBuilder),\n/* harmony export */   \"URLQuery\": () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_26__.URLQuery),\n/* harmony export */   \"delay\": () => (/* reexport safe */ _util_delay__WEBPACK_IMPORTED_MODULE_27__.delay),\n/* harmony export */   \"createSpanFunction\": () => (/* reexport safe */ _createSpanLegacy__WEBPACK_IMPORTED_MODULE_28__.createSpanFunction),\n/* harmony export */   \"isTokenCredential\": () => (/* reexport safe */ _azure_core_auth__WEBPACK_IMPORTED_MODULE_29__.isTokenCredential),\n/* harmony export */   \"ExpiringAccessTokenCache\": () => (/* reexport safe */ _credentials_accessTokenCache__WEBPACK_IMPORTED_MODULE_30__.ExpiringAccessTokenCache),\n/* harmony export */   \"AccessTokenRefresher\": () => (/* reexport safe */ _credentials_accessTokenRefresher__WEBPACK_IMPORTED_MODULE_31__.AccessTokenRefresher),\n/* harmony export */   \"BasicAuthenticationCredentials\": () => (/* reexport safe */ _credentials_basicAuthenticationCredentials__WEBPACK_IMPORTED_MODULE_32__.BasicAuthenticationCredentials),\n/* harmony export */   \"ApiKeyCredentials\": () => (/* reexport safe */ _credentials_apiKeyCredentials__WEBPACK_IMPORTED_MODULE_33__.ApiKeyCredentials),\n/* harmony export */   \"TopicCredentials\": () => (/* reexport safe */ _credentials_topicCredentials__WEBPACK_IMPORTED_MODULE_34__.TopicCredentials),\n/* harmony export */   \"parseXML\": () => (/* reexport safe */ _util_xml__WEBPACK_IMPORTED_MODULE_35__.parseXML),\n/* harmony export */   \"stringifyXML\": () => (/* reexport safe */ _util_xml__WEBPACK_IMPORTED_MODULE_35__.stringifyXML),\n/* harmony export */   \"XML_ATTRKEY\": () => (/* reexport safe */ _util_serializer_common__WEBPACK_IMPORTED_MODULE_36__.XML_ATTRKEY),\n/* harmony export */   \"XML_CHARKEY\": () => (/* reexport safe */ _util_serializer_common__WEBPACK_IMPORTED_MODULE_36__.XML_CHARKEY)\n/* harmony export */ });\n/* harmony import */ var _webResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webResource */ \"./node_modules/@azure/core-http/dist-esm/src/webResource.js\");\n/* harmony import */ var _defaultHttpClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultHttpClient */ \"./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js\");\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n/* harmony import */ var _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpPipelineLogLevel */ \"./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js\");\n/* harmony import */ var _restError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./restError */ \"./node_modules/@azure/core-http/dist-esm/src/restError.js\");\n/* harmony import */ var _operationOptions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operationOptions */ \"./node_modules/@azure/core-http/dist-esm/src/operationOptions.js\");\n/* harmony import */ var _serviceClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./serviceClient */ \"./node_modules/@azure/core-http/dist-esm/src/serviceClient.js\");\n/* harmony import */ var _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./queryCollectionFormat */ \"./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/bearerTokenAuthenticationPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js\");\n/* harmony import */ var _policies_logPolicy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/logPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js\");\n/* harmony import */ var _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./policies/requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./policies/generateClientRequestIdPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js\");\n/* harmony import */ var _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./policies/exponentialRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js\");\n/* harmony import */ var _policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./policies/systemErrorRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js\");\n/* harmony import */ var _policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./policies/throttlingRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js\");\n/* harmony import */ var _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./policies/proxyPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js\");\n/* harmony import */ var _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./policies/redirectPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./policies/keepAlivePolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js\");\n/* harmony import */ var _policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./policies/disableResponseDecompressionPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js\");\n/* harmony import */ var _policies_signingPolicy__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./policies/signingPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js\");\n/* harmony import */ var _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./policies/userAgentPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js\");\n/* harmony import */ var _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./policies/deserializationPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./policies/tracingPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js\");\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-http/dist-esm/src/serializer.js\");\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./url */ \"./node_modules/@azure/core-http/dist-esm/src/url.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n/* harmony import */ var _createSpanLegacy__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./createSpanLegacy */ \"./node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js\");\n/* harmony import */ var _azure_core_auth__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @azure/core-auth */ \"./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js\");\n/* harmony import */ var _credentials_accessTokenCache__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./credentials/accessTokenCache */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js\");\n/* harmony import */ var _credentials_accessTokenRefresher__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./credentials/accessTokenRefresher */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js\");\n/* harmony import */ var _credentials_basicAuthenticationCredentials__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./credentials/basicAuthenticationCredentials */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js\");\n/* harmony import */ var _credentials_apiKeyCredentials__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./credentials/apiKeyCredentials */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js\");\n/* harmony import */ var _credentials_topicCredentials__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./credentials/topicCredentials */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js\");\n/* harmony import */ var _util_xml__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./util/xml */ \"./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js\");\n/* harmony import */ var _util_serializer_common__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./util/serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n/* harmony import */ var _azure_core_asynciterator_polyfill__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @azure/core-asynciterator-polyfill */ \"./node_modules/@azure/core-asynciterator-polyfill/dist/index.js\");\n/* harmony import */ var _azure_core_asynciterator_polyfill__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_azure_core_asynciterator_polyfill__WEBPACK_IMPORTED_MODULE_37__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable-next-line @typescript-eslint/triple-slash-reference */\n/// <reference path=\"../dom-shim.d.ts\" />\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// legacy exports. Use core-tracing instead (and remove on next major version update of core-http).\n\n// Credentials\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=coreHttp.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/coreHttp.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSpanFunction\": () => (/* binding */ createSpanFunction)\n/* harmony export */ });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// NOTE: we've moved this code into core-tracing but these functions\n// were a part of the GA'd library and can't be removed until the next major\n// release. They currently get called always, even if tracing is not enabled.\n\n/**\n * This function is only here for compatibility. Use createSpanFunction in core-tracing.\n *\n * @deprecated This function is only here for compatibility. Use createSpanFunction in core-tracing.\n * @hidden\n\n * @param spanConfig - The name of the operation being performed.\n * @param tracingOptions - The options for the underlying http request.\n */\nfunction createSpanFunction(args) {\n    return (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createSpanFunction)(args);\n}\n//# sourceMappingURL=createSpanLegacy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TokenRefreshBufferMs\": () => (/* binding */ TokenRefreshBufferMs),\n/* harmony export */   \"ExpiringAccessTokenCache\": () => (/* binding */ ExpiringAccessTokenCache)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Defines the default token refresh buffer duration.\n */\nconst TokenRefreshBufferMs = 2 * 60 * 1000; // 2 Minutes\n/**\n * Provides an {@link AccessTokenCache} implementation which clears\n * the cached {@link AccessToken}'s after the expiresOnTimestamp has\n * passed.\n *\n * @deprecated No longer used in the bearer authorization policy.\n */\nclass ExpiringAccessTokenCache {\n    /**\n     * Constructs an instance of {@link ExpiringAccessTokenCache} with\n     * an optional expiration buffer time.\n     */\n    constructor(tokenRefreshBufferMs = TokenRefreshBufferMs) {\n        this.cachedToken = undefined;\n        this.tokenRefreshBufferMs = tokenRefreshBufferMs;\n    }\n    /**\n     * Saves an access token into the internal in-memory cache.\n     * @param accessToken - Access token or undefined to clear the cache.\n     */\n    setCachedToken(accessToken) {\n        this.cachedToken = accessToken;\n    }\n    /**\n     * Returns the cached access token, or `undefined` if one is not cached or the cached one is expiring soon.\n     */\n    getCachedToken() {\n        if (this.cachedToken &&\n            Date.now() + this.tokenRefreshBufferMs >= this.cachedToken.expiresOnTimestamp) {\n            this.cachedToken = undefined;\n        }\n        return this.cachedToken;\n    }\n}\n//# sourceMappingURL=accessTokenCache.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccessTokenRefresher\": () => (/* binding */ AccessTokenRefresher)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helps the core-http token authentication policies with requesting a new token if we're not currently waiting for a new token.\n *\n * @deprecated No longer used in the bearer authorization policy.\n */\nclass AccessTokenRefresher {\n    constructor(credential, scopes, requiredMillisecondsBeforeNewRefresh = 30000) {\n        this.credential = credential;\n        this.scopes = scopes;\n        this.requiredMillisecondsBeforeNewRefresh = requiredMillisecondsBeforeNewRefresh;\n        this.lastCalled = 0;\n    }\n    /**\n     * Returns true if the required milliseconds(defaulted to 30000) have been passed signifying\n     * that we are ready for a new refresh.\n     */\n    isReady() {\n        // We're only ready for a new refresh if the required milliseconds have passed.\n        return (!this.lastCalled || Date.now() - this.lastCalled > this.requiredMillisecondsBeforeNewRefresh);\n    }\n    /**\n     * Stores the time in which it is called,\n     * then requests a new token,\n     * then sets this.promise to undefined,\n     * then returns the token.\n     */\n    async getToken(options) {\n        this.lastCalled = Date.now();\n        const token = await this.credential.getToken(this.scopes, options);\n        this.promise = undefined;\n        return token || undefined;\n    }\n    /**\n     * Requests a new token if we're not currently waiting for a new token.\n     * Returns null if the required time between each call hasn't been reached.\n     */\n    refresh(options) {\n        if (!this.promise) {\n            this.promise = this.getToken(options);\n        }\n        return this.promise;\n    }\n}\n//# sourceMappingURL=accessTokenRefresher.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ApiKeyCredentials\": () => (/* binding */ ApiKeyCredentials)\n/* harmony export */ });\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Authenticates to a service using an API key.\n */\nclass ApiKeyCredentials {\n    /**\n     * @param options - Specifies the options to be provided for auth. Either header or query needs to be provided.\n     */\n    constructor(options) {\n        if (!options || (options && !options.inHeader && !options.inQuery)) {\n            throw new Error(`options cannot be null or undefined. Either \"inHeader\" or \"inQuery\" property of the options object needs to be provided.`);\n        }\n        this.inHeader = options.inHeader;\n        this.inQuery = options.inQuery;\n    }\n    /**\n     * Signs a request with the values provided in the inHeader and inQuery parameter.\n     *\n     * @param webResource - The WebResourceLike to be signed.\n     * @returns The signed request object.\n     */\n    signRequest(webResource) {\n        if (!webResource) {\n            return Promise.reject(new Error(`webResource cannot be null or undefined and must be of type \"object\".`));\n        }\n        if (this.inHeader) {\n            if (!webResource.headers) {\n                webResource.headers = new _httpHeaders__WEBPACK_IMPORTED_MODULE_0__.HttpHeaders();\n            }\n            for (const headerName in this.inHeader) {\n                webResource.headers.set(headerName, this.inHeader[headerName]);\n            }\n        }\n        if (this.inQuery) {\n            if (!webResource.url) {\n                return Promise.reject(new Error(`url cannot be null in the request object.`));\n            }\n            if (webResource.url.indexOf(\"?\") < 0) {\n                webResource.url += \"?\";\n            }\n            for (const key in this.inQuery) {\n                if (!webResource.url.endsWith(\"?\")) {\n                    webResource.url += \"&\";\n                }\n                webResource.url += `${key}=${this.inQuery[key]}`;\n            }\n        }\n        return Promise.resolve(webResource);\n    }\n}\n//# sourceMappingURL=apiKeyCredentials.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BasicAuthenticationCredentials\": () => (/* binding */ BasicAuthenticationCredentials)\n/* harmony export */ });\n/* harmony import */ var _util_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/base64 */ \"./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst HeaderConstants = _util_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.HeaderConstants;\nconst DEFAULT_AUTHORIZATION_SCHEME = \"Basic\";\n/**\n * A simple {@link ServiceClientCredential} that authenticates with a username and a password.\n */\nclass BasicAuthenticationCredentials {\n    /**\n     * Creates a new BasicAuthenticationCredentials object.\n     *\n     * @param userName - User name.\n     * @param password - Password.\n     * @param authorizationScheme - The authorization scheme.\n     */\n    constructor(userName, password, authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME) {\n        /**\n         * Authorization scheme. Defaults to \"Basic\".\n         * More information about authorization schemes is available here: https://developer.mozilla.org/docs/Web/HTTP/Authentication#authentication_schemes\n         */\n        this.authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME;\n        if (userName === null || userName === undefined || typeof userName.valueOf() !== \"string\") {\n            throw new Error(\"userName cannot be null or undefined and must be of type string.\");\n        }\n        if (password === null || password === undefined || typeof password.valueOf() !== \"string\") {\n            throw new Error(\"password cannot be null or undefined and must be of type string.\");\n        }\n        this.userName = userName;\n        this.password = password;\n        this.authorizationScheme = authorizationScheme;\n    }\n    /**\n     * Signs a request with the Authentication header.\n     *\n     * @param webResource - The WebResourceLike to be signed.\n     * @returns The signed request object.\n     */\n    signRequest(webResource) {\n        const credentials = `${this.userName}:${this.password}`;\n        const encodedCredentials = `${this.authorizationScheme} ${_util_base64__WEBPACK_IMPORTED_MODULE_1__.encodeString(credentials)}`;\n        if (!webResource.headers)\n            webResource.headers = new _httpHeaders__WEBPACK_IMPORTED_MODULE_2__.HttpHeaders();\n        webResource.headers.set(HeaderConstants.AUTHORIZATION, encodedCredentials);\n        return Promise.resolve(webResource);\n    }\n}\n//# sourceMappingURL=basicAuthenticationCredentials.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TopicCredentials\": () => (/* binding */ TopicCredentials)\n/* harmony export */ });\n/* harmony import */ var _apiKeyCredentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apiKeyCredentials */ \"./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A {@link TopicCredentials} object used for Azure Event Grid.\n */\nclass TopicCredentials extends _apiKeyCredentials__WEBPACK_IMPORTED_MODULE_0__.ApiKeyCredentials {\n    /**\n     * Creates a new EventGrid TopicCredentials object.\n     *\n     * @param topicKey - The EventGrid topic key\n     */\n    constructor(topicKey) {\n        if (!topicKey || (topicKey && typeof topicKey !== \"string\")) {\n            throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n        }\n        const options = {\n            inHeader: {\n                \"aeg-sas-key\": topicKey,\n            },\n        };\n        super(options);\n    }\n}\n//# sourceMappingURL=topicCredentials.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/httpClientCache.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/httpClientCache.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCachedDefaultHttpClient\": () => (/* binding */ getCachedDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _defaultHttpClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultHttpClient */ \"./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nlet cachedHttpClient;\nfunction getCachedDefaultHttpClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = new _defaultHttpClient__WEBPACK_IMPORTED_MODULE_0__.XhrHttpClient();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=httpClientCache.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/httpClientCache.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isHttpHeadersLike\": () => (/* binding */ isHttpHeadersLike),\n/* harmony export */   \"HttpHeaders\": () => (/* binding */ HttpHeaders)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName) {\n    return headerName.toLowerCase();\n}\nfunction isHttpHeadersLike(object) {\n    if (object && typeof object === \"object\") {\n        const castObject = object;\n        if (typeof castObject.rawHeaders === \"function\" &&\n            typeof castObject.clone === \"function\" &&\n            typeof castObject.get === \"function\" &&\n            typeof castObject.set === \"function\" &&\n            typeof castObject.contains === \"function\" &&\n            typeof castObject.remove === \"function\" &&\n            typeof castObject.headersArray === \"function\" &&\n            typeof castObject.headerValues === \"function\" &&\n            typeof castObject.headerNames === \"function\" &&\n            typeof castObject.toJson === \"function\") {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * A collection of HTTP header key/value pairs.\n */\nclass HttpHeaders {\n    constructor(rawHeaders) {\n        this._headersMap = {};\n        if (rawHeaders) {\n            for (const headerName in rawHeaders) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param headerName - The name of the header to set. This value is case-insensitive.\n     * @param headerValue - The value of the header to set.\n     */\n    set(headerName, headerValue) {\n        this._headersMap[getHeaderKey(headerName)] = {\n            name: headerName,\n            value: headerValue.toString(),\n        };\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param headerName - The name of the header.\n     */\n    get(headerName) {\n        const header = this._headersMap[getHeaderKey(headerName)];\n        return !header ? undefined : header.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     */\n    contains(headerName) {\n        return !!this._headersMap[getHeaderKey(headerName)];\n    }\n    /**\n     * Remove the header with the provided headerName. Return whether or not the header existed and\n     * was removed.\n     * @param headerName - The name of the header to remove.\n     */\n    remove(headerName) {\n        const result = this.contains(headerName);\n        delete this._headersMap[getHeaderKey(headerName)];\n        return result;\n    }\n    /**\n     * Get the headers that are contained this collection as an object.\n     */\n    rawHeaders() {\n        return this.toJson({ preserveCase: true });\n    }\n    /**\n     * Get the headers that are contained in this collection as an array.\n     */\n    headersArray() {\n        const headers = [];\n        for (const headerKey in this._headersMap) {\n            headers.push(this._headersMap[headerKey]);\n        }\n        return headers;\n    }\n    /**\n     * Get the header names that are contained in this collection.\n     */\n    headerNames() {\n        const headerNames = [];\n        const headers = this.headersArray();\n        for (let i = 0; i < headers.length; ++i) {\n            headerNames.push(headers[i].name);\n        }\n        return headerNames;\n    }\n    /**\n     * Get the header values that are contained in this collection.\n     */\n    headerValues() {\n        const headerValues = [];\n        const headers = this.headersArray();\n        for (let i = 0; i < headers.length; ++i) {\n            headerValues.push(headers[i].value);\n        }\n        return headerValues;\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJson(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const headerKey in this._headersMap) {\n                const header = this._headersMap[headerKey];\n                result[header.name] = header.value;\n            }\n        }\n        else {\n            for (const headerKey in this._headersMap) {\n                const header = this._headersMap[headerKey];\n                result[getHeaderKey(header.name)] = header.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJson({ preserveCase: true }));\n    }\n    /**\n     * Create a deep clone/copy of this HttpHeaders collection.\n     */\n    clone() {\n        const resultPreservingCasing = {};\n        for (const headerKey in this._headersMap) {\n            const header = this._headersMap[headerKey];\n            resultPreservingCasing[header.name] = header.value;\n        }\n        return new HttpHeaders(resultPreservingCasing);\n    }\n}\n//# sourceMappingURL=httpHeaders.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HttpPipelineLogLevel\": () => (/* binding */ HttpPipelineLogLevel)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The different levels of logs that can be used with the HttpPipelineLogger.\n */\nvar HttpPipelineLogLevel;\n(function (HttpPipelineLogLevel) {\n    /**\n     * A log level that indicates that no logs will be logged.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n    /**\n     * An error log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    /**\n     * A warning log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n    /**\n     * An information log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n})(HttpPipelineLogLevel || (HttpPipelineLogLevel = {}));\n//# sourceMappingURL=httpPipelineLogLevel.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/log.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/log.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logger\": () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"./node_modules/@azure/logger/dist-esm/src/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-http\");\n//# sourceMappingURL=log.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/log.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/operationOptions.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/operationOptions.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"operationOptionsToRequestOptionsBase\": () => (/* binding */ operationOptionsToRequestOptionsBase)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Converts an OperationOptions to a RequestOptionsBase\n *\n * @param opts - OperationOptions object to convert to RequestOptionsBase\n */\nfunction operationOptionsToRequestOptionsBase(opts) {\n    var _a;\n    const { requestOptions, tracingOptions } = opts, additionalOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(opts, [\"requestOptions\", \"tracingOptions\"]);\n    let result = additionalOptions;\n    if (requestOptions) {\n        result = Object.assign(Object.assign({}, result), requestOptions);\n    }\n    if (tracingOptions) {\n        result.tracingContext = tracingOptions.tracingContext;\n        // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n        result.spanOptions = (_a = tracingOptions) === null || _a === void 0 ? void 0 : _a.spanOptions;\n    }\n    return result;\n}\n//# sourceMappingURL=operationOptions.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/operationOptions.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/operationParameter.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/operationParameter.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getPathStringFromParameter\": () => (/* binding */ getPathStringFromParameter),\n/* harmony export */   \"getPathStringFromParameterPath\": () => (/* binding */ getPathStringFromParameterPath)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nfunction getPathStringFromParameter(parameter) {\n    return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\nfunction getPathStringFromParameterPath(parameterPath, mapper) {\n    let result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=operationParameter.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/operationParameter.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/operationSpec.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/operationSpec.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getStreamResponseStatusCodes\": () => (/* binding */ getStreamResponseStatusCodes)\n/* harmony export */ });\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-http/dist-esm/src/serializer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nfunction getStreamResponseStatusCodes(operationSpec) {\n    const result = new Set();\n    for (const statusCode in operationSpec.responses) {\n        const operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper &&\n            operationResponse.bodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_0__.MapperType.Stream) {\n            result.add(Number(statusCode));\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=operationSpec.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/operationSpec.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_CYCLER_OPTIONS\": () => (/* binding */ DEFAULT_CYCLER_OPTIONS),\n/* harmony export */   \"bearerTokenAuthenticationPolicy\": () => (/* binding */ bearerTokenAuthenticationPolicy)\n/* harmony export */ });\n/* harmony import */ var _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../policies/requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n// Default options for the cycler if none are provided\nconst DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000,\n    retryIntervalInMs: 3000,\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - a function that produces a promise of an access\n * token that may fail by returning null\n * @param retryIntervalInMs - the time (in milliseconds) to wait between retry\n * attempts\n * @param timeoutInMs - the timestamp after which the refresh attempt will fail,\n * throwing an exception\n * @returns - a promise that, if it resolves, will resolve with an access token\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, timeoutInMs) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < timeoutInMs) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await (0,_util_delay__WEBPACK_IMPORTED_MODULE_0__.delay)(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param scopes - the scopes to request authorization for\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(credential, scopes, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            return (!cycler.isRefreshing &&\n                ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now());\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        if (cycler.mustRefresh)\n            return refresh(tokenOptions);\n        if (cycler.shouldRefresh) {\n            refresh(tokenOptions);\n        }\n        return token;\n    };\n}\n// #endregion\n/**\n * Creates a new factory for a RequestPolicy that applies a bearer token to\n * the requests' `Authorization` headers.\n *\n * @param credential - The TokenCredential implementation that can supply the bearer token.\n * @param scopes - The scopes for which the bearer token applies.\n */\nfunction bearerTokenAuthenticationPolicy(credential, scopes) {\n    // This simple function encapsulates the entire process of reliably retrieving the token\n    const getToken = createTokenCycler(credential, scopes /* , options */);\n    class BearerTokenAuthenticationPolicy extends _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_1__.BaseRequestPolicy {\n        constructor(nextPolicy, options) {\n            super(nextPolicy, options);\n        }\n        async sendRequest(webResource) {\n            if (!webResource.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            const { token } = await getToken({\n                abortSignal: webResource.abortSignal,\n                tracingOptions: {\n                    tracingContext: webResource.tracingContext,\n                },\n            });\n            webResource.headers.set(_util_constants__WEBPACK_IMPORTED_MODULE_2__.Constants.HeaderConstants.AUTHORIZATION, `Bearer ${token}`);\n            return this._nextPolicy.sendRequest(webResource);\n        }\n    }\n    return {\n        create: (nextPolicy, options) => {\n            return new BearerTokenAuthenticationPolicy(nextPolicy, options);\n        },\n    };\n}\n//# sourceMappingURL=bearerTokenAuthenticationPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deserializationPolicy\": () => (/* binding */ deserializationPolicy),\n/* harmony export */   \"defaultJsonContentTypes\": () => (/* binding */ defaultJsonContentTypes),\n/* harmony export */   \"defaultXmlContentTypes\": () => (/* binding */ defaultXmlContentTypes),\n/* harmony export */   \"DefaultDeserializationOptions\": () => (/* binding */ DefaultDeserializationOptions),\n/* harmony export */   \"DeserializationPolicy\": () => (/* binding */ DeserializationPolicy),\n/* harmony export */   \"deserializeResponseBody\": () => (/* binding */ deserializeResponseBody)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_serializer_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../serializer */ \"./node_modules/@azure/core-http/dist-esm/src/serializer.js\");\n/* harmony import */ var _restError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../restError */ \"./node_modules/@azure/core-http/dist-esm/src/restError.js\");\n/* harmony import */ var _util_xml__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/xml */ \"./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n/**\n * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n * pass through the HTTP pipeline.\n */\nfunction deserializationPolicy(deserializationContentTypes, parsingOptions) {\n    return {\n        create: (nextPolicy, options) => {\n            return new DeserializationPolicy(nextPolicy, options, deserializationContentTypes, parsingOptions);\n        },\n    };\n}\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\nconst DefaultDeserializationOptions = {\n    expectedContentTypes: {\n        json: defaultJsonContentTypes,\n        xml: defaultXmlContentTypes,\n    },\n};\n/**\n * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n * HTTP pipeline.\n */\nclass DeserializationPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    constructor(nextPolicy, requestPolicyOptions, deserializationContentTypes, parsingOptions = {}) {\n        var _a;\n        super(nextPolicy, requestPolicyOptions);\n        this.jsonContentTypes =\n            (deserializationContentTypes && deserializationContentTypes.json) || defaultJsonContentTypes;\n        this.xmlContentTypes =\n            (deserializationContentTypes && deserializationContentTypes.xml) || defaultXmlContentTypes;\n        this.xmlCharKey = (_a = parsingOptions.xmlCharKey) !== null && _a !== void 0 ? _a : _util_serializer_common__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY;\n    }\n    async sendRequest(request) {\n        return this._nextPolicy.sendRequest(request).then((response) => deserializeResponseBody(this.jsonContentTypes, this.xmlContentTypes, response, {\n            xmlCharKey: this.xmlCharKey,\n        }));\n    }\n}\nfunction getOperationResponse(parsedResponse) {\n    let result;\n    const request = parsedResponse.request;\n    const operationSpec = request.operationSpec;\n    if (operationSpec) {\n        const operationResponseGetter = request.operationResponseGetter;\n        if (!operationResponseGetter) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    const shouldDeserialize = parsedResponse.request.shouldDeserialize;\n    let result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\n/**\n * Given a particular set of content types to parse as either JSON or XML, consumes the HTTP response to produce the result object defined by the request's {@link OperationSpec}.\n * @param jsonContentTypes - Response content types to parse the body as JSON.\n * @param xmlContentTypes  - Response content types to parse the body as XML.\n * @param response - HTTP Response from the pipeline.\n * @param options  - Options to the serializer, mostly for configuring the XML parser if needed.\n * @returns A parsed {@link HttpOperationResponse} object that can be returned by the {@link ServiceClient}.\n */\nfunction deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, options = {}) {\n    var _a, _b, _c;\n    const updatedOptions = {\n        rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : \"\",\n        includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,\n        xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : _util_serializer_common__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY,\n    };\n    return parse(jsonContentTypes, xmlContentTypes, response, updatedOptions).then((parsedResponse) => {\n        if (!shouldDeserializeResponse(parsedResponse)) {\n            return parsedResponse;\n        }\n        const operationSpec = parsedResponse.request.operationSpec;\n        if (!operationSpec || !operationSpec.responses) {\n            return parsedResponse;\n        }\n        const responseSpec = getOperationResponse(parsedResponse);\n        const { error, shouldReturnResponse } = handleErrorResponse(parsedResponse, operationSpec, responseSpec);\n        if (error) {\n            throw error;\n        }\n        else if (shouldReturnResponse) {\n            return parsedResponse;\n        }\n        // An operation response spec does exist for current status code, so\n        // use it to deserialize the response.\n        if (responseSpec) {\n            if (responseSpec.bodyMapper) {\n                let valueToDeserialize = parsedResponse.parsedBody;\n                if (operationSpec.isXML && responseSpec.bodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_2__.MapperType.Sequence) {\n                    valueToDeserialize =\n                        typeof valueToDeserialize === \"object\"\n                            ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName]\n                            : [];\n                }\n                try {\n                    parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\", options);\n                }\n                catch (innerError) {\n                    const restError = new _restError__WEBPACK_IMPORTED_MODULE_3__.RestError(`Error ${innerError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`, undefined, parsedResponse.status, parsedResponse.request, parsedResponse);\n                    throw restError;\n                }\n            }\n            else if (operationSpec.httpMethod === \"HEAD\") {\n                // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n                parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n            }\n            if (responseSpec.headersMapper) {\n                parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\", options);\n            }\n        }\n        return parsedResponse;\n    });\n}\nfunction isOperationSpecEmpty(operationSpec) {\n    const expectedStatusCodes = Object.keys(operationSpec.responses);\n    return (expectedStatusCodes.length === 0 ||\n        (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\"));\n}\nfunction handleErrorResponse(parsedResponse, operationSpec, responseSpec) {\n    var _a;\n    const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n    const isExpectedStatusCode = isOperationSpecEmpty(operationSpec)\n        ? isSuccessByStatus\n        : !!responseSpec;\n    if (isExpectedStatusCode) {\n        if (responseSpec) {\n            if (!responseSpec.isError) {\n                return { error: null, shouldReturnResponse: false };\n            }\n        }\n        else {\n            return { error: null, shouldReturnResponse: false };\n        }\n    }\n    const errorResponseSpec = responseSpec !== null && responseSpec !== void 0 ? responseSpec : operationSpec.responses.default;\n    const streaming = ((_a = parsedResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(parsedResponse.status)) ||\n        parsedResponse.request.streamResponseBody;\n    const initialErrorMessage = streaming\n        ? `Unexpected status code: ${parsedResponse.status}`\n        : parsedResponse.bodyAsText;\n    const error = new _restError__WEBPACK_IMPORTED_MODULE_3__.RestError(initialErrorMessage, undefined, parsedResponse.status, parsedResponse.request, parsedResponse);\n    // If the item failed but there's no error spec or default spec to deserialize the error,\n    // we should fail so we just throw the parsed response\n    if (!errorResponseSpec) {\n        throw error;\n    }\n    const defaultBodyMapper = errorResponseSpec.bodyMapper;\n    const defaultHeadersMapper = errorResponseSpec.headersMapper;\n    try {\n        // If error response has a body, try to deserialize it using default body mapper.\n        // Then try to extract error code & message from it\n        if (parsedResponse.parsedBody) {\n            const parsedBody = parsedResponse.parsedBody;\n            let parsedError;\n            if (defaultBodyMapper) {\n                let valueToDeserialize = parsedBody;\n                if (operationSpec.isXML && defaultBodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_2__.MapperType.Sequence) {\n                    valueToDeserialize =\n                        typeof parsedBody === \"object\" ? parsedBody[defaultBodyMapper.xmlElementName] : [];\n                }\n                parsedError = operationSpec.serializer.deserialize(defaultBodyMapper, valueToDeserialize, \"error.response.parsedBody\");\n            }\n            const internalError = parsedBody.error || parsedError || parsedBody;\n            error.code = internalError.code;\n            if (internalError.message) {\n                error.message = internalError.message;\n            }\n            if (defaultBodyMapper) {\n                error.response.parsedBody = parsedError;\n            }\n        }\n        // If error response has headers, try to deserialize it using default header mapper\n        if (parsedResponse.headers && defaultHeadersMapper) {\n            error.response.parsedHeaders = operationSpec.serializer.deserialize(defaultHeadersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\");\n        }\n    }\n    catch (defaultError) {\n        error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n    }\n    return { error, shouldReturnResponse: false };\n}\nfunction parse(jsonContentTypes, xmlContentTypes, operationResponse, opts) {\n    var _a;\n    const errorHandler = (err) => {\n        const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n        const errCode = err.code || _restError__WEBPACK_IMPORTED_MODULE_3__.RestError.PARSE_ERROR;\n        const e = new _restError__WEBPACK_IMPORTED_MODULE_3__.RestError(msg, errCode, operationResponse.status, operationResponse.request, operationResponse);\n        return Promise.reject(e);\n    };\n    const streaming = ((_a = operationResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(operationResponse.status)) ||\n        operationResponse.request.streamResponseBody;\n    if (!streaming && operationResponse.bodyAsText) {\n        const text = operationResponse.bodyAsText;\n        const contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        const contentComponents = !contentType\n            ? []\n            : contentType.split(\";\").map((component) => component.toLowerCase());\n        if (contentComponents.length === 0 ||\n            contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)) {\n            return new Promise((resolve) => {\n                operationResponse.parsedBody = JSON.parse(text);\n                resolve(operationResponse);\n            }).catch(errorHandler);\n        }\n        else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n            return (0,_util_xml__WEBPACK_IMPORTED_MODULE_4__.parseXML)(text, opts)\n                .then((body) => {\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            })\n                .catch(errorHandler);\n        }\n    }\n    return Promise.resolve(operationResponse);\n}\n//# sourceMappingURL=deserializationPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"disableResponseDecompressionPolicy\": () => (/* binding */ disableResponseDecompressionPolicy),\n/* harmony export */   \"DisableResponseDecompressionPolicy\": () => (/* binding */ DisableResponseDecompressionPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\n\nconst DisbleResponseDecompressionNotSupportedInBrowser = new Error(\"DisableResponseDecompressionPolicy is not supported in browser environment\");\n/**\n * {@link DisableResponseDecompressionPolicy} is not supported in browser and attempting\n * to use it will results in error being thrown.\n */\nfunction disableResponseDecompressionPolicy() {\n    return {\n        create: (_nextPolicy, _options) => {\n            throw DisbleResponseDecompressionNotSupportedInBrowser;\n        },\n    };\n}\nclass DisableResponseDecompressionPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n        throw DisbleResponseDecompressionNotSupportedInBrowser;\n    }\n    async sendRequest(_request) {\n        throw DisbleResponseDecompressionNotSupportedInBrowser;\n    }\n}\n//# sourceMappingURL=disableResponseDecompressionPolicy.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exponentialRetryPolicy\": () => (/* binding */ exponentialRetryPolicy),\n/* harmony export */   \"RetryMode\": () => (/* binding */ RetryMode),\n/* harmony export */   \"DefaultRetryOptions\": () => (/* binding */ DefaultRetryOptions),\n/* harmony export */   \"ExponentialRetryPolicy\": () => (/* binding */ ExponentialRetryPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/exponentialBackoffStrategy */ \"./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _restError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../restError */ \"./node_modules/@azure/core-http/dist-esm/src/restError.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log */ \"./node_modules/@azure/core-http/dist-esm/src/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n/**\n * Policy that retries the request as many times as configured for as long as the max retry time interval specified, each retry waiting longer to begin than the last time.\n * @param retryCount - Maximum number of retries.\n * @param retryInterval - Base time between retries.\n * @param maxRetryInterval - Maximum time to wait between retries.\n */\nfunction exponentialRetryPolicy(retryCount, retryInterval, maxRetryInterval) {\n    return {\n        create: (nextPolicy, options) => {\n            return new ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, maxRetryInterval);\n        },\n    };\n}\n/**\n * Describes the Retry Mode type. Currently supporting only Exponential.\n */\nvar RetryMode;\n(function (RetryMode) {\n    /**\n     * Currently supported retry mode.\n     * Each time a retry happens, it will take exponentially more time than the last time.\n     */\n    RetryMode[RetryMode[\"Exponential\"] = 0] = \"Exponential\";\n})(RetryMode || (RetryMode = {}));\nconst DefaultRetryOptions = {\n    maxRetries: _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLIENT_RETRY_COUNT,\n    retryDelayInMs: _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLIENT_RETRY_INTERVAL,\n    maxRetryDelayInMs: _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLIENT_MAX_RETRY_INTERVAL,\n};\n/**\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n */\nclass ExponentialRetryPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_1__.BaseRequestPolicy {\n    /**\n     * @param nextPolicy - The next RequestPolicy in the pipeline chain.\n     * @param options - The options for this RequestPolicy.\n     * @param retryCount - The client retry count.\n     * @param retryInterval - The client retry interval, in milliseconds.\n     * @param minRetryInterval - The minimum retry interval, in milliseconds.\n     * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n     */\n    constructor(nextPolicy, options, retryCount, retryInterval, maxRetryInterval) {\n        super(nextPolicy, options);\n        this.retryCount = (0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.isNumber)(retryCount) ? retryCount : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLIENT_RETRY_COUNT;\n        this.retryInterval = (0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.isNumber)(retryInterval) ? retryInterval : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLIENT_RETRY_INTERVAL;\n        this.maxRetryInterval = (0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.isNumber)(maxRetryInterval)\n            ? maxRetryInterval\n            : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .then((response) => retry(this, request, response))\n            .catch((error) => retry(this, request, error.response, undefined, error));\n    }\n}\nasync function retry(policy, request, response, retryData, requestError) {\n    function shouldPolicyRetry(responseParam) {\n        const statusCode = responseParam === null || responseParam === void 0 ? void 0 : responseParam.status;\n        if (statusCode === 503 && (response === null || response === void 0 ? void 0 : response.headers.get(_util_constants__WEBPACK_IMPORTED_MODULE_2__.Constants.HeaderConstants.RETRY_AFTER))) {\n            return false;\n        }\n        if (statusCode === undefined ||\n            (statusCode < 500 && statusCode !== 408) ||\n            statusCode === 501 ||\n            statusCode === 505) {\n            return false;\n        }\n        return true;\n    }\n    retryData = (0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.updateRetryData)({\n        retryInterval: policy.retryInterval,\n        minRetryInterval: 0,\n        maxRetryInterval: policy.maxRetryInterval,\n    }, retryData, requestError);\n    const isAborted = request.abortSignal && request.abortSignal.aborted;\n    if (!isAborted && (0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_0__.shouldRetry)(policy.retryCount, shouldPolicyRetry, retryData, response)) {\n        _log__WEBPACK_IMPORTED_MODULE_3__.logger.info(`Retrying request in ${retryData.retryInterval}`);\n        try {\n            await (0,_util_delay__WEBPACK_IMPORTED_MODULE_4__.delay)(retryData.retryInterval);\n            const res = await policy._nextPolicy.sendRequest(request.clone());\n            return retry(policy, request, res, retryData);\n        }\n        catch (err) {\n            return retry(policy, request, response, retryData, err);\n        }\n    }\n    else if (isAborted || requestError || !response) {\n        // If the operation failed in the end, return all errors instead of just the last one\n        const err = retryData.error ||\n            new _restError__WEBPACK_IMPORTED_MODULE_5__.RestError(\"Failed to send the request.\", _restError__WEBPACK_IMPORTED_MODULE_5__.RestError.REQUEST_SEND_ERROR, response && response.status, response && response.request, response);\n        throw err;\n    }\n    else {\n        return response;\n    }\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateClientRequestIdPolicy\": () => (/* binding */ generateClientRequestIdPolicy),\n/* harmony export */   \"GenerateClientRequestIdPolicy\": () => (/* binding */ GenerateClientRequestIdPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Creates a policy that assigns a unique request id to outgoing requests.\n * @param requestIdHeaderName - The name of the header to use when assigning the unique id to the request.\n */\nfunction generateClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        create: (nextPolicy, options) => {\n            return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n        },\n    };\n}\nclass GenerateClientRequestIdPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    constructor(nextPolicy, options, _requestIdHeaderName) {\n        super(nextPolicy, options);\n        this._requestIdHeaderName = _requestIdHeaderName;\n    }\n    sendRequest(request) {\n        if (!request.headers.contains(this._requestIdHeaderName)) {\n            request.headers.set(this._requestIdHeaderName, request.requestId);\n        }\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=generateClientRequestIdPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultKeepAliveOptions\": () => (/* binding */ DefaultKeepAliveOptions),\n/* harmony export */   \"keepAlivePolicy\": () => (/* binding */ keepAlivePolicy),\n/* harmony export */   \"KeepAlivePolicy\": () => (/* binding */ KeepAlivePolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * By default, HTTP connections are maintained for future requests.\n */\nconst DefaultKeepAliveOptions = {\n    enable: true,\n};\n/**\n * Creates a policy that controls whether HTTP connections are maintained on future requests.\n * @param keepAliveOptions - Keep alive options. By default, HTTP connections are maintained for future requests.\n * @returns An instance of the {@link KeepAlivePolicy}\n */\nfunction keepAlivePolicy(keepAliveOptions) {\n    return {\n        create: (nextPolicy, options) => {\n            return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n        },\n    };\n}\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nclass KeepAlivePolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    /**\n     * Creates an instance of KeepAlivePolicy.\n     *\n     * @param nextPolicy -\n     * @param options -\n     * @param keepAliveOptions -\n     */\n    constructor(nextPolicy, options, keepAliveOptions) {\n        super(nextPolicy, options);\n        this.keepAliveOptions = keepAliveOptions;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param request -\n     * @returns\n     */\n    async sendRequest(request) {\n        request.keepAlive = this.keepAliveOptions.enable;\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=keepAlivePolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logPolicy\": () => (/* binding */ logPolicy),\n/* harmony export */   \"LogPolicy\": () => (/* binding */ LogPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_sanitizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/sanitizer */ \"./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ \"./node_modules/@azure/core-http/dist-esm/src/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * Creates a policy that logs information about the outgoing request and the incoming responses.\n * @param loggingOptions - Logging options.\n * @returns An instance of the {@link LogPolicy}\n */\nfunction logPolicy(loggingOptions = {}) {\n    return {\n        create: (nextPolicy, options) => {\n            return new LogPolicy(nextPolicy, options, loggingOptions);\n        },\n    };\n}\n/**\n * A policy that logs information about the outgoing request and the incoming responses.\n */\nclass LogPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    constructor(nextPolicy, options, { logger = _log__WEBPACK_IMPORTED_MODULE_1__.logger.info, allowedHeaderNames = [], allowedQueryParameters = [], } = {}) {\n        super(nextPolicy, options);\n        this.logger = logger;\n        this.sanitizer = new _util_sanitizer__WEBPACK_IMPORTED_MODULE_2__.Sanitizer({ allowedHeaderNames, allowedQueryParameters });\n    }\n    /**\n     * Header names whose values will be logged when logging is enabled. Defaults to\n     * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n     * specified in this field will be added to that list.  Any other values will\n     * be written to logs as \"REDACTED\".\n     * @deprecated Pass these into the constructor instead.\n     */\n    get allowedHeaderNames() {\n        return this.sanitizer.allowedHeaderNames;\n    }\n    /**\n     * Header names whose values will be logged when logging is enabled. Defaults to\n     * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n     * specified in this field will be added to that list.  Any other values will\n     * be written to logs as \"REDACTED\".\n     * @deprecated Pass these into the constructor instead.\n     */\n    set allowedHeaderNames(allowedHeaderNames) {\n        this.sanitizer.allowedHeaderNames = allowedHeaderNames;\n    }\n    /**\n     * Query string names whose values will be logged when logging is enabled. By default no\n     * query string values are logged.\n     * @deprecated Pass these into the constructor instead.\n     */\n    get allowedQueryParameters() {\n        return this.sanitizer.allowedQueryParameters;\n    }\n    /**\n     * Query string names whose values will be logged when logging is enabled. By default no\n     * query string values are logged.\n     * @deprecated Pass these into the constructor instead.\n     */\n    set allowedQueryParameters(allowedQueryParameters) {\n        this.sanitizer.allowedQueryParameters = allowedQueryParameters;\n    }\n    sendRequest(request) {\n        if (!this.logger.enabled)\n            return this._nextPolicy.sendRequest(request);\n        this.logRequest(request);\n        return this._nextPolicy.sendRequest(request).then((response) => this.logResponse(response));\n    }\n    logRequest(request) {\n        this.logger(`Request: ${this.sanitizer.sanitize(request)}`);\n    }\n    logResponse(response) {\n        this.logger(`Response status code: ${response.status}`);\n        this.logger(`Headers: ${this.sanitizer.sanitize(response.headers)}`);\n        return response;\n    }\n}\n//# sourceMappingURL=logPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDefaultUserAgentKey\": () => (/* binding */ getDefaultUserAgentKey),\n/* harmony export */   \"getPlatformSpecificData\": () => (/* binding */ getPlatformSpecificData)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction getDefaultUserAgentKey() {\n    return \"x-ms-useragent\";\n}\nfunction getPlatformSpecificData() {\n    const navigator = self.navigator;\n    const osInfo = {\n        key: \"OS\",\n        value: (navigator.oscpu || navigator.platform).replace(\" \", \"\"),\n    };\n    return [osInfo];\n}\n//# sourceMappingURL=msRestUserAgentPolicy.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ndJsonPolicy\": () => (/* binding */ ndJsonPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// BaseRequestPolicy has a protected constructor.\n/* eslint-disable @typescript-eslint/no-useless-constructor */\n\nfunction ndJsonPolicy() {\n    return {\n        create: (nextPolicy, options) => {\n            return new NdJsonPolicy(nextPolicy, options);\n        },\n    };\n}\n/**\n * NdJsonPolicy that formats a JSON array as newline-delimited JSON\n */\nclass NdJsonPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    /**\n     * Creates an instance of KeepAlivePolicy.\n     */\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n    }\n    /**\n     * Sends a request.\n     */\n    async sendRequest(request) {\n        // There currently isn't a good way to bypass the serializer\n        if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n            const body = JSON.parse(request.body);\n            if (Array.isArray(body)) {\n                request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n            }\n        }\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=ndJsonPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDefaultProxySettings\": () => (/* binding */ getDefaultProxySettings),\n/* harmony export */   \"proxyPolicy\": () => (/* binding */ proxyPolicy),\n/* harmony export */   \"ProxyPolicy\": () => (/* binding */ ProxyPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\nfunction getDefaultProxySettings(_proxyUrl) {\n    return undefined;\n}\nfunction proxyPolicy(_proxySettings) {\n    return {\n        create: (_nextPolicy, _options) => {\n            throw proxyNotSupportedInBrowser;\n        },\n    };\n}\nclass ProxyPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n        throw proxyNotSupportedInBrowser;\n    }\n    sendRequest(_request) {\n        throw proxyNotSupportedInBrowser;\n    }\n}\n//# sourceMappingURL=proxyPolicy.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultRedirectOptions\": () => (/* binding */ DefaultRedirectOptions),\n/* harmony export */   \"redirectPolicy\": () => (/* binding */ redirectPolicy),\n/* harmony export */   \"RedirectPolicy\": () => (/* binding */ RedirectPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../url */ \"./node_modules/@azure/core-http/dist-esm/src/url.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\nconst DefaultRedirectOptions = {\n    handleRedirects: true,\n    maxRetries: 20,\n};\n/**\n * Creates a redirect policy, which sends a repeats the request to a new destination if a response arrives with a \"location\" header, and a status code between 300 and 307.\n * @param maximumRetries - Maximum number of redirects to follow.\n * @returns An instance of the {@link RedirectPolicy}\n */\nfunction redirectPolicy(maximumRetries = 20) {\n    return {\n        create: (nextPolicy, options) => {\n            return new RedirectPolicy(nextPolicy, options, maximumRetries);\n        },\n    };\n}\n/**\n * Resends the request to a new destination if a response arrives with a \"location\" header, and a status code between 300 and 307.\n */\nclass RedirectPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    constructor(nextPolicy, options, maxRetries = 20) {\n        super(nextPolicy, options);\n        this.maxRetries = maxRetries;\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request)\n            .then((response) => handleRedirect(this, response, 0));\n    }\n}\nfunction handleRedirect(policy, response, currentRetries) {\n    const { request, status } = response;\n    const locationHeader = response.headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        (!policy.maxRetries || currentRetries < policy.maxRetries)) {\n        const builder = _url__WEBPACK_IMPORTED_MODULE_1__.URLBuilder.parse(request.url);\n        builder.setPath(locationHeader);\n        request.url = builder.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            delete request.body;\n        }\n        return policy._nextPolicy\n            .sendRequest(request)\n            .then((res) => handleRedirect(policy, res, currentRetries + 1));\n    }\n    return Promise.resolve(response);\n}\n//# sourceMappingURL=redirectPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseRequestPolicy\": () => (/* binding */ BaseRequestPolicy),\n/* harmony export */   \"RequestPolicyOptions\": () => (/* binding */ RequestPolicyOptions)\n/* harmony export */ });\n/* harmony import */ var _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../httpPipelineLogLevel */ \"./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The base class from which all request policies derive.\n */\nclass BaseRequestPolicy {\n    /**\n     * The main method to implement that manipulates a request/response.\n     */\n    constructor(\n    /**\n     * The next policy in the pipeline. Each policy is responsible for executing the next one if the request is to continue through the pipeline.\n     */\n    _nextPolicy, \n    /**\n     * The options that can be passed to a given request policy.\n     */\n    _options) {\n        this._nextPolicy = _nextPolicy;\n        this._options = _options;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel - The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    shouldLog(logLevel) {\n        return this._options.shouldLog(logLevel);\n    }\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meat the logger's threshold, then nothing will be logged.\n     * @param logLevel - The log level of this log.\n     * @param message - The message of this log.\n     */\n    log(logLevel, message) {\n        this._options.log(logLevel, message);\n    }\n}\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nclass RequestPolicyOptions {\n    constructor(_logger) {\n        this._logger = _logger;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel - The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    shouldLog(logLevel) {\n        return (!!this._logger &&\n            logLevel !== _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_0__.HttpPipelineLogLevel.OFF &&\n            logLevel <= this._logger.minimumLogLevel);\n    }\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meet the logger's threshold, then nothing will be logged.\n     * @param logLevel - The log level of this log.\n     * @param message - The message of this log.\n     */\n    log(logLevel, message) {\n        if (this._logger && this.shouldLog(logLevel)) {\n            this._logger.log(logLevel, message);\n        }\n    }\n}\n//# sourceMappingURL=requestPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rpRegistrationPolicy\": () => (/* binding */ rpRegistrationPolicy),\n/* harmony export */   \"RPRegistrationPolicy\": () => (/* binding */ RPRegistrationPolicy)\n/* harmony export */ });\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nfunction rpRegistrationPolicy(retryTimeout = 30) {\n    return {\n        create: (nextPolicy, options) => {\n            return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n        },\n    };\n}\nclass RPRegistrationPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    constructor(nextPolicy, options, _retryTimeout = 30) {\n        super(nextPolicy, options);\n        this._retryTimeout = _retryTimeout;\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .then((response) => registerIfNeeded(this, request, response));\n    }\n}\nfunction registerIfNeeded(policy, request, response) {\n    if (response.status === 409) {\n        const rpName = checkRPNotRegisteredError(response.bodyAsText);\n        if (rpName) {\n            const urlPrefix = extractSubscriptionUrl(request.url);\n            return (registerRP(policy, urlPrefix, rpName, request)\n                // Autoregistration of ${provider} failed for some reason. We will not return this error\n                // instead will return the initial response with 409 status code back to the user.\n                // do nothing here as we are returning the original response at the end of this method.\n                .catch(() => false)\n                .then((registrationStatus) => {\n                if (registrationStatus) {\n                    // Retry the original request. We have to change the x-ms-client-request-id\n                    // otherwise Azure endpoint will return the initial 409 (cached) response.\n                    request.headers.set(\"x-ms-client-request-id\", _util_utils__WEBPACK_IMPORTED_MODULE_1__.generateUuid());\n                    return policy._nextPolicy.sendRequest(request.clone());\n                }\n                return response;\n            }));\n        }\n    }\n    return Promise.resolve(response);\n}\n/**\n * Reuses the headers of the original request and url (if specified).\n * @param originalRequest - The original request\n * @param reuseUrlToo - Should the url from the original request be reused as well. Default false.\n * @returns A new request object with desired headers.\n */\nfunction getRequestEssentials(originalRequest, reuseUrlToo = false) {\n    const reqOptions = originalRequest.clone();\n    if (reuseUrlToo) {\n        reqOptions.url = originalRequest.url;\n    }\n    // We have to change the x-ms-client-request-id otherwise Azure endpoint\n    // will return the initial 409 (cached) response.\n    reqOptions.headers.set(\"x-ms-client-request-id\", _util_utils__WEBPACK_IMPORTED_MODULE_1__.generateUuid());\n    // Set content-type to application/json\n    reqOptions.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n    return reqOptions;\n}\n/**\n * Validates the error code and message associated with 409 response status code. If it matches to that of\n * RP not registered then it returns the name of the RP else returns undefined.\n * @param body - The response body received after making the original request.\n * @returns The name of the RP if condition is satisfied else undefined.\n */\nfunction checkRPNotRegisteredError(body) {\n    let result, responseBody;\n    if (body) {\n        try {\n            responseBody = JSON.parse(body);\n        }\n        catch (err) {\n            // do nothing;\n        }\n        if (responseBody &&\n            responseBody.error &&\n            responseBody.error.message &&\n            responseBody.error.code &&\n            responseBody.error.code === \"MissingSubscriptionRegistration\") {\n            const matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n            if (matchRes) {\n                result = matchRes.pop();\n            }\n        }\n    }\n    return result;\n}\n/**\n * Extracts the first part of the URL, just after subscription:\n * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param url - The original request url\n * @returns The url prefix as explained above.\n */\nfunction extractSubscriptionUrl(url) {\n    let result;\n    const matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//gi);\n    if (matchRes && matchRes[0]) {\n        result = matchRes[0];\n    }\n    else {\n        throw new Error(`Unable to extract subscriptionId from the given url - ${url}.`);\n    }\n    return result;\n}\n/**\n * Registers the given provider.\n * @param policy - The RPRegistrationPolicy this function is being called against.\n * @param urlPrefix - https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param provider - The provider name to be registered.\n * @param originalRequest - The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n */\nasync function registerRP(policy, urlPrefix, provider, originalRequest) {\n    const postUrl = `${urlPrefix}providers/${provider}/register?api-version=2016-02-01`;\n    const getUrl = `${urlPrefix}providers/${provider}?api-version=2016-02-01`;\n    const reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.method = \"POST\";\n    reqOptions.url = postUrl;\n    const response = await policy._nextPolicy.sendRequest(reqOptions);\n    if (response.status !== 200) {\n        throw new Error(`Autoregistration of ${provider} failed. Please try registering manually.`);\n    }\n    return getRegistrationStatus(policy, getUrl, originalRequest);\n}\n/**\n * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n * Polling will happen till the registrationState property of the response body is \"Registered\".\n * @param policy - The RPRegistrationPolicy this function is being called against.\n * @param url - The request url for polling\n * @param originalRequest - The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @returns True if RP Registration is successful.\n */\nasync function getRegistrationStatus(policy, url, originalRequest) {\n    const reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.url = url;\n    reqOptions.method = \"GET\";\n    const res = await policy._nextPolicy.sendRequest(reqOptions);\n    const obj = res.parsedBody;\n    if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n        return true;\n    }\n    else {\n        await (0,_util_delay__WEBPACK_IMPORTED_MODULE_2__.delay)(policy._retryTimeout * 1000);\n        return getRegistrationStatus(policy, url, originalRequest);\n    }\n}\n//# sourceMappingURL=rpRegistrationPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"signingPolicy\": () => (/* binding */ signingPolicy),\n/* harmony export */   \"SigningPolicy\": () => (/* binding */ SigningPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Creates a policy that signs outgoing requests by calling to the provided `authenticationProvider`'s `signRequest` method.\n * @param authenticationProvider - The authentication provider.\n * @returns An instance of the {@link SigningPolicy}.\n */\nfunction signingPolicy(authenticationProvider) {\n    return {\n        create: (nextPolicy, options) => {\n            return new SigningPolicy(nextPolicy, options, authenticationProvider);\n        },\n    };\n}\n/**\n * A policy that signs outgoing requests by calling to the provided `authenticationProvider`'s `signRequest` method.\n */\nclass SigningPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    constructor(nextPolicy, options, authenticationProvider) {\n        super(nextPolicy, options);\n        this.authenticationProvider = authenticationProvider;\n    }\n    signRequest(request) {\n        return this.authenticationProvider.signRequest(request);\n    }\n    sendRequest(request) {\n        return this.signRequest(request).then((nextRequest) => this._nextPolicy.sendRequest(nextRequest));\n    }\n}\n//# sourceMappingURL=signingPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"systemErrorRetryPolicy\": () => (/* binding */ systemErrorRetryPolicy),\n/* harmony export */   \"SystemErrorRetryPolicy\": () => (/* binding */ SystemErrorRetryPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/exponentialBackoffStrategy */ \"./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * A policy that retries when there's a system error, identified by the codes \"ETIMEDOUT\", \"ESOCKETTIMEDOUT\", \"ECONNREFUSED\", \"ECONNRESET\" or \"ENOENT\".\n * @param retryCount - Maximum number of retries.\n * @param retryInterval - The client retry interval, in milliseconds.\n * @param minRetryInterval - The minimum retry interval, in milliseconds.\n * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n * @returns An instance of the {@link SystemErrorRetryPolicy}\n */\nfunction systemErrorRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n    return {\n        create: (nextPolicy, options) => {\n            return new SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);\n        },\n    };\n}\n/**\n * A policy that retries when there's a system error, identified by the codes \"ETIMEDOUT\", \"ESOCKETTIMEDOUT\", \"ECONNREFUSED\", \"ECONNRESET\" or \"ENOENT\".\n * @param retryCount - The client retry count.\n * @param retryInterval - The client retry interval, in milliseconds.\n * @param minRetryInterval - The minimum retry interval, in milliseconds.\n * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n */\nclass SystemErrorRetryPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_0__.BaseRequestPolicy {\n    constructor(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n        super(nextPolicy, options);\n        this.retryCount = (0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__.isNumber)(retryCount) ? retryCount : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CLIENT_RETRY_COUNT;\n        this.retryInterval = (0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__.isNumber)(retryInterval) ? retryInterval : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CLIENT_RETRY_INTERVAL;\n        this.minRetryInterval = (0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__.isNumber)(minRetryInterval)\n            ? minRetryInterval\n            : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n        this.maxRetryInterval = (0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__.isNumber)(maxRetryInterval)\n            ? maxRetryInterval\n            : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .catch((error) => retry(this, request, error.response, error));\n    }\n}\nasync function retry(policy, request, operationResponse, err, retryData) {\n    retryData = (0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__.updateRetryData)(policy, retryData, err);\n    function shouldPolicyRetry(_response, error) {\n        if (error &&\n            error.code &&\n            (error.code === \"ETIMEDOUT\" ||\n                error.code === \"ESOCKETTIMEDOUT\" ||\n                error.code === \"ECONNREFUSED\" ||\n                error.code === \"ECONNRESET\" ||\n                error.code === \"ENOENT\")) {\n            return true;\n        }\n        return false;\n    }\n    if ((0,_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__.shouldRetry)(policy.retryCount, shouldPolicyRetry, retryData, operationResponse, err)) {\n        // If previous operation ended with an error and the policy allows a retry, do that\n        try {\n            await (0,_util_delay__WEBPACK_IMPORTED_MODULE_2__.delay)(retryData.retryInterval);\n            return policy._nextPolicy.sendRequest(request.clone());\n        }\n        catch (nestedErr) {\n            return retry(policy, request, operationResponse, nestedErr, retryData);\n        }\n    }\n    else {\n        if (err) {\n            // If the operation failed in the end, return all errors instead of just the last one\n            return Promise.reject(retryData.error);\n        }\n        return operationResponse;\n    }\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"throttlingRetryPolicy\": () => (/* binding */ throttlingRetryPolicy),\n/* harmony export */   \"ThrottlingRetryPolicy\": () => (/* binding */ ThrottlingRetryPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/abort-controller */ \"./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _util_throttlingRetryStrategy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/throttlingRetryStrategy */ \"./node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js\");\n/* harmony import */ var _util_delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/delay */ \"./node_modules/@azure/core-http/dist-esm/src/util/delay.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\nconst StatusCodes = _util_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.HttpConstants.StatusCodes;\n/**\n * Creates a policy that re-sends the request if the response indicates the request failed because of throttling reasons.\n * For example, if the response contains a `Retry-After` header, it will retry sending the request based on the value of that header.\n *\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n * @returns\n */\nfunction throttlingRetryPolicy() {\n    return {\n        create: (nextPolicy, options) => {\n            return new ThrottlingRetryPolicy(nextPolicy, options);\n        },\n    };\n}\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * Creates a policy that re-sends the request if the response indicates the request failed because of throttling reasons.\n * For example, if the response contains a `Retry-After` header, it will retry sending the request based on the value of that header.\n *\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n */\nclass ThrottlingRetryPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_1__.BaseRequestPolicy {\n    constructor(nextPolicy, options, _handleResponse) {\n        super(nextPolicy, options);\n        this.numberOfRetries = 0;\n        this._handleResponse = _handleResponse || this._defaultResponseHandler;\n    }\n    async sendRequest(httpRequest) {\n        const response = await this._nextPolicy.sendRequest(httpRequest.clone());\n        if (response.status !== StatusCodes.TooManyRequests &&\n            response.status !== StatusCodes.ServiceUnavailable) {\n            return response;\n        }\n        else {\n            return this._handleResponse(httpRequest, response);\n        }\n    }\n    async _defaultResponseHandler(httpRequest, httpResponse) {\n        var _a;\n        const retryAfterHeader = httpResponse.headers.get(_util_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.HeaderConstants.RETRY_AFTER);\n        if (retryAfterHeader) {\n            const delayInMs = ThrottlingRetryPolicy.parseRetryAfterHeader(retryAfterHeader);\n            if (delayInMs) {\n                this.numberOfRetries += 1;\n                await (0,_util_delay__WEBPACK_IMPORTED_MODULE_2__.delay)(delayInMs, undefined, {\n                    abortSignal: httpRequest.abortSignal,\n                    abortErrorMsg: StandardAbortMessage,\n                });\n                if ((_a = httpRequest.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    throw new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_3__.AbortError(StandardAbortMessage);\n                }\n                if (this.numberOfRetries < _util_throttlingRetryStrategy__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_CLIENT_MAX_RETRY_COUNT) {\n                    return this.sendRequest(httpRequest);\n                }\n                else {\n                    return this._nextPolicy.sendRequest(httpRequest);\n                }\n            }\n        }\n        return httpResponse;\n    }\n    static parseRetryAfterHeader(headerValue) {\n        const retryAfterInSeconds = Number(headerValue);\n        if (Number.isNaN(retryAfterInSeconds)) {\n            return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n        }\n        else {\n            return retryAfterInSeconds * 1000;\n        }\n    }\n    static parseDateRetryAfterHeader(headerValue) {\n        try {\n            const now = Date.now();\n            const date = Date.parse(headerValue);\n            const diff = date - now;\n            return Number.isNaN(diff) ? undefined : diff;\n        }\n        catch (error) {\n            return undefined;\n        }\n    }\n}\n//# sourceMappingURL=throttlingRetryPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tracingPolicy\": () => (/* binding */ tracingPolicy),\n/* harmony export */   \"TracingPolicy\": () => (/* binding */ TracingPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js\");\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js\");\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../log */ \"./node_modules/@azure/core-http/dist-esm/src/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst createSpan = (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createSpanFunction)({\n    packagePrefix: \"\",\n    namespace: \"\",\n});\n/**\n * Creates a policy that wraps outgoing requests with a tracing span.\n * @param tracingOptions - Tracing options.\n * @returns An instance of the {@link TracingPolicy} class.\n */\nfunction tracingPolicy(tracingOptions = {}) {\n    return {\n        create(nextPolicy, options) {\n            return new TracingPolicy(nextPolicy, options, tracingOptions);\n        },\n    };\n}\n/**\n * A policy that wraps outgoing requests with a tracing span.\n */\nclass TracingPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_1__.BaseRequestPolicy {\n    constructor(nextPolicy, options, tracingOptions) {\n        super(nextPolicy, options);\n        this.userAgent = tracingOptions.userAgent;\n    }\n    async sendRequest(request) {\n        if (!request.tracingContext) {\n            return this._nextPolicy.sendRequest(request);\n        }\n        const span = this.tryCreateSpan(request);\n        if (!span) {\n            return this._nextPolicy.sendRequest(request);\n        }\n        try {\n            const response = await this._nextPolicy.sendRequest(request);\n            this.tryProcessResponse(span, response);\n            return response;\n        }\n        catch (err) {\n            this.tryProcessError(span, err);\n            throw err;\n        }\n    }\n    tryCreateSpan(request) {\n        var _a;\n        try {\n            // Passing spanOptions as part of tracingOptions to maintain compatibility @azure/core-tracing@preview.13 and earlier.\n            // We can pass this as a separate parameter once we upgrade to the latest core-tracing.\n            const { span } = createSpan(`HTTP ${request.method}`, {\n                tracingOptions: {\n                    spanOptions: Object.assign(Object.assign({}, request.spanOptions), { kind: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__.SpanKind.CLIENT }),\n                    tracingContext: request.tracingContext,\n                },\n            });\n            // If the span is not recording, don't do any more work.\n            if (!span.isRecording()) {\n                span.end();\n                return undefined;\n            }\n            const namespaceFromContext = (_a = request.tracingContext) === null || _a === void 0 ? void 0 : _a.getValue(Symbol.for(\"az.namespace\"));\n            if (typeof namespaceFromContext === \"string\") {\n                span.setAttribute(\"az.namespace\", namespaceFromContext);\n            }\n            span.setAttributes({\n                \"http.method\": request.method,\n                \"http.url\": request.url,\n                requestId: request.requestId,\n            });\n            if (this.userAgent) {\n                span.setAttribute(\"http.user_agent\", this.userAgent);\n            }\n            // set headers\n            const spanContext = span.spanContext();\n            const traceParentHeader = (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_3__.getTraceParentHeader)(spanContext);\n            if (traceParentHeader && (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__.isSpanContextValid)(spanContext)) {\n                request.headers.set(\"traceparent\", traceParentHeader);\n                const traceState = spanContext.traceState && spanContext.traceState.serialize();\n                // if tracestate is set, traceparent MUST be set, so only set tracestate after traceparent\n                if (traceState) {\n                    request.headers.set(\"tracestate\", traceState);\n                }\n            }\n            return span;\n        }\n        catch (error) {\n            _log__WEBPACK_IMPORTED_MODULE_4__.logger.warning(`Skipping creating a tracing span due to an error: ${error.message}`);\n            return undefined;\n        }\n    }\n    tryProcessError(span, err) {\n        try {\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__.SpanStatusCode.ERROR,\n                message: err.message,\n            });\n            if (err.statusCode) {\n                span.setAttribute(\"http.status_code\", err.statusCode);\n            }\n            span.end();\n        }\n        catch (error) {\n            _log__WEBPACK_IMPORTED_MODULE_4__.logger.warning(`Skipping tracing span processing due to an error: ${error.message}`);\n        }\n    }\n    tryProcessResponse(span, response) {\n        try {\n            span.setAttribute(\"http.status_code\", response.status);\n            const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n            if (serviceRequestId) {\n                span.setAttribute(\"serviceRequestId\", serviceRequestId);\n            }\n            span.setStatus({\n                code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__.SpanStatusCode.OK,\n            });\n            span.end();\n        }\n        catch (error) {\n            _log__WEBPACK_IMPORTED_MODULE_4__.logger.warning(`Skipping tracing span processing due to an error: ${error.message}`);\n        }\n    }\n}\n//# sourceMappingURL=tracingPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDefaultUserAgentHeaderName\": () => (/* binding */ getDefaultUserAgentHeaderName),\n/* harmony export */   \"getDefaultUserAgentValue\": () => (/* binding */ getDefaultUserAgentValue),\n/* harmony export */   \"userAgentPolicy\": () => (/* binding */ userAgentPolicy),\n/* harmony export */   \"UserAgentPolicy\": () => (/* binding */ UserAgentPolicy)\n/* harmony export */ });\n/* harmony import */ var _requestPolicy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./msRestUserAgentPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js\");\n/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\nfunction getRuntimeInfo() {\n    const msRestRuntime = {\n        key: \"core-http\",\n        value: _util_constants__WEBPACK_IMPORTED_MODULE_0__.Constants.coreHttpVersion,\n    };\n    return [msRestRuntime];\n}\nfunction getUserAgentString(telemetryInfo, keySeparator = \" \", valueSeparator = \"/\") {\n    return telemetryInfo\n        .map((info) => {\n        const value = info.value ? `${valueSeparator}${info.value}` : \"\";\n        return `${info.key}${value}`;\n    })\n        .join(keySeparator);\n}\nconst getDefaultUserAgentHeaderName = _msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_1__.getDefaultUserAgentKey;\n/**\n * The default approach to generate user agents.\n * Uses static information from this package, plus system information available from the runtime.\n */\nfunction getDefaultUserAgentValue() {\n    const runtimeInfo = getRuntimeInfo();\n    const platformSpecificData = (0,_msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_1__.getPlatformSpecificData)();\n    const userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n    return userAgent;\n}\n/**\n * Returns a policy that adds the user agent header to outgoing requests based on the given {@link TelemetryInfo}.\n * @param userAgentData - Telemetry information.\n * @returns A new {@link UserAgentPolicy}.\n */\nfunction userAgentPolicy(userAgentData) {\n    const key = !userAgentData || userAgentData.key === undefined || userAgentData.key === null\n        ? (0,_msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_1__.getDefaultUserAgentKey)()\n        : userAgentData.key;\n    const value = !userAgentData || userAgentData.value === undefined || userAgentData.value === null\n        ? getDefaultUserAgentValue()\n        : userAgentData.value;\n    return {\n        create: (nextPolicy, options) => {\n            return new UserAgentPolicy(nextPolicy, options, key, value);\n        },\n    };\n}\n/**\n * A policy that adds the user agent header to outgoing requests based on the given {@link TelemetryInfo}.\n */\nclass UserAgentPolicy extends _requestPolicy__WEBPACK_IMPORTED_MODULE_2__.BaseRequestPolicy {\n    constructor(_nextPolicy, _options, headerKey, headerValue) {\n        super(_nextPolicy, _options);\n        this._nextPolicy = _nextPolicy;\n        this._options = _options;\n        this.headerKey = headerKey;\n        this.headerValue = headerValue;\n    }\n    sendRequest(request) {\n        this.addUserAgentHeader(request);\n        return this._nextPolicy.sendRequest(request);\n    }\n    /**\n     * Adds the user agent header to the outgoing request.\n     */\n    addUserAgentHeader(request) {\n        if (!request.headers) {\n            request.headers = new _httpHeaders__WEBPACK_IMPORTED_MODULE_3__.HttpHeaders();\n        }\n        if (!request.headers.get(this.headerKey) && this.headerValue) {\n            request.headers.set(this.headerKey, this.headerValue);\n        }\n    }\n}\n//# sourceMappingURL=userAgentPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QueryCollectionFormat\": () => (/* binding */ QueryCollectionFormat)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nvar QueryCollectionFormat;\n(function (QueryCollectionFormat) {\n    /**\n     * CSV: Each pair of segments joined by a single comma.\n     */\n    QueryCollectionFormat[\"Csv\"] = \",\";\n    /**\n     * SSV: Each pair of segments joined by a single space character.\n     */\n    QueryCollectionFormat[\"Ssv\"] = \" \";\n    /**\n     * TSV: Each pair of segments joined by a single tab character.\n     */\n    QueryCollectionFormat[\"Tsv\"] = \"\\t\";\n    /**\n     * Pipes: Each pair of segments joined by a single pipe character.\n     */\n    QueryCollectionFormat[\"Pipes\"] = \"|\";\n    /**\n     * Denotes this is an array of values that should be passed to the server in multiple key/value pairs, e.g. `?queryParam=value1&queryParam=value2`\n     */\n    QueryCollectionFormat[\"Multi\"] = \"Multi\";\n})(QueryCollectionFormat || (QueryCollectionFormat = {}));\n//# sourceMappingURL=queryCollectionFormat.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/restError.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/restError.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RestError\": () => (/* binding */ RestError)\n/* harmony export */ });\n/* harmony import */ var _util_sanitizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/sanitizer */ \"./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js\");\n/* harmony import */ var _util_inspect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/inspect */ \"./node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst errorSanitizer = new _util_sanitizer__WEBPACK_IMPORTED_MODULE_0__.Sanitizer();\n/**\n * An error resulting from an HTTP request to a service endpoint.\n */\nclass RestError extends Error {\n    constructor(message, code, statusCode, request, response) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = code;\n        this.statusCode = statusCode;\n        this.request = request;\n        this.response = response;\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n    /**\n     * Logging method for util.inspect in Node\n     */\n    [_util_inspect__WEBPACK_IMPORTED_MODULE_1__.custom]() {\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n    }\n}\n/**\n * A constant string to identify errors that may arise when making an HTTP request that indicates an issue with the transport layer (e.g. the hostname of the URL cannot be resolved via DNS.)\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * A constant string to identify errors that may arise from parsing an incoming HTTP response. Usually indicates a malformed HTTP body, such as an encoded JSON payload that is incomplete.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n//# sourceMappingURL=restError.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/restError.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/serializer.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/serializer.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Serializer\": () => (/* binding */ Serializer),\n/* harmony export */   \"serializeObject\": () => (/* binding */ serializeObject),\n/* harmony export */   \"MapperType\": () => (/* binding */ MapperType)\n/* harmony export */ });\n/* harmony import */ var _util_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/base64 */ \"./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js\");\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n/* harmony import */ var _util_serializer_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\n\n\n\n// This file contains utility code to serialize and deserialize network operations according to `OperationSpec` objects generated by AutoRest.TypeScript from OpenAPI specifications.\n/**\n * Used to map raw response objects to final shapes.\n * Helps packing and unpacking Dates and other encoded types that are not intrinsic to JSON.\n * Also allows pulling values from headers, as well as inserting default values and constants.\n */\nclass Serializer {\n    constructor(\n    /**\n     * The provided model mapper.\n     */\n    modelMappers = {}, \n    /**\n     * Whether the contents are XML or not.\n     */\n    isXML) {\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    /**\n     * Validates constraints, if any. This function will throw if the provided value does not respect those constraints.\n     * @param mapper - The definition of data models.\n     * @param value - The value.\n     * @param objectName - Name of the object. Used in the error messages.\n     */\n    validateConstraints(mapper, value, objectName) {\n        const failValidation = (constraintName, constraintValue) => {\n            throw new Error(`\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`);\n        };\n        if (mapper.constraints && value != undefined) {\n            const valueAsNumber = value;\n            const { ExclusiveMaximum, ExclusiveMinimum, InclusiveMaximum, InclusiveMinimum, MaxItems, MaxLength, MinItems, MinLength, MultipleOf, Pattern, UniqueItems, } = mapper.constraints;\n            if (ExclusiveMaximum != undefined && valueAsNumber >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum != undefined && valueAsNumber <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum != undefined && valueAsNumber > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum != undefined && valueAsNumber < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            const valueAsArray = value;\n            if (MaxItems != undefined && valueAsArray.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength != undefined && valueAsArray.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems != undefined && valueAsArray.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength != undefined && valueAsArray.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf != undefined && valueAsNumber % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern) {\n                const pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                if (typeof value !== \"string\" || value.match(pattern) === null) {\n                    failValidation(\"Pattern\", Pattern);\n                }\n            }\n            if (UniqueItems &&\n                valueAsArray.some((item, i, ar) => ar.indexOf(item) !== i)) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    }\n    /**\n     * Serialize the given object based on its metadata defined in the mapper.\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object.\n     * @param object - A valid Javascript object to be serialized.\n     * @param objectName - Name of the serialized object.\n     * @param options - additional options to deserialization.\n     * @returns A valid serialized Javascript object.\n     */\n    serialize(mapper, object, objectName, options = {}) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : \"\",\n            includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,\n            xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : _util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n        };\n        let payload = {};\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/i) !== null) {\n            payload = [];\n        }\n        if (mapper.isConstant) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        const { required, nullable } = mapper;\n        if (required && nullable && object === undefined) {\n            throw new Error(`${objectName} cannot be undefined.`);\n        }\n        if (required && !nullable && object == undefined) {\n            throw new Error(`${objectName} cannot be null or undefined.`);\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(`${objectName} cannot be null.`);\n        }\n        if (object == undefined) {\n            payload = object;\n        }\n        else {\n            // Validate Constraints if any\n            this.validateConstraints(mapper, object, objectName);\n            if (mapperType.match(/^any$/i) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/i) !== null) {\n                const enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Composite$/i) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n        }\n        return payload;\n    }\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper.\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object.\n     * @param responseBody - A valid Javascript entity to be deserialized.\n     * @param objectName - Name of the deserialized object.\n     * @param options - Controls behavior of XML parser and builder.\n     * @returns A valid deserialized Javascript object.\n     */\n    deserialize(mapper, responseBody, objectName, options = {}) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : \"\",\n            includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,\n            xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : _util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n        };\n        if (responseBody == undefined) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n            if (mapper.defaultValue !== undefined) {\n                responseBody = mapper.defaultValue;\n            }\n            return responseBody;\n        }\n        let payload;\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/i) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName, updatedOptions);\n        }\n        else {\n            if (this.isXML) {\n                const xmlCharKey = updatedOptions.xmlCharKey;\n                const castResponseBody = responseBody;\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n                 * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n                 */\n                if (castResponseBody[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] != undefined &&\n                    castResponseBody[xmlCharKey] != undefined) {\n                    responseBody = castResponseBody[xmlCharKey];\n                }\n            }\n            if (mapperType.match(/^Number$/i) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/i) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/i) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = _util_base64__WEBPACK_IMPORTED_MODULE_1__.decodeString(responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    }\n}\nfunction trimEnd(str, ch) {\n    let len = str.length;\n    while (len - 1 >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n    }\n    // Uint8Array to Base64.\n    const str = _util_base64__WEBPACK_IMPORTED_MODULE_1__.encodeByteArray(buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Base64 to Uint8Array.\n    return _util_base64__WEBPACK_IMPORTED_MODULE_1__.decodeString(str);\n}\nfunction splitSerializeName(prop) {\n    const classes = [];\n    let partialclass = \"\";\n    if (prop) {\n        const subwords = prop.split(\".\");\n        for (const item of subwords) {\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/i) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(`${objectName} with value ${value} must be of type number.`);\n            }\n        }\n        else if (typeName.match(/^String$/i) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n            }\n        }\n        else if (typeName.match(/^Uuid$/i) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && _util_utils__WEBPACK_IMPORTED_MODULE_2__.isValidUuid(value))) {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string and a valid uuid.`);\n            }\n        }\n        else if (typeName.match(/^Boolean$/i) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n            }\n        }\n        else if (typeName.match(/^Stream$/i) !== null) {\n            const objectType = typeof value;\n            if (objectType !== \"string\" &&\n                objectType !== \"function\" &&\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob)) {\n                throw new Error(`${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(`Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`);\n    }\n    const isPresent = allowedValues.some((item) => {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(`${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(allowedValues)}.`);\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    let returnValue = \"\";\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        returnValue = _util_base64__WEBPACK_IMPORTED_MODULE_1__.encodeByteArray(value);\n    }\n    return returnValue;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    let returnValue = \"\";\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        returnValue = bufferToBase64Url(value) || \"\";\n    }\n    return returnValue;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value != undefined) {\n        if (typeName.match(/^Date$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value =\n                value instanceof Date\n                    ? value.toISOString().substring(0, 10)\n                    : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n            }\n            value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n                    `for it to be serialized in UnixTime/Epoch format.`);\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/i) !== null) {\n            if (!_util_utils__WEBPACK_IMPORTED_MODULE_2__.isDuration(value)) {\n                throw new Error(`${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName, isXml, options) {\n    if (!Array.isArray(object)) {\n        throw new Error(`${objectName} must be of type Array.`);\n    }\n    const elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempArray = [];\n    for (let i = 0; i < object.length; i++) {\n        const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n        if (isXml && elementType.xmlNamespace) {\n            const xmlnsKey = elementType.xmlNamespacePrefix\n                ? `xmlns:${elementType.xmlNamespacePrefix}`\n                : \"xmlns\";\n            if (elementType.type.name === \"Composite\") {\n                tempArray[i] = Object.assign({}, serializedValue);\n                tempArray[i][_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n            else {\n                tempArray[i] = {};\n                tempArray[i][options.xmlCharKey] = serializedValue;\n                tempArray[i][_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n        }\n        else {\n            tempArray[i] = serializedValue;\n        }\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName, isXml, options) {\n    if (typeof object !== \"object\") {\n        throw new Error(`${objectName} must be of type object.`);\n    }\n    const valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempDictionary = {};\n    for (const key of Object.keys(object)) {\n        const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n        // If the element needs an XML namespace we need to add it within the $ property\n        tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n    }\n    // Add the namespace to the root element if needed\n    if (isXml && mapper.xmlNamespace) {\n        const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n        const result = tempDictionary;\n        result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n        return result;\n    }\n    return tempDictionary;\n}\n/**\n * Resolves the additionalProperties property from a referenced mapper.\n * @param serializer - The serializer containing the entire set of mappers.\n * @param mapper - The composite mapper to resolve.\n * @param objectName - Name of the object being serialized.\n */\nfunction resolveAdditionalProperties(serializer, mapper, objectName) {\n    const additionalProperties = mapper.type.additionalProperties;\n    if (!additionalProperties && mapper.type.className) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        return modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.additionalProperties;\n    }\n    return additionalProperties;\n}\n/**\n * Finds the mapper referenced by `className`.\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n * @param objectName - Name of the object being serialized\n */\nfunction resolveReferencedMapper(serializer, mapper, objectName) {\n    const className = mapper.type.className;\n    if (!className) {\n        throw new Error(`Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(mapper, undefined, 2)}\".`);\n    }\n    return serializer.modelMappers[className];\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    let modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        if (!modelMapper) {\n            throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n        }\n        modelProps = modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(`modelProperties cannot be null or undefined in the ` +\n                `mapper \"${JSON.stringify(modelMapper)}\" of type \"${mapper.type.className}\" for object \"${objectName}\".`);\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName, isXml, options) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object != undefined) {\n        const payload = {};\n        const modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (const key of Object.keys(modelProps)) {\n            const propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            let propName;\n            let parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                const paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (const pathName of paths) {\n                    const childObject = parentObject[pathName];\n                    if (childObject == undefined &&\n                        (object[key] != undefined || propertyMapper.defaultValue !== undefined)) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject != undefined) {\n                if (isXml && mapper.xmlNamespace) {\n                    const xmlnsKey = mapper.xmlNamespacePrefix\n                        ? `xmlns:${mapper.xmlNamespacePrefix}`\n                        : \"xmlns\";\n                    parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = Object.assign(Object.assign({}, parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY]), { [xmlnsKey]: mapper.xmlNamespace });\n                }\n                const propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                let toSerialize = object[key];\n                const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator &&\n                    polymorphicDiscriminator.clientName === key &&\n                    toSerialize == undefined) {\n                    toSerialize = mapper.serializedName;\n                }\n                const serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName, options);\n                if (serializedValue !== undefined && propName != undefined) {\n                    const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n                    if (isXml && propertyMapper.xmlIsAttribute) {\n                        // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] || {};\n                        parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY][propName] = serializedValue;\n                    }\n                    else if (isXml && propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = { [propertyMapper.xmlElementName]: value };\n                    }\n                    else {\n                        parentObject[propName] = value;\n                    }\n                }\n            }\n        }\n        const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n        if (additionalPropertiesMapper) {\n            const propNames = Object.keys(modelProps);\n            for (const clientPropName in object) {\n                const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]', options);\n                }\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction getXmlObjectValue(propertyMapper, serializedValue, isXml, options) {\n    if (!isXml || !propertyMapper.xmlNamespace) {\n        return serializedValue;\n    }\n    const xmlnsKey = propertyMapper.xmlNamespacePrefix\n        ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n        : \"xmlns\";\n    const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n    if ([\"Composite\"].includes(propertyMapper.type.name)) {\n        if (serializedValue[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY]) {\n            return serializedValue;\n        }\n        else {\n            const result = Object.assign({}, serializedValue);\n            result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = xmlNamespace;\n            return result;\n        }\n    }\n    const result = {};\n    result[options.xmlCharKey] = serializedValue;\n    result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = xmlNamespace;\n    return result;\n}\nfunction isSpecialXmlProperty(propertyName, options) {\n    return [_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY, options.xmlCharKey].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName, options) {\n    var _a;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    let instance = {};\n    const handledPropertyNames = [];\n    for (const key of Object.keys(modelProps)) {\n        const propertyMapper = modelProps[key];\n        const paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        const { serializedName, xmlName, xmlElementName } = propertyMapper;\n        let propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        const headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            const dictionary = {};\n            for (const headerKey of Object.keys(responseBody)) {\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName, options);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY]) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody[_util_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY][xmlName], propertyObjectName, options);\n            }\n            else {\n                const propertyName = xmlElementName || xmlName || serializedName;\n                if (propertyMapper.xmlIsWrapped) {\n                    /* a list of <xmlElementName> wrapped by <xmlName>\n                      For the xml example below\n                        <Cors>\n                          <CorsRule>...</CorsRule>\n                          <CorsRule>...</CorsRule>\n                        </Cors>\n                      the responseBody has\n                        {\n                          Cors: {\n                            CorsRule: [{...}, {...}]\n                          }\n                        }\n                      xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n                    */\n                    const wrapped = responseBody[xmlName];\n                    const elementList = (_a = wrapped === null || wrapped === void 0 ? void 0 : wrapped[xmlElementName]) !== null && _a !== void 0 ? _a : [];\n                    instance[key] = serializer.deserialize(propertyMapper, elementList, propertyObjectName, options);\n                }\n                else {\n                    const property = responseBody[propertyName];\n                    instance[key] = serializer.deserialize(propertyMapper, property, propertyObjectName, options);\n                }\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            let propertyInstance;\n            let res = responseBody;\n            // traversing the object step by step.\n            for (const item of paths) {\n                if (!res)\n                    break;\n                res = res[item];\n            }\n            propertyInstance = res;\n            const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            // checking that the model property name (key)(ex: \"fishtype\") and the\n            // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n            // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n            // is a better approach. The generator is not consistent with escaping '\\.' in the\n            // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n            // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n            // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n            // the transformation of model property name (ex: \"fishtype\") is done consistently.\n            // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n            if (polymorphicDiscriminator &&\n                key === polymorphicDiscriminator.clientName &&\n                propertyInstance == undefined) {\n                propertyInstance = mapper.serializedName;\n            }\n            let serializedValue;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                const arrayInstance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                // Copy over any properties that have already been added into the instance, where they do\n                // not exist on the newly de-serialized array\n                for (const [k, v] of Object.entries(instance)) {\n                    if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n                        arrayInstance[k] = v;\n                    }\n                }\n                instance = arrayInstance;\n            }\n            else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    const additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        const isAdditionalProperty = (responsePropName) => {\n            for (const clientPropName in modelProps) {\n                const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (const responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]', options);\n            }\n        }\n    }\n    else if (responseBody) {\n        for (const key of Object.keys(responseBody)) {\n            if (instance[key] === undefined &&\n                !handledPropertyNames.includes(key) &&\n                !isSpecialXmlProperty(key, options)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName, options) {\n    const value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        const tempDictionary = {};\n        for (const key of Object.keys(responseBody)) {\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName, options) {\n    const element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        const tempArray = [];\n        for (let i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], `${objectName}[${i}]`, options);\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        const discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName != undefined) {\n            const discriminatorValue = object[discriminatorName];\n            if (discriminatorValue != undefined) {\n                const typeName = mapper.type.uberParent || mapper.type.className;\n                const indexDiscriminator = discriminatorValue === typeName\n                    ? discriminatorValue\n                    : typeName + \".\" + discriminatorValue;\n                const polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return (mapper.type.polymorphicDiscriminator ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.className));\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName &&\n        serializer.modelMappers[typeName] &&\n        serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n/**\n * Utility function that serializes an object that might contain binary information into a plain object, array or a string.\n */\nfunction serializeObject(toSerialize) {\n    const castToSerialize = toSerialize;\n    if (toSerialize == undefined)\n        return undefined;\n    if (toSerialize instanceof Uint8Array) {\n        toSerialize = _util_base64__WEBPACK_IMPORTED_MODULE_1__.encodeByteArray(toSerialize);\n        return toSerialize;\n    }\n    else if (toSerialize instanceof Date) {\n        return toSerialize.toISOString();\n    }\n    else if (Array.isArray(toSerialize)) {\n        const array = [];\n        for (let i = 0; i < toSerialize.length; i++) {\n            array.push(serializeObject(toSerialize[i]));\n        }\n        return array;\n    }\n    else if (typeof toSerialize === \"object\") {\n        const dictionary = {};\n        for (const property in toSerialize) {\n            dictionary[property] = serializeObject(castToSerialize[property]);\n        }\n        return dictionary;\n    }\n    return toSerialize;\n}\n/**\n * Utility function to create a K:V from a list of strings\n */\nfunction strEnum(o) {\n    const result = {};\n    for (const key of o) {\n        result[key] = key;\n    }\n    return result;\n}\n/**\n * String enum containing the string types of property mappers.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst MapperType = strEnum([\n    \"Base64Url\",\n    \"Boolean\",\n    \"ByteArray\",\n    \"Composite\",\n    \"Date\",\n    \"DateTime\",\n    \"DateTimeRfc1123\",\n    \"Dictionary\",\n    \"Enum\",\n    \"Number\",\n    \"Object\",\n    \"Sequence\",\n    \"String\",\n    \"Stream\",\n    \"TimeSpan\",\n    \"UnixTime\",\n]);\n//# sourceMappingURL=serializer.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/serializer.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/serviceClient.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/serviceClient.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ServiceClient\": () => (/* binding */ ServiceClient),\n/* harmony export */   \"serializeRequestBody\": () => (/* binding */ serializeRequestBody),\n/* harmony export */   \"createPipelineFromOptions\": () => (/* binding */ createPipelineFromOptions),\n/* harmony export */   \"getPropertyParent\": () => (/* binding */ getPropertyParent),\n/* harmony export */   \"getOperationArgumentValueFromParameterPath\": () => (/* binding */ getOperationArgumentValueFromParameterPath),\n/* harmony export */   \"flattenResponse\": () => (/* binding */ flattenResponse)\n/* harmony export */ });\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-http/dist-esm/src/serializer.js\");\n/* harmony import */ var _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./policies/deserializationPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js\");\n/* harmony import */ var _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./policies/keepAlivePolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js\");\n/* harmony import */ var _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./policies/redirectPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./policies/exponentialRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js\");\n/* harmony import */ var _policies_logPolicy__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./policies/logPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js\");\n/* harmony import */ var _operationParameter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./operationParameter */ \"./node_modules/@azure/core-http/dist-esm/src/operationParameter.js\");\n/* harmony import */ var _operationSpec__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./operationSpec */ \"./node_modules/@azure/core-http/dist-esm/src/operationSpec.js\");\n/* harmony import */ var _webResource__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./webResource */ \"./node_modules/@azure/core-http/dist-esm/src/webResource.js\");\n/* harmony import */ var _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./policies/requestPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js\");\n/* harmony import */ var _util_serializer_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./util/serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n/* harmony import */ var _azure_core_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/core-auth */ \"./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js\");\n/* harmony import */ var _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./policies/userAgentPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js\");\n/* harmony import */ var _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./queryCollectionFormat */ \"./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./url */ \"./node_modules/@azure/core-http/dist-esm/src/util/url.browser.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./url */ \"./node_modules/@azure/core-http/dist-esm/src/url.js\");\n/* harmony import */ var _policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./policies/bearerTokenAuthenticationPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js\");\n/* harmony import */ var _policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./policies/disableResponseDecompressionPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js\");\n/* harmony import */ var _policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./policies/generateClientRequestIdPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js\");\n/* harmony import */ var _httpClientCache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httpClientCache */ \"./node_modules/@azure/core-http/dist-esm/src/httpClientCache.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./log */ \"./node_modules/@azure/core-http/dist-esm/src/log.js\");\n/* harmony import */ var _policies_ndJsonPolicy__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./policies/ndJsonPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js\");\n/* harmony import */ var _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./policies/proxyPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js\");\n/* harmony import */ var _policies_rpRegistrationPolicy__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./policies/rpRegistrationPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js\");\n/* harmony import */ var _policies_signingPolicy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./policies/signingPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js\");\n/* harmony import */ var _util_xml__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./util/xml */ \"./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js\");\n/* harmony import */ var _policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./policies/systemErrorRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js\");\n/* harmony import */ var _policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./policies/throttlingRetryPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./policies/tracingPolicy */ \"./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * ServiceClient sends service requests and receives responses.\n */\nclass ServiceClient {\n    /**\n     * The ServiceClient constructor\n     * @param credentials - The credentials used for authentication with the service.\n     * @param options - The service client options that govern the behavior of the client.\n     */\n    constructor(credentials, \n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options) {\n        if (!options) {\n            options = {};\n        }\n        this._withCredentials = options.withCredentials || false;\n        this._httpClient = options.httpClient || (0,_httpClientCache__WEBPACK_IMPORTED_MODULE_0__.getCachedDefaultHttpClient)();\n        this._requestPolicyOptions = new _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_1__.RequestPolicyOptions(options.httpPipelineLogger);\n        let requestPolicyFactories;\n        if (Array.isArray(options.requestPolicyFactories)) {\n            _log__WEBPACK_IMPORTED_MODULE_2__.logger.info(\"ServiceClient: using custom request policies\");\n            requestPolicyFactories = options.requestPolicyFactories;\n        }\n        else {\n            let authPolicyFactory = undefined;\n            if ((0,_azure_core_auth__WEBPACK_IMPORTED_MODULE_3__.isTokenCredential)(credentials)) {\n                _log__WEBPACK_IMPORTED_MODULE_2__.logger.info(\"ServiceClient: creating bearer token authentication policy from provided credentials\");\n                // Create a wrapped RequestPolicyFactory here so that we can provide the\n                // correct scope to the BearerTokenAuthenticationPolicy at the first time\n                // one is requested.  This is needed because generated ServiceClient\n                // implementations do not set baseUri until after ServiceClient's constructor\n                // is finished, leaving baseUri empty at the time when it is needed to\n                // build the correct scope name.\n                const wrappedPolicyFactory = () => {\n                    let bearerTokenPolicyFactory = undefined;\n                    // eslint-disable-next-line @typescript-eslint/no-this-alias\n                    const serviceClient = this;\n                    const serviceClientOptions = options;\n                    return {\n                        create(nextPolicy, createOptions) {\n                            const credentialScopes = getCredentialScopes(serviceClientOptions, serviceClient.baseUri);\n                            if (!credentialScopes) {\n                                throw new Error(`When using credential, the ServiceClient must contain a baseUri or a credentialScopes in ServiceClientOptions. Unable to create a bearerTokenAuthenticationPolicy`);\n                            }\n                            if (bearerTokenPolicyFactory === undefined || bearerTokenPolicyFactory === null) {\n                                bearerTokenPolicyFactory = (0,_policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_4__.bearerTokenAuthenticationPolicy)(credentials, credentialScopes);\n                            }\n                            return bearerTokenPolicyFactory.create(nextPolicy, createOptions);\n                        },\n                    };\n                };\n                authPolicyFactory = wrappedPolicyFactory();\n            }\n            else if (credentials && typeof credentials.signRequest === \"function\") {\n                _log__WEBPACK_IMPORTED_MODULE_2__.logger.info(\"ServiceClient: creating signing policy from provided credentials\");\n                authPolicyFactory = (0,_policies_signingPolicy__WEBPACK_IMPORTED_MODULE_5__.signingPolicy)(credentials);\n            }\n            else if (credentials !== undefined && credentials !== null) {\n                throw new Error(\"The credentials argument must implement the TokenCredential interface\");\n            }\n            _log__WEBPACK_IMPORTED_MODULE_2__.logger.info(\"ServiceClient: using default request policies\");\n            requestPolicyFactories = createDefaultRequestPolicyFactories(authPolicyFactory, options);\n            if (options.requestPolicyFactories) {\n                // options.requestPolicyFactories can also be a function that manipulates\n                // the default requestPolicyFactories array\n                const newRequestPolicyFactories = options.requestPolicyFactories(requestPolicyFactories);\n                if (newRequestPolicyFactories) {\n                    requestPolicyFactories = newRequestPolicyFactories;\n                }\n            }\n        }\n        this._requestPolicyFactories = requestPolicyFactories;\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    sendRequest(options) {\n        if (options === null || options === undefined || typeof options !== \"object\") {\n            throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n        }\n        let httpRequest;\n        try {\n            if ((0,_webResource__WEBPACK_IMPORTED_MODULE_6__.isWebResourceLike)(options)) {\n                options.validateRequestProperties();\n                httpRequest = options;\n            }\n            else {\n                httpRequest = new _webResource__WEBPACK_IMPORTED_MODULE_6__.WebResource();\n                httpRequest = httpRequest.prepare(options);\n            }\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n        let httpPipeline = this._httpClient;\n        if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n            for (let i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n                httpPipeline = this._requestPolicyFactories[i].create(httpPipeline, this._requestPolicyOptions);\n            }\n        }\n        return httpPipeline.sendRequest(httpRequest);\n    }\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n     * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n     * @param callback - The callback to call when the response is received.\n     */\n    async sendOperationRequest(operationArguments, operationSpec, callback) {\n        var _a;\n        if (typeof operationArguments.options === \"function\") {\n            callback = operationArguments.options;\n            operationArguments.options = undefined;\n        }\n        const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n        const httpRequest = new _webResource__WEBPACK_IMPORTED_MODULE_6__.WebResource();\n        let result;\n        try {\n            const baseUri = operationSpec.baseUrl || this.baseUri;\n            if (!baseUri) {\n                throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\");\n            }\n            httpRequest.method = operationSpec.httpMethod;\n            httpRequest.operationSpec = operationSpec;\n            const requestUrl = _url__WEBPACK_IMPORTED_MODULE_7__.URLBuilder.parse(baseUri);\n            if (operationSpec.path) {\n                requestUrl.appendPath(operationSpec.path);\n            }\n            if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n                for (const urlParameter of operationSpec.urlParameters) {\n                    let urlParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, urlParameter, operationSpec.serializer);\n                    urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameter)(urlParameter), serializerOptions);\n                    if (!urlParameter.skipEncoding) {\n                        urlParameterValue = encodeURIComponent(urlParameterValue);\n                    }\n                    requestUrl.replaceAll(`{${urlParameter.mapper.serializedName || (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameter)(urlParameter)}}`, urlParameterValue);\n                }\n            }\n            if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n                for (const queryParameter of operationSpec.queryParameters) {\n                    let queryParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, queryParameter, operationSpec.serializer);\n                    if (queryParameterValue !== undefined && queryParameterValue !== null) {\n                        queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameter)(queryParameter), serializerOptions);\n                        if (queryParameter.collectionFormat !== undefined &&\n                            queryParameter.collectionFormat !== null) {\n                            if (queryParameter.collectionFormat === _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_9__.QueryCollectionFormat.Multi) {\n                                if (queryParameterValue.length === 0) {\n                                    // The collection is empty, no need to try serializing the current queryParam\n                                    continue;\n                                }\n                                else {\n                                    for (const index in queryParameterValue) {\n                                        const item = queryParameterValue[index];\n                                        queryParameterValue[index] =\n                                            item === undefined || item === null ? \"\" : item.toString();\n                                    }\n                                }\n                            }\n                            else if (queryParameter.collectionFormat === _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_9__.QueryCollectionFormat.Ssv ||\n                                queryParameter.collectionFormat === _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_9__.QueryCollectionFormat.Tsv) {\n                                queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                            }\n                        }\n                        if (!queryParameter.skipEncoding) {\n                            if (Array.isArray(queryParameterValue)) {\n                                for (const index in queryParameterValue) {\n                                    if (queryParameterValue[index] !== undefined &&\n                                        queryParameterValue[index] !== null) {\n                                        queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                                    }\n                                }\n                            }\n                            else {\n                                queryParameterValue = encodeURIComponent(queryParameterValue);\n                            }\n                        }\n                        if (queryParameter.collectionFormat !== undefined &&\n                            queryParameter.collectionFormat !== null &&\n                            queryParameter.collectionFormat !== _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_9__.QueryCollectionFormat.Multi &&\n                            queryParameter.collectionFormat !== _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_9__.QueryCollectionFormat.Ssv &&\n                            queryParameter.collectionFormat !== _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_9__.QueryCollectionFormat.Tsv) {\n                            queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                        }\n                        requestUrl.setQueryParameter(queryParameter.mapper.serializedName || (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameter)(queryParameter), queryParameterValue);\n                    }\n                }\n            }\n            httpRequest.url = requestUrl.toString();\n            const contentType = operationSpec.contentType || this.requestContentType;\n            if (contentType && operationSpec.requestBody) {\n                httpRequest.headers.set(\"Content-Type\", contentType);\n            }\n            if (operationSpec.headerParameters) {\n                for (const headerParameter of operationSpec.headerParameters) {\n                    let headerValue = getOperationArgumentValueFromParameter(this, operationArguments, headerParameter, operationSpec.serializer);\n                    if (headerValue !== undefined && headerValue !== null) {\n                        headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameter)(headerParameter), serializerOptions);\n                        const headerCollectionPrefix = headerParameter.mapper\n                            .headerCollectionPrefix;\n                        if (headerCollectionPrefix) {\n                            for (const key of Object.keys(headerValue)) {\n                                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                            }\n                        }\n                        else {\n                            httpRequest.headers.set(headerParameter.mapper.serializedName ||\n                                (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameter)(headerParameter), headerValue);\n                        }\n                    }\n                }\n            }\n            const options = operationArguments.options;\n            if (options) {\n                if (options.customHeaders) {\n                    for (const customHeaderName in options.customHeaders) {\n                        httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n                    }\n                }\n                if (options.abortSignal) {\n                    httpRequest.abortSignal = options.abortSignal;\n                }\n                if (options.timeout) {\n                    httpRequest.timeout = options.timeout;\n                }\n                if (options.onUploadProgress) {\n                    httpRequest.onUploadProgress = options.onUploadProgress;\n                }\n                if (options.onDownloadProgress) {\n                    httpRequest.onDownloadProgress = options.onDownloadProgress;\n                }\n                if (options.spanOptions) {\n                    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n                    httpRequest.spanOptions = options.spanOptions;\n                }\n                if (options.tracingContext) {\n                    httpRequest.tracingContext = options.tracingContext;\n                }\n                if (options.shouldDeserialize !== undefined && options.shouldDeserialize !== null) {\n                    httpRequest.shouldDeserialize = options.shouldDeserialize;\n                }\n            }\n            httpRequest.withCredentials = this._withCredentials;\n            serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n            if (httpRequest.streamResponseStatusCodes === undefined) {\n                httpRequest.streamResponseStatusCodes = (0,_operationSpec__WEBPACK_IMPORTED_MODULE_10__.getStreamResponseStatusCodes)(operationSpec);\n            }\n            let rawResponse;\n            let sendRequestError;\n            try {\n                rawResponse = await this.sendRequest(httpRequest);\n            }\n            catch (error) {\n                sendRequestError = error;\n            }\n            if (sendRequestError) {\n                if (sendRequestError.response) {\n                    sendRequestError.details = flattenResponse(sendRequestError.response, operationSpec.responses[sendRequestError.statusCode] ||\n                        operationSpec.responses[\"default\"]);\n                }\n                result = Promise.reject(sendRequestError);\n            }\n            else {\n                result = Promise.resolve(flattenResponse(rawResponse, operationSpec.responses[rawResponse.status]));\n            }\n        }\n        catch (error) {\n            result = Promise.reject(error);\n        }\n        const cb = callback;\n        if (cb) {\n            result\n                .then((res) => cb(null, res._response.parsedBody, res._response.request, res._response))\n                .catch((err) => cb(err));\n        }\n        return result;\n    }\n}\nfunction serializeRequestBody(serviceClient, httpRequest, operationArguments, operationSpec) {\n    var _a, _b, _c, _d, _e, _f;\n    const serializerOptions = (_b = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions) !== null && _b !== void 0 ? _b : {};\n    const updatedOptions = {\n        rootName: (_c = serializerOptions.rootName) !== null && _c !== void 0 ? _c : \"\",\n        includeRoot: (_d = serializerOptions.includeRoot) !== null && _d !== void 0 ? _d : false,\n        xmlCharKey: (_e = serializerOptions.xmlCharKey) !== null && _e !== void 0 ? _e : _util_serializer_common__WEBPACK_IMPORTED_MODULE_11__.XML_CHARKEY,\n    };\n    const xmlCharKey = serializerOptions.xmlCharKey;\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        httpRequest.body = getOperationArgumentValueFromParameter(serviceClient, operationArguments, operationSpec.requestBody, operationSpec.serializer);\n        const bodyMapper = operationSpec.requestBody.mapper;\n        const { required, xmlName, xmlElementName, serializedName, xmlNamespace, xmlNamespacePrefix } = bodyMapper;\n        const typeName = bodyMapper.type.name;\n        try {\n            if ((httpRequest.body !== undefined && httpRequest.body !== null) || required) {\n                const requestBodyParameterPathString = (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameter)(operationSpec.requestBody);\n                httpRequest.body = operationSpec.serializer.serialize(bodyMapper, httpRequest.body, requestBodyParameterPathString, updatedOptions);\n                const isStream = typeName === _serializer__WEBPACK_IMPORTED_MODULE_12__.MapperType.Stream;\n                if (operationSpec.isXML) {\n                    const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n                    const value = getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, httpRequest.body, updatedOptions);\n                    if (typeName === _serializer__WEBPACK_IMPORTED_MODULE_12__.MapperType.Sequence) {\n                        httpRequest.body = (0,_util_xml__WEBPACK_IMPORTED_MODULE_13__.stringifyXML)(_util_utils__WEBPACK_IMPORTED_MODULE_14__.prepareXMLRootList(value, xmlElementName || xmlName || serializedName, xmlnsKey, xmlNamespace), {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey,\n                        });\n                    }\n                    else if (!isStream) {\n                        httpRequest.body = (0,_util_xml__WEBPACK_IMPORTED_MODULE_13__.stringifyXML)(value, {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey,\n                        });\n                    }\n                }\n                else if (typeName === _serializer__WEBPACK_IMPORTED_MODULE_12__.MapperType.String &&\n                    (((_f = operationSpec.contentType) === null || _f === void 0 ? void 0 : _f.match(\"text/plain\")) || operationSpec.mediaType === \"text\")) {\n                    // the String serializer has validated that request body is a string\n                    // so just send the string.\n                    return;\n                }\n                else if (!isStream) {\n                    httpRequest.body = JSON.stringify(httpRequest.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(`Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(serializedName, undefined, \"  \")}.`);\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        httpRequest.formData = {};\n        for (const formDataParameter of operationSpec.formDataParameters) {\n            const formDataParameterValue = getOperationArgumentValueFromParameter(serviceClient, operationArguments, formDataParameter, operationSpec.serializer);\n            if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n                const formDataParameterPropertyName = formDataParameter.mapper.serializedName || (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameter)(formDataParameter);\n                httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameter)(formDataParameter), updatedOptions);\n            }\n        }\n    }\n}\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, serializedValue, options) {\n    // Composite and Sequence schemas already got their root namespace set during serialization\n    // We just need to add xmlns to the other schema types\n    if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n        const result = {};\n        result[options.xmlCharKey] = serializedValue;\n        result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_11__.XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n        return result;\n    }\n    return serializedValue;\n}\nfunction getValueOrFunctionResult(value, defaultValueCreator) {\n    let result;\n    if (typeof value === \"string\") {\n        result = value;\n    }\n    else {\n        result = defaultValueCreator();\n        if (typeof value === \"function\") {\n            result = value(result);\n        }\n    }\n    return result;\n}\nfunction createDefaultRequestPolicyFactories(authPolicyFactory, options) {\n    const factories = [];\n    if (options.generateClientRequestIdHeader) {\n        factories.push((0,_policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_15__.generateClientRequestIdPolicy)(options.clientRequestIdHeaderName));\n    }\n    if (authPolicyFactory) {\n        factories.push(authPolicyFactory);\n    }\n    const userAgentHeaderName = getValueOrFunctionResult(options.userAgentHeaderName, _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_16__.getDefaultUserAgentHeaderName);\n    const userAgentHeaderValue = getValueOrFunctionResult(options.userAgent, _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_16__.getDefaultUserAgentValue);\n    if (userAgentHeaderName && userAgentHeaderValue) {\n        factories.push((0,_policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_16__.userAgentPolicy)({ key: userAgentHeaderName, value: userAgentHeaderValue }));\n    }\n    factories.push((0,_policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_17__.redirectPolicy)());\n    factories.push((0,_policies_rpRegistrationPolicy__WEBPACK_IMPORTED_MODULE_18__.rpRegistrationPolicy)(options.rpRegistrationRetryTimeout));\n    if (!options.noRetryPolicy) {\n        factories.push((0,_policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_19__.exponentialRetryPolicy)());\n        factories.push((0,_policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_20__.systemErrorRetryPolicy)());\n        factories.push((0,_policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_21__.throttlingRetryPolicy)());\n    }\n    factories.push((0,_policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__.deserializationPolicy)(options.deserializationContentTypes));\n    if (_util_utils__WEBPACK_IMPORTED_MODULE_14__.isNode) {\n        factories.push((0,_policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_23__.proxyPolicy)(options.proxySettings));\n    }\n    factories.push((0,_policies_logPolicy__WEBPACK_IMPORTED_MODULE_24__.logPolicy)({ logger: _log__WEBPACK_IMPORTED_MODULE_2__.logger.info }));\n    return factories;\n}\n/**\n * Creates an HTTP pipeline based on the given options.\n * @param pipelineOptions - Defines options that are used to configure policies in the HTTP pipeline for an SDK client.\n * @param authPolicyFactory - An optional authentication policy factory to use for signing requests.\n * @returns A set of options that can be passed to create a new {@link ServiceClient}.\n */\nfunction createPipelineFromOptions(pipelineOptions, authPolicyFactory) {\n    const requestPolicyFactories = [];\n    if (pipelineOptions.sendStreamingJson) {\n        requestPolicyFactories.push((0,_policies_ndJsonPolicy__WEBPACK_IMPORTED_MODULE_25__.ndJsonPolicy)());\n    }\n    let userAgentValue = undefined;\n    if (pipelineOptions.userAgentOptions && pipelineOptions.userAgentOptions.userAgentPrefix) {\n        const userAgentInfo = [];\n        userAgentInfo.push(pipelineOptions.userAgentOptions.userAgentPrefix);\n        // Add the default user agent value if it isn't already specified\n        // by the userAgentPrefix option.\n        const defaultUserAgentInfo = (0,_policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_16__.getDefaultUserAgentValue)();\n        if (userAgentInfo.indexOf(defaultUserAgentInfo) === -1) {\n            userAgentInfo.push(defaultUserAgentInfo);\n        }\n        userAgentValue = userAgentInfo.join(\" \");\n    }\n    const keepAliveOptions = Object.assign(Object.assign({}, _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_26__.DefaultKeepAliveOptions), pipelineOptions.keepAliveOptions);\n    const retryOptions = Object.assign(Object.assign({}, _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_19__.DefaultRetryOptions), pipelineOptions.retryOptions);\n    const redirectOptions = Object.assign(Object.assign({}, _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_17__.DefaultRedirectOptions), pipelineOptions.redirectOptions);\n    if (_util_utils__WEBPACK_IMPORTED_MODULE_14__.isNode) {\n        requestPolicyFactories.push((0,_policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_23__.proxyPolicy)(pipelineOptions.proxyOptions));\n    }\n    const deserializationOptions = Object.assign(Object.assign({}, _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__.DefaultDeserializationOptions), pipelineOptions.deserializationOptions);\n    const loggingOptions = Object.assign({}, pipelineOptions.loggingOptions);\n    requestPolicyFactories.push((0,_policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_27__.tracingPolicy)({ userAgent: userAgentValue }), (0,_policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_26__.keepAlivePolicy)(keepAliveOptions), (0,_policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_16__.userAgentPolicy)({ value: userAgentValue }), (0,_policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_15__.generateClientRequestIdPolicy)(), (0,_policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__.deserializationPolicy)(deserializationOptions.expectedContentTypes), (0,_policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_21__.throttlingRetryPolicy)(), (0,_policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_20__.systemErrorRetryPolicy)(), (0,_policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_19__.exponentialRetryPolicy)(retryOptions.maxRetries, retryOptions.retryDelayInMs, retryOptions.maxRetryDelayInMs));\n    if (redirectOptions.handleRedirects) {\n        requestPolicyFactories.push((0,_policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_17__.redirectPolicy)(redirectOptions.maxRetries));\n    }\n    if (authPolicyFactory) {\n        requestPolicyFactories.push(authPolicyFactory);\n    }\n    requestPolicyFactories.push((0,_policies_logPolicy__WEBPACK_IMPORTED_MODULE_24__.logPolicy)(loggingOptions));\n    if (_util_utils__WEBPACK_IMPORTED_MODULE_14__.isNode && pipelineOptions.decompressResponse === false) {\n        requestPolicyFactories.push((0,_policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_28__.disableResponseDecompressionPolicy)());\n    }\n    return {\n        httpClient: pipelineOptions.httpClient,\n        requestPolicyFactories,\n    };\n}\n/**\n * Get the property parent for the property at the provided path when starting with the provided\n * parent object.\n */\nfunction getPropertyParent(parent, propertyPath) {\n    if (parent && propertyPath) {\n        const propertyPathLength = propertyPath.length;\n        for (let i = 0; i < propertyPathLength - 1; ++i) {\n            const propertyName = propertyPath[i];\n            if (!parent[propertyName]) {\n                parent[propertyName] = {};\n            }\n            parent = parent[propertyName];\n        }\n    }\n    return parent;\n}\nfunction getOperationArgumentValueFromParameter(serviceClient, operationArguments, parameter, serializer) {\n    return getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameter.parameterPath, parameter.mapper, serializer);\n}\nfunction getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameterPath, parameterMapper, serializer) {\n    var _a;\n    let value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound) {\n                    propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n                }\n                let useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue =\n                        parameterMapper.required ||\n                            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n            // Serialize just for validation purposes.\n            const parameterPathString = (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameterPath)(parameterPath, parameterMapper);\n            serializer.serialize(parameterMapper, value, parameterPathString, serializerOptions);\n        }\n    }\n    else {\n        if (parameterMapper.required) {\n            value = {};\n        }\n        for (const propertyName in parameterPath) {\n            const propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            const propertyPath = parameterPath[propertyName];\n            const propertyValue = getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, propertyPath, propertyMapper, serializer);\n            // Serialize just for validation purposes.\n            const propertyPathString = (0,_operationParameter__WEBPACK_IMPORTED_MODULE_8__.getPathStringFromParameterPath)(propertyPath, propertyMapper);\n            serializer.serialize(propertyMapper, propertyValue, propertyPathString, serializerOptions);\n            if (propertyValue !== undefined && propertyValue !== null) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    const result = { propertyFound: false };\n    let i = 0;\n    for (; i < parameterPath.length; ++i) {\n        const parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent !== undefined && parent !== null && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\n/**\n * Parses an {@link HttpOperationResponse} into a normalized HTTP response object ({@link RestResponse}).\n * @param _response - Wrapper object for http response.\n * @param responseSpec - Mappers for how to parse the response properties.\n * @returns - A normalized response object.\n */\nfunction flattenResponse(_response, responseSpec) {\n    const parsedHeaders = _response.parsedHeaders;\n    const bodyMapper = responseSpec && responseSpec.bodyMapper;\n    const addOperationResponse = (obj) => {\n        return Object.defineProperty(obj, \"_response\", {\n            value: _response,\n        });\n    };\n    if (bodyMapper) {\n        const typeName = bodyMapper.type.name;\n        if (typeName === \"Stream\") {\n            return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), { blobBody: _response.blobBody, readableStreamBody: _response.readableStreamBody }));\n        }\n        const modelProperties = (typeName === \"Composite\" && bodyMapper.type.modelProperties) || {};\n        const isPageableResponse = Object.keys(modelProperties).some((k) => modelProperties[k].serializedName === \"\");\n        if (typeName === \"Sequence\" || isPageableResponse) {\n            const arrayResponse = [...(_response.parsedBody || [])];\n            for (const key of Object.keys(modelProperties)) {\n                if (modelProperties[key].serializedName) {\n                    arrayResponse[key] = _response.parsedBody[key];\n                }\n            }\n            if (parsedHeaders) {\n                for (const key of Object.keys(parsedHeaders)) {\n                    arrayResponse[key] = parsedHeaders[key];\n                }\n            }\n            addOperationResponse(arrayResponse);\n            return arrayResponse;\n        }\n        if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n            return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), _response.parsedBody));\n        }\n    }\n    if (bodyMapper ||\n        _response.request.method === \"HEAD\" ||\n        _util_utils__WEBPACK_IMPORTED_MODULE_14__.isPrimitiveType(_response.parsedBody)) {\n        // primitive body types and HEAD booleans\n        return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), { body: _response.parsedBody }));\n    }\n    return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), _response.parsedBody));\n}\nfunction getCredentialScopes(options, baseUri) {\n    if (options === null || options === void 0 ? void 0 : options.credentialScopes) {\n        const scopes = options.credentialScopes;\n        return Array.isArray(scopes)\n            ? scopes.map((scope) => new _url__WEBPACK_IMPORTED_MODULE_29__.URL(scope).toString())\n            : new _url__WEBPACK_IMPORTED_MODULE_29__.URL(scopes).toString();\n    }\n    if (baseUri) {\n        return `${baseUri}/.default`;\n    }\n    return undefined;\n}\n//# sourceMappingURL=serviceClient.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/serviceClient.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/url.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"URL\": () => (/* reexport safe */ _util_url__WEBPACK_IMPORTED_MODULE_0__.URL),\n/* harmony export */   \"URLQuery\": () => (/* binding */ URLQuery),\n/* harmony export */   \"URLBuilder\": () => (/* binding */ URLBuilder),\n/* harmony export */   \"URLToken\": () => (/* binding */ URLToken),\n/* harmony export */   \"isAlphaNumericCharacter\": () => (/* binding */ isAlphaNumericCharacter),\n/* harmony export */   \"URLTokenizer\": () => (/* binding */ URLTokenizer)\n/* harmony export */ });\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n/* harmony import */ var _util_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/url */ \"./node_modules/@azure/core-http/dist-esm/src/util/url.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * A class that handles the query portion of a URLBuilder.\n */\nclass URLQuery {\n    constructor() {\n        this._rawQuery = {};\n    }\n    /**\n     * Get whether or not there any query parameters in this URLQuery.\n     */\n    any() {\n        return Object.keys(this._rawQuery).length > 0;\n    }\n    /**\n     * Get the keys of the query string.\n     */\n    keys() {\n        return Object.keys(this._rawQuery);\n    }\n    /**\n     * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n     * empty, then this will attempt to remove an existing query parameter with the provided\n     * parameterName.\n     */\n    set(parameterName, parameterValue) {\n        const caseParameterValue = parameterValue;\n        if (parameterName) {\n            if (caseParameterValue !== undefined && caseParameterValue !== null) {\n                const newValue = Array.isArray(caseParameterValue)\n                    ? caseParameterValue\n                    : caseParameterValue.toString();\n                this._rawQuery[parameterName] = newValue;\n            }\n            else {\n                delete this._rawQuery[parameterName];\n            }\n        }\n    }\n    /**\n     * Get the value of the query parameter with the provided name. If no parameter exists with the\n     * provided parameter name, then undefined will be returned.\n     */\n    get(parameterName) {\n        return parameterName ? this._rawQuery[parameterName] : undefined;\n    }\n    /**\n     * Get the string representation of this query. The return value will not start with a \"?\".\n     */\n    toString() {\n        let result = \"\";\n        for (const parameterName in this._rawQuery) {\n            if (result) {\n                result += \"&\";\n            }\n            const parameterValue = this._rawQuery[parameterName];\n            if (Array.isArray(parameterValue)) {\n                const parameterStrings = [];\n                for (const parameterValueElement of parameterValue) {\n                    parameterStrings.push(`${parameterName}=${parameterValueElement}`);\n                }\n                result += parameterStrings.join(\"&\");\n            }\n            else {\n                result += `${parameterName}=${parameterValue}`;\n            }\n        }\n        return result;\n    }\n    /**\n     * Parse a URLQuery from the provided text.\n     */\n    static parse(text) {\n        const result = new URLQuery();\n        if (text) {\n            if (text.startsWith(\"?\")) {\n                text = text.substring(1);\n            }\n            let currentState = \"ParameterName\";\n            let parameterName = \"\";\n            let parameterValue = \"\";\n            for (let i = 0; i < text.length; ++i) {\n                const currentCharacter = text[i];\n                switch (currentState) {\n                    case \"ParameterName\":\n                        switch (currentCharacter) {\n                            case \"=\":\n                                currentState = \"ParameterValue\";\n                                break;\n                            case \"&\":\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                break;\n                            default:\n                                parameterName += currentCharacter;\n                                break;\n                        }\n                        break;\n                    case \"ParameterValue\":\n                        switch (currentCharacter) {\n                            case \"&\":\n                                result.set(parameterName, parameterValue);\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                currentState = \"ParameterName\";\n                                break;\n                            default:\n                                parameterValue += currentCharacter;\n                                break;\n                        }\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n                }\n            }\n            if (currentState === \"ParameterValue\") {\n                result.set(parameterName, parameterValue);\n            }\n        }\n        return result;\n    }\n}\n/**\n * A class that handles creating, modifying, and parsing URLs.\n */\nclass URLBuilder {\n    /**\n     * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n     * (such as a host, port, path, or query), those parts will be added to this URL as well.\n     */\n    setScheme(scheme) {\n        if (!scheme) {\n            this._scheme = undefined;\n        }\n        else {\n            this.set(scheme, \"SCHEME\");\n        }\n    }\n    /**\n     * Get the scheme that has been set in this URL.\n     */\n    getScheme() {\n        return this._scheme;\n    }\n    /**\n     * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n     * port, path, or query), those parts will be added to this URL as well.\n     */\n    setHost(host) {\n        if (!host) {\n            this._host = undefined;\n        }\n        else {\n            this.set(host, \"SCHEME_OR_HOST\");\n        }\n    }\n    /**\n     * Get the host that has been set in this URL.\n     */\n    getHost() {\n        return this._host;\n    }\n    /**\n     * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n     * path or query), those parts will be added to this URL as well.\n     */\n    setPort(port) {\n        if (port === undefined || port === null || port === \"\") {\n            this._port = undefined;\n        }\n        else {\n            this.set(port.toString(), \"PORT\");\n        }\n    }\n    /**\n     * Get the port that has been set in this URL.\n     */\n    getPort() {\n        return this._port;\n    }\n    /**\n     * Set the path for this URL. If the provided path contains a query, then it will be added to\n     * this URL as well.\n     */\n    setPath(path) {\n        if (!path) {\n            this._path = undefined;\n        }\n        else {\n            const schemeIndex = path.indexOf(\"://\");\n            if (schemeIndex !== -1) {\n                const schemeStart = path.lastIndexOf(\"/\", schemeIndex);\n                // Make sure to only grab the URL part of the path before setting the state back to SCHEME\n                // this will handle cases such as \"/a/b/c/https://microsoft.com\" => \"https://microsoft.com\"\n                this.set(schemeStart === -1 ? path : path.substr(schemeStart + 1), \"SCHEME\");\n            }\n            else {\n                this.set(path, \"PATH\");\n            }\n        }\n    }\n    /**\n     * Append the provided path to this URL's existing path. If the provided path contains a query,\n     * then it will be added to this URL as well.\n     */\n    appendPath(path) {\n        if (path) {\n            let currentPath = this.getPath();\n            if (currentPath) {\n                if (!currentPath.endsWith(\"/\")) {\n                    currentPath += \"/\";\n                }\n                if (path.startsWith(\"/\")) {\n                    path = path.substring(1);\n                }\n                path = currentPath + path;\n            }\n            this.set(path, \"PATH\");\n        }\n    }\n    /**\n     * Get the path that has been set in this URL.\n     */\n    getPath() {\n        return this._path;\n    }\n    /**\n     * Set the query in this URL.\n     */\n    setQuery(query) {\n        if (!query) {\n            this._query = undefined;\n        }\n        else {\n            this._query = URLQuery.parse(query);\n        }\n    }\n    /**\n     * Set a query parameter with the provided name and value in this URL's query. If the provided\n     * query parameter value is undefined or empty, then the query parameter will be removed if it\n     * existed.\n     */\n    setQueryParameter(queryParameterName, queryParameterValue) {\n        if (queryParameterName) {\n            if (!this._query) {\n                this._query = new URLQuery();\n            }\n            this._query.set(queryParameterName, queryParameterValue);\n        }\n    }\n    /**\n     * Get the value of the query parameter with the provided query parameter name. If no query\n     * parameter exists with the provided name, then undefined will be returned.\n     */\n    getQueryParameterValue(queryParameterName) {\n        return this._query ? this._query.get(queryParameterName) : undefined;\n    }\n    /**\n     * Get the query in this URL.\n     */\n    getQuery() {\n        return this._query ? this._query.toString() : undefined;\n    }\n    /**\n     * Set the parts of this URL by parsing the provided text using the provided startState.\n     */\n    set(text, startState) {\n        const tokenizer = new URLTokenizer(text, startState);\n        while (tokenizer.next()) {\n            const token = tokenizer.current();\n            let tokenPath;\n            if (token) {\n                switch (token.type) {\n                    case \"SCHEME\":\n                        this._scheme = token.text || undefined;\n                        break;\n                    case \"HOST\":\n                        this._host = token.text || undefined;\n                        break;\n                    case \"PORT\":\n                        this._port = token.text || undefined;\n                        break;\n                    case \"PATH\":\n                        tokenPath = token.text || undefined;\n                        if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n                            this._path = tokenPath;\n                        }\n                        break;\n                    case \"QUERY\":\n                        this._query = URLQuery.parse(token.text);\n                        break;\n                    default:\n                        throw new Error(`Unrecognized URLTokenType: ${token.type}`);\n                }\n            }\n        }\n    }\n    /**\n     * Serializes the URL as a string.\n     * @returns the URL as a string.\n     */\n    toString() {\n        let result = \"\";\n        if (this._scheme) {\n            result += `${this._scheme}://`;\n        }\n        if (this._host) {\n            result += this._host;\n        }\n        if (this._port) {\n            result += `:${this._port}`;\n        }\n        if (this._path) {\n            if (!this._path.startsWith(\"/\")) {\n                result += \"/\";\n            }\n            result += this._path;\n        }\n        if (this._query && this._query.any()) {\n            result += `?${this._query.toString()}`;\n        }\n        return result;\n    }\n    /**\n     * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n     * replaceValue.\n     */\n    replaceAll(searchValue, replaceValue) {\n        if (searchValue) {\n            this.setScheme((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.replaceAll)(this.getScheme(), searchValue, replaceValue));\n            this.setHost((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.replaceAll)(this.getHost(), searchValue, replaceValue));\n            this.setPort((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.replaceAll)(this.getPort(), searchValue, replaceValue));\n            this.setPath((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.replaceAll)(this.getPath(), searchValue, replaceValue));\n            this.setQuery((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.replaceAll)(this.getQuery(), searchValue, replaceValue));\n        }\n    }\n    /**\n     * Parses a given string URL into a new {@link URLBuilder}.\n     */\n    static parse(text) {\n        const result = new URLBuilder();\n        result.set(text, \"SCHEME_OR_HOST\");\n        return result;\n    }\n}\nclass URLToken {\n    constructor(text, type) {\n        this.text = text;\n        this.type = type;\n    }\n    static scheme(text) {\n        return new URLToken(text, \"SCHEME\");\n    }\n    static host(text) {\n        return new URLToken(text, \"HOST\");\n    }\n    static port(text) {\n        return new URLToken(text, \"PORT\");\n    }\n    static path(text) {\n        return new URLToken(text, \"PATH\");\n    }\n    static query(text) {\n        return new URLToken(text, \"QUERY\");\n    }\n}\n/**\n * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n * digit) character.\n */\nfunction isAlphaNumericCharacter(character) {\n    const characterCode = character.charCodeAt(0);\n    return ((48 /* '0' */ <= characterCode && characterCode <= 57) /* '9' */ ||\n        (65 /* 'A' */ <= characterCode && characterCode <= 90) /* 'Z' */ ||\n        (97 /* 'a' */ <= characterCode && characterCode <= 122) /* 'z' */);\n}\n/**\n * A class that tokenizes URL strings.\n */\nclass URLTokenizer {\n    constructor(_text, state) {\n        this._text = _text;\n        this._textLength = _text ? _text.length : 0;\n        this._currentState = state !== undefined && state !== null ? state : \"SCHEME_OR_HOST\";\n        this._currentIndex = 0;\n    }\n    /**\n     * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n     * hasn't started or has finished tokenizing.\n     */\n    current() {\n        return this._currentToken;\n    }\n    /**\n     * Advance to the next URLToken and return whether or not a URLToken was found.\n     */\n    next() {\n        if (!hasCurrentCharacter(this)) {\n            this._currentToken = undefined;\n        }\n        else {\n            switch (this._currentState) {\n                case \"SCHEME\":\n                    nextScheme(this);\n                    break;\n                case \"SCHEME_OR_HOST\":\n                    nextSchemeOrHost(this);\n                    break;\n                case \"HOST\":\n                    nextHost(this);\n                    break;\n                case \"PORT\":\n                    nextPort(this);\n                    break;\n                case \"PATH\":\n                    nextPath(this);\n                    break;\n                case \"QUERY\":\n                    nextQuery(this);\n                    break;\n                default:\n                    throw new Error(`Unrecognized URLTokenizerState: ${this._currentState}`);\n            }\n        }\n        return !!this._currentToken;\n    }\n}\n/**\n * Read the remaining characters from this Tokenizer's character stream.\n */\nfunction readRemaining(tokenizer) {\n    let result = \"\";\n    if (tokenizer._currentIndex < tokenizer._textLength) {\n        result = tokenizer._text.substring(tokenizer._currentIndex);\n        tokenizer._currentIndex = tokenizer._textLength;\n    }\n    return result;\n}\n/**\n * Whether or not this URLTokenizer has a current character.\n */\nfunction hasCurrentCharacter(tokenizer) {\n    return tokenizer._currentIndex < tokenizer._textLength;\n}\n/**\n * Get the character in the text string at the current index.\n */\nfunction getCurrentCharacter(tokenizer) {\n    return tokenizer._text[tokenizer._currentIndex];\n}\n/**\n * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n * then step will default to 1.\n */\nfunction nextCharacter(tokenizer, step) {\n    if (hasCurrentCharacter(tokenizer)) {\n        if (!step) {\n            step = 1;\n        }\n        tokenizer._currentIndex += step;\n    }\n}\n/**\n * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n * Tokenizer's stream of characters.\n */\nfunction peekCharacters(tokenizer, charactersToPeek) {\n    let endIndex = tokenizer._currentIndex + charactersToPeek;\n    if (tokenizer._textLength < endIndex) {\n        endIndex = tokenizer._textLength;\n    }\n    return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n}\n/**\n * Read characters from this Tokenizer until the end of the stream or until the provided condition\n * is false when provided the current character.\n */\nfunction readWhile(tokenizer, condition) {\n    let result = \"\";\n    while (hasCurrentCharacter(tokenizer)) {\n        const currentCharacter = getCurrentCharacter(tokenizer);\n        if (!condition(currentCharacter)) {\n            break;\n        }\n        else {\n            result += currentCharacter;\n            nextCharacter(tokenizer);\n        }\n    }\n    return result;\n}\n/**\n * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n * character stream is reached.\n */\nfunction readWhileLetterOrDigit(tokenizer) {\n    return readWhile(tokenizer, (character) => isAlphaNumericCharacter(character));\n}\n/**\n * Read characters from this Tokenizer until one of the provided terminating characters is read or\n * the end of the character stream is reached.\n */\nfunction readUntilCharacter(tokenizer, ...terminatingCharacters) {\n    return readWhile(tokenizer, (character) => terminatingCharacters.indexOf(character) === -1);\n}\nfunction nextScheme(tokenizer) {\n    const scheme = readWhileLetterOrDigit(tokenizer);\n    tokenizer._currentToken = URLToken.scheme(scheme);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"HOST\";\n    }\n}\nfunction nextSchemeOrHost(tokenizer) {\n    const schemeOrHost = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        if (peekCharacters(tokenizer, 3) === \"://\") {\n            tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n            tokenizer._currentState = \"HOST\";\n        }\n        else {\n            tokenizer._currentToken = URLToken.host(schemeOrHost);\n            tokenizer._currentState = \"PORT\";\n        }\n    }\n    else {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        if (getCurrentCharacter(tokenizer) === \"/\") {\n            tokenizer._currentState = \"PATH\";\n        }\n        else {\n            tokenizer._currentState = \"QUERY\";\n        }\n    }\n}\nfunction nextHost(tokenizer) {\n    if (peekCharacters(tokenizer, 3) === \"://\") {\n        nextCharacter(tokenizer, 3);\n    }\n    const host = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    tokenizer._currentToken = URLToken.host(host);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        tokenizer._currentState = \"PORT\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPort(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \":\") {\n        nextCharacter(tokenizer);\n    }\n    const port = readUntilCharacter(tokenizer, \"/\", \"?\");\n    tokenizer._currentToken = URLToken.port(port);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPath(tokenizer) {\n    const path = readUntilCharacter(tokenizer, \"?\");\n    tokenizer._currentToken = URLToken.path(path);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextQuery(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \"?\") {\n        nextCharacter(tokenizer);\n    }\n    const query = readRemaining(tokenizer);\n    tokenizer._currentToken = URLToken.query(query);\n    tokenizer._currentState = \"DONE\";\n}\n//# sourceMappingURL=url.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/url.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encodeString\": () => (/* binding */ encodeString),\n/* harmony export */   \"encodeByteArray\": () => (/* binding */ encodeByteArray),\n/* harmony export */   \"decodeString\": () => (/* binding */ decodeString)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Encodes a string in base64 format.\n * @param value - The string to encode\n */\nfunction encodeString(value) {\n    return btoa(value);\n}\n/**\n * Encodes a byte array in base64 format.\n * @param value - The Uint8Aray to encode\n */\nfunction encodeByteArray(value) {\n    let str = \"\";\n    for (let i = 0; i < value.length; i++) {\n        str += String.fromCharCode(value[i]);\n    }\n    return btoa(str);\n}\n/**\n * Decodes a base64 string into a byte array.\n * @param value - The base64 string to decode\n */\nfunction decodeString(value) {\n    const byteString = atob(value);\n    const arr = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n        arr[i] = byteString.charCodeAt(i);\n    }\n    return arr;\n}\n//# sourceMappingURL=base64.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Constants\": () => (/* binding */ Constants)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A set of constants used internally when processing requests.\n */\nconst Constants = {\n    /**\n     * The core-http version\n     */\n    coreHttpVersion: \"2.2.4\",\n    /**\n     * Specifies HTTP.\n     */\n    HTTP: \"http:\",\n    /**\n     * Specifies HTTPS.\n     */\n    HTTPS: \"https:\",\n    /**\n     * Specifies HTTP Proxy.\n     */\n    HTTP_PROXY: \"HTTP_PROXY\",\n    /**\n     * Specifies HTTPS Proxy.\n     */\n    HTTPS_PROXY: \"HTTPS_PROXY\",\n    /**\n     * Specifies NO Proxy.\n     */\n    NO_PROXY: \"NO_PROXY\",\n    /**\n     * Specifies ALL Proxy.\n     */\n    ALL_PROXY: \"ALL_PROXY\",\n    HttpConstants: {\n        /**\n         * Http Verbs\n         */\n        HttpVerbs: {\n            PUT: \"PUT\",\n            GET: \"GET\",\n            DELETE: \"DELETE\",\n            POST: \"POST\",\n            MERGE: \"MERGE\",\n            HEAD: \"HEAD\",\n            PATCH: \"PATCH\",\n        },\n        StatusCodes: {\n            TooManyRequests: 429,\n            ServiceUnavailable: 503,\n        },\n    },\n    /**\n     * Defines constants for use with HTTP headers.\n     */\n    HeaderConstants: {\n        /**\n         * The Authorization header.\n         */\n        AUTHORIZATION: \"authorization\",\n        AUTHORIZATION_SCHEME: \"Bearer\",\n        /**\n         * The Retry-After response-header field can be used with a 503 (Service\n         * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n         * the service is expected to be unavailable to the requesting client.\n         */\n        RETRY_AFTER: \"Retry-After\",\n        /**\n         * The UserAgent header.\n         */\n        USER_AGENT: \"User-Agent\",\n    },\n};\n//# sourceMappingURL=constants.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/constants.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/delay.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/delay.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"delay\": () => (/* binding */ delay)\n/* harmony export */ });\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js\");\n/* harmony import */ var _typeguards__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeguards */ \"./node_modules/@azure/core-http/dist-esm/src/util/typeguards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *   @param abortSignal - The abortSignal associated with containing operation.\n *   @param abortErrorMsg - The abort error message associated with containing operation.\n * @returns - Resolved promise\n */\nfunction delay(delayInMs, value, options) {\n    return new Promise((resolve, reject) => {\n        let timer = undefined;\n        let onAborted = undefined;\n        const rejectOnAbort = () => {\n            return reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));\n        };\n        const removeListeners = () => {\n            if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {\n                options.abortSignal.removeEventListener(\"abort\", onAborted);\n            }\n        };\n        onAborted = () => {\n            if ((0,_typeguards__WEBPACK_IMPORTED_MODULE_1__.isDefined)(timer)) {\n                clearTimeout(timer);\n            }\n            removeListeners();\n            return rejectOnAbort();\n        };\n        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        timer = setTimeout(() => {\n            removeListeners();\n            resolve(value);\n        }, delayInMs);\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", onAborted);\n        }\n    });\n}\n//# sourceMappingURL=delay.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/delay.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_CLIENT_RETRY_COUNT\": () => (/* binding */ DEFAULT_CLIENT_RETRY_COUNT),\n/* harmony export */   \"DEFAULT_CLIENT_RETRY_INTERVAL\": () => (/* binding */ DEFAULT_CLIENT_RETRY_INTERVAL),\n/* harmony export */   \"DEFAULT_CLIENT_MAX_RETRY_INTERVAL\": () => (/* binding */ DEFAULT_CLIENT_MAX_RETRY_INTERVAL),\n/* harmony export */   \"DEFAULT_CLIENT_MIN_RETRY_INTERVAL\": () => (/* binding */ DEFAULT_CLIENT_MIN_RETRY_INTERVAL),\n/* harmony export */   \"isNumber\": () => (/* binding */ isNumber),\n/* harmony export */   \"shouldRetry\": () => (/* binding */ shouldRetry),\n/* harmony export */   \"updateRetryData\": () => (/* binding */ updateRetryData)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst DEFAULT_CLIENT_RETRY_COUNT = 3;\n// intervals are in ms\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nconst DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\nfunction isNumber(n) {\n    return typeof n === \"number\";\n}\n/**\n * @internal\n * Determines if the operation should be retried.\n *\n * @param retryLimit - Specifies the max number of retries.\n * @param predicate - Initial chekck on whether to retry based on given responses or errors\n * @param retryData -  The retry data.\n * @returns True if the operation qualifies for a retry; false otherwise.\n */\nfunction shouldRetry(retryLimit, predicate, retryData, response, error) {\n    if (!predicate(response, error)) {\n        return false;\n    }\n    return retryData.retryCount < retryLimit;\n}\n/**\n * @internal\n * Updates the retry data for the next attempt.\n *\n * @param retryOptions - specifies retry interval, and its lower bound and upper bound.\n * @param retryData -  The retry data.\n * @param err - The operation\"s error, if any.\n */\nfunction updateRetryData(retryOptions, retryData = { retryCount: 0, retryInterval: 0 }, err) {\n    if (err) {\n        if (retryData.error) {\n            err.innerError = retryData.error;\n        }\n        retryData.error = err;\n    }\n    // Adjust retry count\n    retryData.retryCount++;\n    // Adjust retry interval\n    let incrementDelta = Math.pow(2, retryData.retryCount - 1) - 1;\n    const boundedRandDelta = retryOptions.retryInterval * 0.8 +\n        Math.floor(Math.random() * (retryOptions.retryInterval * 0.4));\n    incrementDelta *= boundedRandDelta;\n    retryData.retryInterval = Math.min(retryOptions.minRetryInterval + incrementDelta, retryOptions.maxRetryInterval);\n    return retryData;\n}\n//# sourceMappingURL=exponentialBackoffStrategy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"custom\": () => (/* binding */ custom)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst custom = {};\n//# sourceMappingURL=inspect.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Sanitizer\": () => (/* binding */ Sanitizer)\n/* harmony export */ });\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../url */ \"./node_modules/@azure/core-http/dist-esm/src/url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst RedactedString = \"REDACTED\";\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\nclass Sanitizer {\n    constructor({ allowedHeaderNames = [], allowedQueryParameters = [] } = {}) {\n        allowedHeaderNames = Array.isArray(allowedHeaderNames)\n            ? defaultAllowedHeaderNames.concat(allowedHeaderNames)\n            : defaultAllowedHeaderNames;\n        allowedQueryParameters = Array.isArray(allowedQueryParameters)\n            ? defaultAllowedQueryParameters.concat(allowedQueryParameters)\n            : defaultAllowedQueryParameters;\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"_headersMap\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    sanitizeHeaders(value) {\n        return this.sanitizeObject(value, this.allowedHeaderNames, (v, k) => v[k].value);\n    }\n    sanitizeQuery(value) {\n        return this.sanitizeObject(value, this.allowedQueryParameters, (v, k) => v[k]);\n    }\n    sanitizeObject(value, allowedKeys, accessor) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (allowedKeys.has(k.toLowerCase())) {\n                sanitized[k] = accessor(value, k);\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null) {\n            return value;\n        }\n        const urlBuilder = _url__WEBPACK_IMPORTED_MODULE_1__.URLBuilder.parse(value);\n        const queryString = urlBuilder.getQuery();\n        if (!queryString) {\n            return value;\n        }\n        const query = _url__WEBPACK_IMPORTED_MODULE_1__.URLQuery.parse(queryString);\n        for (const k of query.keys()) {\n            if (!this.allowedQueryParameters.has(k.toLowerCase())) {\n                query.set(k, RedactedString);\n            }\n        }\n        urlBuilder.setQuery(query.toString());\n        return urlBuilder.toString();\n    }\n}\n//# sourceMappingURL=sanitizer.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"XML_ATTRKEY\": () => (/* binding */ XML_ATTRKEY),\n/* harmony export */   \"XML_CHARKEY\": () => (/* binding */ XML_CHARKEY)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Default key used to access the XML attributes.\n */\nconst XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nconst XML_CHARKEY = \"_\";\n//# sourceMappingURL=serializer.common.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_CLIENT_MAX_RETRY_COUNT\": () => (/* binding */ DEFAULT_CLIENT_MAX_RETRY_COUNT)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Maximum number of retries for the throttling retry policy\n */\nconst DEFAULT_CLIENT_MAX_RETRY_COUNT = 3;\n//# sourceMappingURL=throttlingRetryStrategy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/typeguards.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/typeguards.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isDefined\": () => (/* binding */ isDefined)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper TypeGuard that checks if the value is not null or undefined.\n * @param thing - Anything\n * @internal\n */\nfunction isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n//# sourceMappingURL=typeguards.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/typeguards.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/url.browser.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/url.browser.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"URL\": () => (/* binding */ url)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst url = URL;\n\n//# sourceMappingURL=url.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/url.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNode\": () => (/* binding */ isNode),\n/* harmony export */   \"urlIsHTTPS\": () => (/* binding */ urlIsHTTPS),\n/* harmony export */   \"encodeUri\": () => (/* binding */ encodeUri),\n/* harmony export */   \"stripResponse\": () => (/* binding */ stripResponse),\n/* harmony export */   \"stripRequest\": () => (/* binding */ stripRequest),\n/* harmony export */   \"isValidUuid\": () => (/* binding */ isValidUuid),\n/* harmony export */   \"generateUuid\": () => (/* binding */ generateUuid),\n/* harmony export */   \"executePromisesSequentially\": () => (/* binding */ executePromisesSequentially),\n/* harmony export */   \"promiseToCallback\": () => (/* binding */ promiseToCallback),\n/* harmony export */   \"promiseToServiceCallback\": () => (/* binding */ promiseToServiceCallback),\n/* harmony export */   \"prepareXMLRootList\": () => (/* binding */ prepareXMLRootList),\n/* harmony export */   \"applyMixins\": () => (/* binding */ applyMixins),\n/* harmony export */   \"isDuration\": () => (/* binding */ isDuration),\n/* harmony export */   \"replaceAll\": () => (/* binding */ replaceAll),\n/* harmony export */   \"isPrimitiveType\": () => (/* binding */ isPrimitiveType),\n/* harmony export */   \"getEnvironmentValue\": () => (/* binding */ getEnvironmentValue),\n/* harmony export */   \"isObject\": () => (/* binding */ isObject)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./node_modules/@azure/core-http/dist-esm/src/util/constants.js\");\n/* harmony import */ var _serializer_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nconst isNode = typeof process !== \"undefined\" &&\n    !!process.version &&\n    !!process.versions &&\n    !!process.versions.node;\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param urlToCheck - The url to check\n * @returns True if the URL is HTTPS; false otherwise.\n */\nfunction urlIsHTTPS(urlToCheck) {\n    return urlToCheck.protocol.toLowerCase() === _constants__WEBPACK_IMPORTED_MODULE_0__.Constants.HTTPS;\n}\n/**\n * Encodes an URI.\n *\n * @param uri - The URI to be encoded.\n * @returns The encoded URI.\n */\nfunction encodeUri(uri) {\n    return encodeURIComponent(uri)\n        .replace(/!/g, \"%21\")\n        .replace(/\"/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param response - The Http Response\n * @returns The stripped version of Http Response.\n */\nfunction stripResponse(response) {\n    const strippedResponse = {};\n    strippedResponse.body = response.bodyAsText;\n    strippedResponse.headers = response.headers;\n    strippedResponse.status = response.status;\n    return strippedResponse;\n}\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param request - The Http Request object\n * @returns The stripped version of Http Request.\n */\nfunction stripRequest(request) {\n    const strippedRequest = request.clone();\n    if (strippedRequest.headers) {\n        strippedRequest.headers.remove(\"authorization\");\n    }\n    return strippedRequest;\n}\n/**\n * Validates the given uuid as a string\n *\n * @param uuid - The uuid as a string that needs to be validated\n * @returns True if the uuid is valid; false otherwise.\n */\nfunction isValidUuid(uuid) {\n    return validUuidRegex.test(uuid);\n}\n/**\n * Generated UUID\n *\n * @returns RFC4122 v4 UUID.\n */\nfunction generateUuid() {\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n}\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param promiseFactories - An array of promise factories(A function that return a promise)\n * @param kickstart - Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n * @returns A chain of resolved or rejected promises\n */\nfunction executePromisesSequentially(promiseFactories, kickstart) {\n    let result = Promise.resolve(kickstart);\n    promiseFactories.forEach((promiseFactory) => {\n        result = result.then(promiseFactory);\n    });\n    return result;\n}\n/**\n * Converts a Promise to a callback.\n * @param promise - The Promise to be converted to a callback\n * @returns A function that takes the callback `(cb: Function) => void`\n * @deprecated generated code should instead depend on responseToBody\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction promiseToCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (cb) => {\n        promise\n            .then((data) => {\n            // eslint-disable-next-line promise/no-callback-in-promise\n            return cb(undefined, data);\n        })\n            .catch((err) => {\n            // eslint-disable-next-line promise/no-callback-in-promise\n            cb(err);\n        });\n    };\n}\n/**\n * Converts a Promise to a service callback.\n * @param promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nfunction promiseToServiceCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    return (cb) => {\n        promise\n            .then((data) => {\n            return process.nextTick(cb, undefined, data.parsedBody, data.request, data);\n        })\n            .catch((err) => {\n            process.nextTick(cb, err);\n        });\n    };\n}\nfunction prepareXMLRootList(obj, elementName, xmlNamespaceKey, xmlNamespace) {\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    if (!xmlNamespaceKey || !xmlNamespace) {\n        return { [elementName]: obj };\n    }\n    const result = { [elementName]: obj };\n    result[_serializer_common__WEBPACK_IMPORTED_MODULE_2__.XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n    return result;\n}\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param targetCtor - The target object on which the properties need to be applied.\n * @param sourceCtors - An array of source objects from which the properties need to be taken.\n */\nfunction applyMixins(targetCtorParam, sourceCtors) {\n    const castTargetCtorParam = targetCtorParam;\n    sourceCtors.forEach((sourceCtor) => {\n        Object.getOwnPropertyNames(sourceCtor.prototype).forEach((name) => {\n            castTargetCtorParam.prototype[name] = sourceCtor.prototype[name];\n        });\n    });\n}\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @returns `true` if valid, `false` otherwise.\n */\nfunction isDuration(value) {\n    return validateISODuration.test(value);\n}\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nfunction replaceAll(value, searchValue, replaceValue) {\n    return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n/**\n * Determines whether the given entity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param value - Any entity\n * @returns true is it is primitive type, false otherwise.\n */\nfunction isPrimitiveType(value) {\n    return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n}\nfunction getEnvironmentValue(name) {\n    if (process.env[name]) {\n        return process.env[name];\n    }\n    else if (process.env[name.toLowerCase()]) {\n        return process.env[name.toLowerCase()];\n    }\n    return undefined;\n}\n/**\n * @internal\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nfunction isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/utils.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseXML\": () => (/* binding */ parseXML),\n/* harmony export */   \"stringifyXML\": () => (/* binding */ stringifyXML)\n/* harmony export */ });\n/* harmony import */ var _serializer_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer.common */ \"./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nif (!self.document || !self.DOMParser || !self.Node || !self.XMLSerializer) {\n    throw new Error(`This library depends on the following DOM objects: [\"document\", \"DOMParser\", \"Node\", \"XMLSerializer\"] to parse XML, but some of these are undefined. You may provide a polyfill to make these globally available in order to support your environment. For more information, please refer to https://aka.ms/azsdk/js/web-workers. `);\n}\nconst doc = document.implementation.createDocument(null, null, null);\nconst parser = new DOMParser();\nfunction parseXML(str, opts = {}) {\n    var _a, _b, _c;\n    try {\n        const updatedOptions = {\n            rootName: (_a = opts.rootName) !== null && _a !== void 0 ? _a : \"\",\n            includeRoot: (_b = opts.includeRoot) !== null && _b !== void 0 ? _b : false,\n            xmlCharKey: (_c = opts.xmlCharKey) !== null && _c !== void 0 ? _c : _serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n        };\n        const dom = parser.parseFromString(str, \"application/xml\");\n        throwIfError(dom);\n        let obj;\n        if (updatedOptions.includeRoot) {\n            obj = domToObject(dom, updatedOptions);\n        }\n        else {\n            obj = domToObject(dom.childNodes[0], updatedOptions);\n        }\n        return Promise.resolve(obj);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\nlet errorNS;\nfunction getErrorNamespace() {\n    var _a;\n    if (errorNS === undefined) {\n        try {\n            errorNS =\n                (_a = parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0]\n                    .namespaceURI) !== null && _a !== void 0 ? _a : \"\";\n        }\n        catch (ignored) {\n            // Most browsers will return a document containing <parsererror>, but IE will throw.\n            errorNS = \"\";\n        }\n    }\n    return errorNS;\n}\nfunction throwIfError(dom) {\n    const parserErrors = dom.getElementsByTagName(\"parsererror\");\n    if (parserErrors.length > 0 && getErrorNamespace()) {\n        for (let i = 0; i < parserErrors.length; i++) {\n            if (parserErrors[i].namespaceURI === errorNS) {\n                throw new Error(parserErrors[i].innerHTML);\n            }\n        }\n    }\n}\nfunction isElement(node) {\n    return !!node.attributes;\n}\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node) {\n    return isElement(node) && node.hasAttributes() ? node : undefined;\n}\nfunction domToObject(node, options) {\n    let result = {};\n    const childNodeCount = node.childNodes.length;\n    const firstChildNode = node.childNodes[0];\n    const onlyChildTextValue = (firstChildNode &&\n        childNodeCount === 1 &&\n        firstChildNode.nodeType === Node.TEXT_NODE &&\n        firstChildNode.nodeValue) ||\n        undefined;\n    const elementWithAttributes = asElementWithAttributes(node);\n    if (elementWithAttributes) {\n        result[_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = {};\n        for (let i = 0; i < elementWithAttributes.attributes.length; i++) {\n            const attr = elementWithAttributes.attributes[i];\n            result[_serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY][attr.nodeName] = attr.nodeValue;\n        }\n        if (onlyChildTextValue) {\n            result[options.xmlCharKey] = onlyChildTextValue;\n        }\n    }\n    else if (childNodeCount === 0) {\n        result = \"\";\n    }\n    else if (onlyChildTextValue) {\n        result = onlyChildTextValue;\n    }\n    if (!onlyChildTextValue) {\n        for (let i = 0; i < childNodeCount; i++) {\n            const child = node.childNodes[i];\n            // Ignore leading/trailing whitespace nodes\n            if (child.nodeType !== Node.TEXT_NODE) {\n                const childObject = domToObject(child, options);\n                if (!result[child.nodeName]) {\n                    result[child.nodeName] = childObject;\n                }\n                else if (Array.isArray(result[child.nodeName])) {\n                    result[child.nodeName].push(childObject);\n                }\n                else {\n                    result[child.nodeName] = [result[child.nodeName], childObject];\n                }\n            }\n        }\n    }\n    return result;\n}\nconst serializer = new XMLSerializer();\nfunction stringifyXML(content, opts = {}) {\n    var _a, _b, _c;\n    const updatedOptions = {\n        rootName: (_a = opts.rootName) !== null && _a !== void 0 ? _a : \"root\",\n        includeRoot: (_b = opts.includeRoot) !== null && _b !== void 0 ? _b : false,\n        xmlCharKey: (_c = opts.xmlCharKey) !== null && _c !== void 0 ? _c : _serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n    };\n    const dom = buildNode(content, updatedOptions.rootName, updatedOptions)[0];\n    return ('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom));\n}\nfunction buildAttributes(attrs) {\n    const result = [];\n    for (const key of Object.keys(attrs)) {\n        const attr = doc.createAttribute(key);\n        attr.value = attrs[key].toString();\n        result.push(attr);\n    }\n    return result;\n}\nfunction buildNode(obj, elementName, options) {\n    if (obj === undefined ||\n        obj === null ||\n        typeof obj === \"string\" ||\n        typeof obj === \"number\" ||\n        typeof obj === \"boolean\") {\n        const elem = doc.createElement(elementName);\n        elem.textContent = obj === undefined || obj === null ? \"\" : obj.toString();\n        return [elem];\n    }\n    else if (Array.isArray(obj)) {\n        const result = [];\n        for (const arrayElem of obj) {\n            for (const child of buildNode(arrayElem, elementName, options)) {\n                result.push(child);\n            }\n        }\n        return result;\n    }\n    else if (typeof obj === \"object\") {\n        const elem = doc.createElement(elementName);\n        for (const key of Object.keys(obj)) {\n            if (key === _serializer_common__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY) {\n                for (const attr of buildAttributes(obj[key])) {\n                    elem.attributes.setNamedItem(attr);\n                }\n            }\n            else if (key === options.xmlCharKey) {\n                elem.textContent = obj[key].toString();\n            }\n            else {\n                for (const child of buildNode(obj[key], key, options)) {\n                    elem.appendChild(child);\n                }\n            }\n        }\n        return [elem];\n    }\n    else {\n        throw new Error(`Illegal value passed to buildObject: ${obj}`);\n    }\n}\n//# sourceMappingURL=xml.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/webResource.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/webResource.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isWebResourceLike\": () => (/* binding */ isWebResourceLike),\n/* harmony export */   \"WebResource\": () => (/* binding */ WebResource)\n/* harmony export */ });\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer */ \"./node_modules/@azure/core-http/dist-esm/src/serializer.js\");\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/utils */ \"./node_modules/@azure/core-http/dist-esm/src/util/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nfunction isWebResourceLike(object) {\n    if (object && typeof object === \"object\") {\n        const castObject = object;\n        if (typeof castObject.url === \"string\" &&\n            typeof castObject.method === \"string\" &&\n            typeof castObject.headers === \"object\" &&\n            (0,_httpHeaders__WEBPACK_IMPORTED_MODULE_0__.isHttpHeadersLike)(castObject.headers) &&\n            typeof castObject.validateRequestProperties === \"function\" &&\n            typeof castObject.prepare === \"function\" &&\n            typeof castObject.clone === \"function\") {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Creates a new WebResource object.\n *\n * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n * properties to initiate a request.\n */\nclass WebResource {\n    constructor(url, method, body, query, headers, streamResponseBody, withCredentials, abortSignal, timeout, onUploadProgress, onDownloadProgress, proxySettings, keepAlive, decompressResponse, streamResponseStatusCodes) {\n        this.streamResponseBody = streamResponseBody;\n        this.streamResponseStatusCodes = streamResponseStatusCodes;\n        this.url = url || \"\";\n        this.method = method || \"GET\";\n        this.headers = (0,_httpHeaders__WEBPACK_IMPORTED_MODULE_0__.isHttpHeadersLike)(headers) ? headers : new _httpHeaders__WEBPACK_IMPORTED_MODULE_0__.HttpHeaders(headers);\n        this.body = body;\n        this.query = query;\n        this.formData = undefined;\n        this.withCredentials = withCredentials || false;\n        this.abortSignal = abortSignal;\n        this.timeout = timeout || 0;\n        this.onUploadProgress = onUploadProgress;\n        this.onDownloadProgress = onDownloadProgress;\n        this.proxySettings = proxySettings;\n        this.keepAlive = keepAlive;\n        this.decompressResponse = decompressResponse;\n        this.requestId = this.headers.get(\"x-ms-client-request-id\") || (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.generateUuid)();\n    }\n    /**\n     * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n     * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n     * mentioned properties are not defined.\n     */\n    validateRequestProperties() {\n        if (!this.method) {\n            throw new Error(\"WebResource.method is required.\");\n        }\n        if (!this.url) {\n            throw new Error(\"WebResource.url is required.\");\n        }\n    }\n    /**\n     * Prepares the request.\n     * @param options - Options to provide for preparing the request.\n     * @returns Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n     */\n    prepare(options) {\n        if (!options) {\n            throw new Error(\"options object is required\");\n        }\n        if (options.method === undefined ||\n            options.method === null ||\n            typeof options.method.valueOf() !== \"string\") {\n            throw new Error(\"options.method must be a string.\");\n        }\n        if (options.url && options.pathTemplate) {\n            throw new Error(\"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\");\n        }\n        if ((options.pathTemplate === undefined ||\n            options.pathTemplate === null ||\n            typeof options.pathTemplate.valueOf() !== \"string\") &&\n            (options.url === undefined ||\n                options.url === null ||\n                typeof options.url.valueOf() !== \"string\")) {\n            throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n        }\n        // set the url if it is provided.\n        if (options.url) {\n            if (typeof options.url !== \"string\") {\n                throw new Error('options.url must be of type \"string\".');\n            }\n            this.url = options.url;\n        }\n        // set the method\n        if (options.method) {\n            const validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n            if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n                throw new Error('The provided method \"' +\n                    options.method +\n                    '\" is invalid. Supported HTTP methods are: ' +\n                    JSON.stringify(validMethods));\n            }\n        }\n        this.method = options.method.toUpperCase();\n        // construct the url if path template is provided\n        if (options.pathTemplate) {\n            const { pathTemplate, pathParameters } = options;\n            if (typeof pathTemplate !== \"string\") {\n                throw new Error('options.pathTemplate must be of type \"string\".');\n            }\n            if (!options.baseUrl) {\n                options.baseUrl = \"https://management.azure.com\";\n            }\n            const baseUrl = options.baseUrl;\n            let url = baseUrl +\n                (baseUrl.endsWith(\"/\") ? \"\" : \"/\") +\n                (pathTemplate.startsWith(\"/\") ? pathTemplate.slice(1) : pathTemplate);\n            const segments = url.match(/({[\\w-]*\\s*[\\w-]*})/gi);\n            if (segments && segments.length) {\n                if (!pathParameters) {\n                    throw new Error(`pathTemplate: ${pathTemplate} has been provided. Hence, options.pathParameters must also be provided.`);\n                }\n                segments.forEach(function (item) {\n                    const pathParamName = item.slice(1, -1);\n                    const pathParam = pathParameters[pathParamName];\n                    if (pathParam === null ||\n                        pathParam === undefined ||\n                        !(typeof pathParam === \"string\" || typeof pathParam === \"object\")) {\n                        const stringifiedPathParameters = JSON.stringify(pathParameters, undefined, 2);\n                        throw new Error(`pathTemplate: ${pathTemplate} contains the path parameter ${pathParamName}` +\n                            ` however, it is not present in parameters: ${stringifiedPathParameters}.` +\n                            `The value of the path parameter can either be a \"string\" of the form { ${pathParamName}: \"some sample value\" } or ` +\n                            `it can be an \"object\" of the form { \"${pathParamName}\": { value: \"some sample value\", skipUrlEncoding: true } }.`);\n                    }\n                    if (typeof pathParam.valueOf() === \"string\") {\n                        url = url.replace(item, encodeURIComponent(pathParam));\n                    }\n                    if (typeof pathParam.valueOf() === \"object\") {\n                        if (!pathParam.value) {\n                            throw new Error(`options.pathParameters[${pathParamName}] is of type \"object\" but it does not contain a \"value\" property.`);\n                        }\n                        if (pathParam.skipUrlEncoding) {\n                            url = url.replace(item, pathParam.value);\n                        }\n                        else {\n                            url = url.replace(item, encodeURIComponent(pathParam.value));\n                        }\n                    }\n                });\n            }\n            this.url = url;\n        }\n        // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n        if (options.queryParameters) {\n            const queryParameters = options.queryParameters;\n            if (typeof queryParameters !== \"object\") {\n                throw new Error(`options.queryParameters must be of type object. It should be a JSON object ` +\n                    `of \"query-parameter-name\" as the key and the \"query-parameter-value\" as the value. ` +\n                    `The \"query-parameter-value\" may be fo type \"string\" or an \"object\" of the form { value: \"query-parameter-value\", skipUrlEncoding: true }.`);\n            }\n            // append question mark if it is not present in the url\n            if (this.url && this.url.indexOf(\"?\") === -1) {\n                this.url += \"?\";\n            }\n            // construct queryString\n            const queryParams = [];\n            // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n            this.query = {};\n            for (const queryParamName in queryParameters) {\n                const queryParam = queryParameters[queryParamName];\n                if (queryParam) {\n                    if (typeof queryParam === \"string\") {\n                        queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n                        this.query[queryParamName] = encodeURIComponent(queryParam);\n                    }\n                    else if (typeof queryParam === \"object\") {\n                        if (!queryParam.value) {\n                            throw new Error(`options.queryParameters[${queryParamName}] is of type \"object\" but it does not contain a \"value\" property.`);\n                        }\n                        if (queryParam.skipUrlEncoding) {\n                            queryParams.push(queryParamName + \"=\" + queryParam.value);\n                            this.query[queryParamName] = queryParam.value;\n                        }\n                        else {\n                            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n                            this.query[queryParamName] = encodeURIComponent(queryParam.value);\n                        }\n                    }\n                }\n            } // end-of-for\n            // append the queryString\n            this.url += queryParams.join(\"&\");\n        }\n        // add headers to the request if they are provided\n        if (options.headers) {\n            const headers = options.headers;\n            for (const headerName of Object.keys(options.headers)) {\n                this.headers.set(headerName, headers[headerName]);\n            }\n        }\n        // ensure accept-language is set correctly\n        if (!this.headers.get(\"accept-language\")) {\n            this.headers.set(\"accept-language\", \"en-US\");\n        }\n        // ensure the request-id is set correctly\n        if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n            this.headers.set(\"x-ms-client-request-id\", this.requestId);\n        }\n        // default\n        if (!this.headers.get(\"Content-Type\")) {\n            this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n        }\n        // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicitly\n        this.body = options.body;\n        if (options.body !== undefined && options.body !== null) {\n            // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n            if (options.bodyIsStream) {\n                if (!this.headers.get(\"Transfer-Encoding\")) {\n                    this.headers.set(\"Transfer-Encoding\", \"chunked\");\n                }\n                if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n                    this.headers.set(\"Content-Type\", \"application/octet-stream\");\n                }\n            }\n            else {\n                if (options.serializationMapper) {\n                    this.body = new _serializer__WEBPACK_IMPORTED_MODULE_2__.Serializer(options.mappers).serialize(options.serializationMapper, options.body, \"requestBody\");\n                }\n                if (!options.disableJsonStringifyOnBody) {\n                    this.body = JSON.stringify(options.body);\n                }\n            }\n        }\n        if (options.spanOptions) {\n            this.spanOptions = options.spanOptions;\n        }\n        if (options.tracingContext) {\n            this.tracingContext = options.tracingContext;\n        }\n        this.abortSignal = options.abortSignal;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.onUploadProgress = options.onUploadProgress;\n        return this;\n    }\n    /**\n     * Clone this WebResource HTTP request object.\n     * @returns The clone of this WebResource HTTP request object.\n     */\n    clone() {\n        const result = new WebResource(this.url, this.method, this.body, this.query, this.headers && this.headers.clone(), this.streamResponseBody, this.withCredentials, this.abortSignal, this.timeout, this.onUploadProgress, this.onDownloadProgress, this.proxySettings, this.keepAlive, this.decompressResponse, this.streamResponseStatusCodes);\n        if (this.formData) {\n            result.formData = this.formData;\n        }\n        if (this.operationSpec) {\n            result.operationSpec = this.operationSpec;\n        }\n        if (this.shouldDeserialize) {\n            result.shouldDeserialize = this.shouldDeserialize;\n        }\n        if (this.operationResponseGetter) {\n            result.operationResponseGetter = this.operationResponseGetter;\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=webResource.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/webResource.js?");

/***/ }),

/***/ "./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"XhrHttpClient\": () => (/* binding */ XhrHttpClient),\n/* harmony export */   \"parseHeaders\": () => (/* binding */ parseHeaders)\n/* harmony export */ });\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./httpHeaders */ \"./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js\");\n/* harmony import */ var _restError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./restError */ \"./node_modules/@azure/core-http/dist-esm/src/restError.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.\n */\nclass XhrHttpClient {\n    sendRequest(request) {\n        var _a;\n        const xhr = new XMLHttpRequest();\n        if (request.proxySettings) {\n            throw new Error(\"HTTP proxy is not supported in browser environment\");\n        }\n        const abortSignal = request.abortSignal;\n        if (abortSignal) {\n            if (abortSignal.aborted) {\n                return Promise.reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError(\"The operation was aborted.\"));\n            }\n            const listener = () => {\n                xhr.abort();\n            };\n            abortSignal.addEventListener(\"abort\", listener);\n            xhr.addEventListener(\"readystatechange\", () => {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    abortSignal.removeEventListener(\"abort\", listener);\n                }\n            });\n        }\n        addProgressListener(xhr.upload, request.onUploadProgress);\n        addProgressListener(xhr, request.onDownloadProgress);\n        if (request.formData) {\n            const formData = request.formData;\n            const requestForm = new FormData();\n            const appendFormValue = (key, value) => {\n                if (value &&\n                    Object.prototype.hasOwnProperty.call(value, \"value\") &&\n                    Object.prototype.hasOwnProperty.call(value, \"options\")) {\n                    requestForm.append(key, value.value, value.options);\n                }\n                else {\n                    requestForm.append(key, value);\n                }\n            };\n            for (const formKey of Object.keys(formData)) {\n                const formValue = formData[formKey];\n                if (Array.isArray(formValue)) {\n                    for (let j = 0; j < formValue.length; j++) {\n                        appendFormValue(formKey, formValue[j]);\n                    }\n                }\n                else {\n                    appendFormValue(formKey, formValue);\n                }\n            }\n            request.body = requestForm;\n            request.formData = undefined;\n            const contentType = request.headers.get(\"Content-Type\");\n            if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                // browser will automatically apply a suitable content-type header\n                request.headers.remove(\"Content-Type\");\n            }\n        }\n        xhr.open(request.method, request.url);\n        xhr.timeout = request.timeout;\n        xhr.withCredentials = request.withCredentials;\n        for (const header of request.headers.headersArray()) {\n            xhr.setRequestHeader(header.name, header.value);\n        }\n        xhr.responseType =\n            ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.size) || request.streamResponseBody ? \"blob\" : \"text\";\n        // tslint:disable-next-line:no-null-keyword\n        xhr.send(request.body === undefined ? null : request.body);\n        if (xhr.responseType === \"blob\") {\n            return new Promise((resolve, reject) => {\n                handleBlobResponse(xhr, request, resolve, reject);\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n        else {\n            return new Promise(function (resolve, reject) {\n                xhr.addEventListener(\"load\", () => resolve({\n                    request,\n                    status: xhr.status,\n                    headers: parseHeaders(xhr),\n                    bodyAsText: xhr.responseText,\n                }));\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n    }\n}\nfunction handleBlobResponse(xhr, request, res, rej) {\n    xhr.addEventListener(\"readystatechange\", () => {\n        var _a;\n        // Resolve as soon as headers are loaded\n        if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n            if (request.streamResponseBody || ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(xhr.status))) {\n                const blobBody = new Promise((resolve, reject) => {\n                    xhr.addEventListener(\"load\", () => {\n                        resolve(xhr.response);\n                    });\n                    rejectOnTerminalEvent(request, xhr, reject);\n                });\n                res({\n                    request,\n                    status: xhr.status,\n                    headers: parseHeaders(xhr),\n                    blobBody,\n                });\n            }\n            else {\n                xhr.addEventListener(\"load\", () => {\n                    // xhr.response is of Blob type if the request is sent with xhr.responseType === \"blob\"\n                    // but the status code is not one of the stream response status codes,\n                    // so treat it as text and convert from Blob to text\n                    if (xhr.response) {\n                        // Blob.text() is not supported in IE so using FileReader instead\n                        const reader = new FileReader();\n                        reader.onload = function (e) {\n                            var _a;\n                            const text = (_a = e.target) === null || _a === void 0 ? void 0 : _a.result;\n                            res({\n                                request,\n                                status: xhr.status,\n                                headers: parseHeaders(xhr),\n                                bodyAsText: text,\n                            });\n                        };\n                        reader.onerror = function (_e) {\n                            rej(reader.error);\n                        };\n                        reader.readAsText(xhr.response, \"UTF-8\");\n                    }\n                    else {\n                        res({\n                            request,\n                            status: xhr.status,\n                            headers: parseHeaders(xhr),\n                        });\n                    }\n                });\n            }\n        }\n    });\n}\nfunction addProgressListener(xhr, listener) {\n    if (listener) {\n        xhr.addEventListener(\"progress\", (rawEvent) => listener({\n            loadedBytes: rawEvent.loaded,\n        }));\n    }\n}\n// exported locally for testing\nfunction parseHeaders(xhr) {\n    const responseHeaders = new _httpHeaders__WEBPACK_IMPORTED_MODULE_1__.HttpHeaders();\n    const headerLines = xhr\n        .getAllResponseHeaders()\n        .trim()\n        .split(/[\\r\\n]+/);\n    for (const line of headerLines) {\n        const index = line.indexOf(\":\");\n        const headerName = line.slice(0, index);\n        const headerValue = line.slice(index + 2);\n        responseHeaders.set(headerName, headerValue);\n    }\n    return responseHeaders;\n}\nfunction rejectOnTerminalEvent(request, xhr, reject) {\n    xhr.addEventListener(\"error\", () => reject(new _restError__WEBPACK_IMPORTED_MODULE_2__.RestError(`Failed to send request to ${request.url}`, _restError__WEBPACK_IMPORTED_MODULE_2__.RestError.REQUEST_SEND_ERROR, undefined, request)));\n    const abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError(\"The operation was aborted.\");\n    xhr.addEventListener(\"abort\", () => reject(abortError));\n    xhr.addEventListener(\"timeout\", () => reject(abortError));\n}\n//# sourceMappingURL=xhrHttpClient.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/constants.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/constants.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SDK_VERSION\": () => (/* binding */ SDK_VERSION)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst SDK_VERSION = \"1.5.0\";\n//# sourceMappingURL=constants.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/constants.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/createPipelineFromOptions.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/createPipelineFromOptions.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPipelineFromOptions\": () => (/* binding */ createPipelineFromOptions)\n/* harmony export */ });\n/* harmony import */ var _pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pipeline */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/pipeline.js\");\n/* harmony import */ var _policies_decompressResponsePolicy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./policies/decompressResponsePolicy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/decompressResponsePolicy.browser.js\");\n/* harmony import */ var _policies_formDataPolicy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./policies/formDataPolicy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/formDataPolicy.browser.js\");\n/* harmony import */ var _policies_logPolicy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/logPolicy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/logPolicy.js\");\n/* harmony import */ var _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./policies/proxyPolicy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/proxyPolicy.browser.js\");\n/* harmony import */ var _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/redirectPolicy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_setClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./policies/setClientRequestIdPolicy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/setClientRequestIdPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./policies/tracingPolicy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/tracingPolicy.js\");\n/* harmony import */ var _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./policies/userAgentPolicy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/userAgentPolicy.js\");\n/* harmony import */ var _policies_defaultRetryPolicy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./policies/defaultRetryPolicy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/defaultRetryPolicy.js\");\n/* harmony import */ var _util_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/helpers */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/helpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nfunction createPipelineFromOptions(options) {\n    const pipeline = (0,_pipeline__WEBPACK_IMPORTED_MODULE_0__.createEmptyPipeline)();\n    if (_util_helpers__WEBPACK_IMPORTED_MODULE_1__.isNode) {\n        pipeline.addPolicy((0,_policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_2__.proxyPolicy)(options.proxyOptions));\n        pipeline.addPolicy((0,_policies_decompressResponsePolicy__WEBPACK_IMPORTED_MODULE_3__.decompressResponsePolicy)());\n    }\n    pipeline.addPolicy((0,_policies_formDataPolicy__WEBPACK_IMPORTED_MODULE_4__.formDataPolicy)());\n    pipeline.addPolicy((0,_policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_5__.userAgentPolicy)(options.userAgentOptions));\n    pipeline.addPolicy((0,_policies_setClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_6__.setClientRequestIdPolicy)());\n    pipeline.addPolicy((0,_policies_defaultRetryPolicy__WEBPACK_IMPORTED_MODULE_7__.defaultRetryPolicy)(options.retryOptions), { phase: \"Retry\" });\n    pipeline.addPolicy((0,_policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_8__.tracingPolicy)(options.userAgentOptions), { afterPhase: \"Retry\" });\n    pipeline.addPolicy((0,_policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_9__.redirectPolicy)(options.redirectOptions), { afterPhase: \"Retry\" });\n    pipeline.addPolicy((0,_policies_logPolicy__WEBPACK_IMPORTED_MODULE_10__.logPolicy)(options.loggingOptions), { afterPhase: \"Retry\" });\n    return pipeline;\n}\n//# sourceMappingURL=createPipelineFromOptions.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/createPipelineFromOptions.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/defaultHttpClient.browser.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/defaultHttpClient.browser.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDefaultHttpClient\": () => (/* binding */ createDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _xhrHttpClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./xhrHttpClient */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/xhrHttpClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nfunction createDefaultHttpClient() {\n    return (0,_xhrHttpClient__WEBPACK_IMPORTED_MODULE_0__.createXhrHttpClient)();\n}\n//# sourceMappingURL=defaultHttpClient.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/defaultHttpClient.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/httpHeaders.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/httpHeaders.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createHttpHeaders\": () => (/* binding */ createHttpHeaders)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction normalizeName(name) {\n    return name.toLowerCase();\n}\nfunction* headerIterator(map) {\n    for (const entry of map.values()) {\n        yield [entry.name, entry.value];\n    }\n}\nclass HttpHeadersImpl {\n    constructor(rawHeaders) {\n        this._headersMap = new Map();\n        if (rawHeaders) {\n            for (const headerName of Object.keys(rawHeaders)) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     * @param value - The value of the header to set.\n     */\n    set(name, value) {\n        this._headersMap.set(normalizeName(name), { name, value: String(value) });\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param name - The name of the header. This value is case-insensitive.\n     */\n    get(name) {\n        var _a;\n        return (_a = this._headersMap.get(normalizeName(name))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     */\n    has(name) {\n        return this._headersMap.has(normalizeName(name));\n    }\n    /**\n     * Remove the header with the provided headerName.\n     * @param name - The name of the header to remove.\n     */\n    delete(name) {\n        this._headersMap.delete(normalizeName(name));\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJSON(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const entry of this._headersMap.values()) {\n                result[entry.name] = entry.value;\n            }\n        }\n        else {\n            for (const [normalizedName, entry] of this._headersMap) {\n                result[normalizedName] = entry.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON({ preserveCase: true }));\n    }\n    /**\n     * Iterate over tuples of header [name, value] pairs.\n     */\n    [Symbol.iterator]() {\n        return headerIterator(this._headersMap);\n    }\n}\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nfunction createHttpHeaders(rawHeaders) {\n    return new HttpHeadersImpl(rawHeaders);\n}\n//# sourceMappingURL=httpHeaders.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/httpHeaders.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/log.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/log.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logger\": () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"./node_modules/@azure/logger/dist-esm/src/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-rest-pipeline\");\n//# sourceMappingURL=log.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/log.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/pipeline.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/pipeline.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createEmptyPipeline\": () => (/* binding */ createEmptyPipeline)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst ValidPhaseNames = new Set([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline {\n    constructor(policies = []) {\n        this._policies = [];\n        this._policies = policies;\n        this._orderedPolicies = undefined;\n    }\n    addPolicy(policy, options = {}) {\n        if (options.phase && options.afterPhase) {\n            throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n        }\n        if (options.phase && !ValidPhaseNames.has(options.phase)) {\n            throw new Error(`Invalid phase name: ${options.phase}`);\n        }\n        if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n            throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n        }\n        this._policies.push({\n            policy,\n            options,\n        });\n        this._orderedPolicies = undefined;\n    }\n    removePolicy(options) {\n        const removedPolicies = [];\n        this._policies = this._policies.filter((policyDescriptor) => {\n            if ((options.name && policyDescriptor.policy.name === options.name) ||\n                (options.phase && policyDescriptor.options.phase === options.phase)) {\n                removedPolicies.push(policyDescriptor.policy);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n        this._orderedPolicies = undefined;\n        return removedPolicies;\n    }\n    sendRequest(httpClient, request) {\n        const policies = this.getOrderedPolicies();\n        const pipeline = policies.reduceRight((next, policy) => {\n            return (req) => {\n                return policy.sendRequest(req, next);\n            };\n        }, (req) => httpClient.sendRequest(req));\n        return pipeline(request);\n    }\n    getOrderedPolicies() {\n        if (!this._orderedPolicies) {\n            this._orderedPolicies = this.orderPolicies();\n        }\n        return this._orderedPolicies;\n    }\n    clone() {\n        return new HttpPipeline(this._policies);\n    }\n    static create() {\n        return new HttpPipeline();\n    }\n    orderPolicies() {\n        /**\n         * The goal of this method is to reliably order pipeline policies\n         * based on their declared requirements when they were added.\n         *\n         * Order is first determined by phase:\n         *\n         * 1. Serialize Phase\n         * 2. Policies not in a phase\n         * 3. Deserialize Phase\n         * 4. Retry Phase\n         * 5. Sign Phase\n         *\n         * Within each phase, policies are executed in the order\n         * they were added unless they were specified to execute\n         * before/after other policies or after a particular phase.\n         *\n         * To determine the final order, we will walk the policy list\n         * in phase order multiple times until all dependencies are\n         * satisfied.\n         *\n         * `afterPolicies` are the set of policies that must be\n         * executed before a given policy. This requirement is\n         * considered satisfied when each of the listed policies\n         * have been scheduled.\n         *\n         * `beforePolicies` are the set of policies that must be\n         * executed after a given policy. Since this dependency\n         * can be expressed by converting it into a equivalent\n         * `afterPolicies` declarations, they are normalized\n         * into that form for simplicity.\n         *\n         * An `afterPhase` dependency is considered satisfied when all\n         * policies in that phase have scheduled.\n         *\n         */\n        const result = [];\n        // Track all policies we know about.\n        const policyMap = new Map();\n        function createPhase(name) {\n            return {\n                name,\n                policies: new Set(),\n                hasRun: false,\n            };\n        }\n        // Track policies for each phase.\n        const serializePhase = createPhase(\"Serialize\");\n        const noPhase = createPhase(\"None\");\n        const deserializePhase = createPhase(\"Deserialize\");\n        const retryPhase = createPhase(\"Retry\");\n        const signPhase = createPhase(\"Sign\");\n        // a list of phases in order\n        const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n        // Small helper function to map phase name to each Phase\n        function getPhase(phase) {\n            if (phase === \"Retry\") {\n                return retryPhase;\n            }\n            else if (phase === \"Serialize\") {\n                return serializePhase;\n            }\n            else if (phase === \"Deserialize\") {\n                return deserializePhase;\n            }\n            else if (phase === \"Sign\") {\n                return signPhase;\n            }\n            else {\n                return noPhase;\n            }\n        }\n        // First walk each policy and create a node to track metadata.\n        for (const descriptor of this._policies) {\n            const policy = descriptor.policy;\n            const options = descriptor.options;\n            const policyName = policy.name;\n            if (policyMap.has(policyName)) {\n                throw new Error(\"Duplicate policy names not allowed in pipeline\");\n            }\n            const node = {\n                policy,\n                dependsOn: new Set(),\n                dependants: new Set(),\n            };\n            if (options.afterPhase) {\n                node.afterPhase = getPhase(options.afterPhase);\n            }\n            policyMap.set(policyName, node);\n            const phase = getPhase(options.phase);\n            phase.policies.add(node);\n        }\n        // Now that each policy has a node, connect dependency references.\n        for (const descriptor of this._policies) {\n            const { policy, options } = descriptor;\n            const policyName = policy.name;\n            const node = policyMap.get(policyName);\n            if (!node) {\n                throw new Error(`Missing node for policy ${policyName}`);\n            }\n            if (options.afterPolicies) {\n                for (const afterPolicyName of options.afterPolicies) {\n                    const afterNode = policyMap.get(afterPolicyName);\n                    if (afterNode) {\n                        // Linking in both directions helps later\n                        // when we want to notify dependants.\n                        node.dependsOn.add(afterNode);\n                        afterNode.dependants.add(node);\n                    }\n                }\n            }\n            if (options.beforePolicies) {\n                for (const beforePolicyName of options.beforePolicies) {\n                    const beforeNode = policyMap.get(beforePolicyName);\n                    if (beforeNode) {\n                        // To execute before another node, make it\n                        // depend on the current node.\n                        beforeNode.dependsOn.add(node);\n                        node.dependants.add(beforeNode);\n                    }\n                }\n            }\n        }\n        function walkPhase(phase) {\n            phase.hasRun = true;\n            // Sets iterate in insertion order\n            for (const node of phase.policies) {\n                if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n                    // If this node is waiting on a phase to complete,\n                    // we need to skip it for now.\n                    // Even if the phase is empty, we should wait for it\n                    // to be walked to avoid re-ordering policies.\n                    continue;\n                }\n                if (node.dependsOn.size === 0) {\n                    // If there's nothing else we're waiting for, we can\n                    // add this policy to the result list.\n                    result.push(node.policy);\n                    // Notify anything that depends on this policy that\n                    // the policy has been scheduled.\n                    for (const dependant of node.dependants) {\n                        dependant.dependsOn.delete(node);\n                    }\n                    policyMap.delete(node.policy.name);\n                    phase.policies.delete(node);\n                }\n            }\n        }\n        function walkPhases() {\n            for (const phase of orderedPhases) {\n                walkPhase(phase);\n                // if the phase isn't complete\n                if (phase.policies.size > 0 && phase !== noPhase) {\n                    if (!noPhase.hasRun) {\n                        // Try running noPhase to see if that unblocks this phase next tick.\n                        // This can happen if a phase that happens before noPhase\n                        // is waiting on a noPhase policy to complete.\n                        walkPhase(noPhase);\n                    }\n                    // Don't proceed to the next phase until this phase finishes.\n                    return;\n                }\n            }\n        }\n        // Iterate until we've put every node in the result list.\n        let iteration = 0;\n        while (policyMap.size > 0) {\n            iteration++;\n            const initialResultLength = result.length;\n            // Keep walking each phase in order until we can order every node.\n            walkPhases();\n            // The result list *should* get at least one larger each time\n            // after the first full pass.\n            // Otherwise, we're going to loop forever.\n            if (result.length <= initialResultLength && iteration > 1) {\n                throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n            }\n        }\n        return result;\n    }\n}\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nfunction createEmptyPipeline() {\n    return HttpPipeline.create();\n}\n//# sourceMappingURL=pipeline.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/pipeline.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/pipelineRequest.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/pipelineRequest.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPipelineRequest\": () => (/* binding */ createPipelineRequest)\n/* harmony export */ });\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httpHeaders */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/httpHeaders.js\");\n/* harmony import */ var _util_uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/uuid */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/uuid.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nclass PipelineRequestImpl {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.url = options.url;\n        this.body = options.body;\n        this.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : (0,_httpHeaders__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)();\n        this.method = (_b = options.method) !== null && _b !== void 0 ? _b : \"GET\";\n        this.timeout = (_c = options.timeout) !== null && _c !== void 0 ? _c : 0;\n        this.formData = options.formData;\n        this.disableKeepAlive = (_d = options.disableKeepAlive) !== null && _d !== void 0 ? _d : false;\n        this.proxySettings = options.proxySettings;\n        this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n        this.withCredentials = (_e = options.withCredentials) !== null && _e !== void 0 ? _e : false;\n        this.abortSignal = options.abortSignal;\n        this.tracingOptions = options.tracingOptions;\n        this.onUploadProgress = options.onUploadProgress;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.requestId = options.requestId || (0,_util_uuid__WEBPACK_IMPORTED_MODULE_1__.generateUuid)();\n        this.allowInsecureConnection = (_f = options.allowInsecureConnection) !== null && _f !== void 0 ? _f : false;\n        this.enableBrowserStreams = (_g = options.enableBrowserStreams) !== null && _g !== void 0 ? _g : false;\n    }\n}\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nfunction createPipelineRequest(options) {\n    return new PipelineRequestImpl(options);\n}\n//# sourceMappingURL=pipelineRequest.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/pipelineRequest.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bearerTokenAuthenticationPolicyName\": () => (/* binding */ bearerTokenAuthenticationPolicyName),\n/* harmony export */   \"bearerTokenAuthenticationPolicy\": () => (/* binding */ bearerTokenAuthenticationPolicy)\n/* harmony export */ });\n/* harmony import */ var _util_tokenCycler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/tokenCycler */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/tokenCycler.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nconst bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options) {\n    const { scopes, getAccessToken, request } = options;\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n    };\n    const accessToken = await getAccessToken(scopes, getTokenOptions);\n    if (accessToken) {\n        options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n    }\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response) {\n    const challenge = response.headers.get(\"WWW-Authenticate\");\n    if (response.status === 401 && challenge) {\n        return challenge;\n    }\n    return;\n}\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nfunction bearerTokenAuthenticationPolicy(options) {\n    var _a;\n    const { credential, scopes, challengeCallbacks, logger } = options;\n    const callbacks = Object.assign({ authorizeRequest: (_a = challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequest) !== null && _a !== void 0 ? _a : defaultAuthorizeRequest, authorizeRequestOnChallenge: challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequestOnChallenge }, challengeCallbacks);\n    // This function encapsulates the entire process of reliably retrieving the token\n    // The options are left out of the public API until there's demand to configure this.\n    // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n    // in order to pass through the `options` object.\n    const getAccessToken = credential\n        ? (0,_util_tokenCycler__WEBPACK_IMPORTED_MODULE_0__.createTokenCycler)(credential /* , options */)\n        : () => Promise.resolve(null);\n    return {\n        name: bearerTokenAuthenticationPolicyName,\n        /**\n         * If there's no challenge parameter:\n         * - It will try to retrieve the token using the cache, or the credential's getToken.\n         * - Then it will try the next policy with or without the retrieved token.\n         *\n         * It uses the challenge parameters to:\n         * - Skip a first attempt to get the token from the credential if there's no cached token,\n         *   since it expects the token to be retrievable only after the challenge.\n         * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n         * - Send an initial request to receive the challenge if it fails.\n         * - Process a challenge if the response contains it.\n         * - Retrieve a token with the challenge information, then re-send the request.\n         */\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            await callbacks.authorizeRequest({\n                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                request,\n                getAccessToken,\n                logger,\n            });\n            let response;\n            let error;\n            try {\n                response = await next(request);\n            }\n            catch (err) {\n                error = err;\n                response = err.response;\n            }\n            if (callbacks.authorizeRequestOnChallenge &&\n                (response === null || response === void 0 ? void 0 : response.status) === 401 &&\n                getChallenge(response)) {\n                // processes challenge\n                const shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n                    scopes: Array.isArray(scopes) ? scopes : [scopes],\n                    request,\n                    response,\n                    getAccessToken,\n                    logger,\n                });\n                if (shouldSendRequest) {\n                    return next(request);\n                }\n            }\n            if (error) {\n                throw error;\n            }\n            else {\n                return response;\n            }\n        },\n    };\n}\n//# sourceMappingURL=bearerTokenAuthenticationPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/decompressResponsePolicy.browser.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/decompressResponsePolicy.browser.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decompressResponsePolicyName\": () => (/* binding */ decompressResponsePolicyName),\n/* harmony export */   \"decompressResponsePolicy\": () => (/* binding */ decompressResponsePolicy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nconst NotSupported = new Error(\"decompressResponsePolicy is not supported in browser environment\");\nconst decompressResponsePolicyName = \"decompressResponsePolicy\";\n/**\n * decompressResponsePolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nfunction decompressResponsePolicy() {\n    throw NotSupported;\n}\n//# sourceMappingURL=decompressResponsePolicy.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/decompressResponsePolicy.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/defaultRetryPolicy.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/defaultRetryPolicy.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaultRetryPolicyName\": () => (/* binding */ defaultRetryPolicyName),\n/* harmony export */   \"defaultRetryPolicy\": () => (/* binding */ defaultRetryPolicy)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_exponentialRetryStrategy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/retryStrategies/exponentialRetryStrategy.js\");\n/* harmony import */ var _retryStrategies_throttlingRetryStrategy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../retryStrategies/throttlingRetryStrategy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/retryStrategies/throttlingRetryStrategy.js\");\n/* harmony import */ var _retryPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./retryPolicy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/retryPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst DEFAULT_RETRY_POLICY_COUNT = 10;\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nconst defaultRetryPolicyName = \"defaultRetryPolicy\";\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nfunction defaultRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: defaultRetryPolicyName,\n        sendRequest: (0,_retryPolicy__WEBPACK_IMPORTED_MODULE_0__.retryPolicy)([(0,_retryStrategies_throttlingRetryStrategy__WEBPACK_IMPORTED_MODULE_1__.throttlingRetryStrategy)(), (0,_retryStrategies_exponentialRetryStrategy__WEBPACK_IMPORTED_MODULE_2__.exponentialRetryStrategy)(options)], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/defaultRetryPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/formDataPolicy.browser.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/formDataPolicy.browser.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"formDataPolicyName\": () => (/* binding */ formDataPolicyName),\n/* harmony export */   \"formDataPolicy\": () => (/* binding */ formDataPolicy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nconst formDataPolicyName = \"formDataPolicy\";\n/**\n * A policy that encodes FormData on the request into the body.\n */\nfunction formDataPolicy() {\n    return {\n        name: formDataPolicyName,\n        async sendRequest(request, next) {\n            if (request.formData) {\n                const formData = request.formData;\n                const requestForm = new FormData();\n                for (const formKey of Object.keys(formData)) {\n                    const formValue = formData[formKey];\n                    if (Array.isArray(formValue)) {\n                        for (const subValue of formValue) {\n                            requestForm.append(formKey, subValue);\n                        }\n                    }\n                    else {\n                        requestForm.append(formKey, formValue);\n                    }\n                }\n                request.body = requestForm;\n                request.formData = undefined;\n                const contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                    request.body = new URLSearchParams(requestForm).toString();\n                }\n                else if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                    // browser will automatically apply a suitable content-type header\n                    request.headers.delete(\"Content-Type\");\n                }\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=formDataPolicy.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/formDataPolicy.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/logPolicy.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/logPolicy.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logPolicyName\": () => (/* binding */ logPolicyName),\n/* harmony export */   \"logPolicy\": () => (/* binding */ logPolicy)\n/* harmony export */ });\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/log.js\");\n/* harmony import */ var _util_sanitizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/sanitizer */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nconst logPolicyName = \"logPolicy\";\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nfunction logPolicy(options = {}) {\n    var _a;\n    const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : _log__WEBPACK_IMPORTED_MODULE_0__.logger.info;\n    const sanitizer = new _util_sanitizer__WEBPACK_IMPORTED_MODULE_1__.Sanitizer({\n        additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    return {\n        name: logPolicyName,\n        async sendRequest(request, next) {\n            if (!logger.enabled) {\n                return next(request);\n            }\n            logger(`Request: ${sanitizer.sanitize(request)}`);\n            const response = await next(request);\n            logger(`Response status code: ${response.status}`);\n            logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n            return response;\n        },\n    };\n}\n//# sourceMappingURL=logPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/logPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/proxyPolicy.browser.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/proxyPolicy.browser.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"proxyPolicyName\": () => (/* binding */ proxyPolicyName),\n/* harmony export */   \"getDefaultProxySettings\": () => (/* binding */ getDefaultProxySettings),\n/* harmony export */   \"proxyPolicy\": () => (/* binding */ proxyPolicy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nconst NotSupported = new Error(\"proxyPolicy is not supported in browser environment\");\nconst proxyPolicyName = \"proxyPolicy\";\nfunction getDefaultProxySettings() {\n    throw NotSupported;\n}\n/**\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nfunction proxyPolicy() {\n    throw NotSupported;\n}\n//# sourceMappingURL=proxyPolicy.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/proxyPolicy.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/redirectPolicy.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/redirectPolicy.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"redirectPolicyName\": () => (/* binding */ redirectPolicyName),\n/* harmony export */   \"redirectPolicy\": () => (/* binding */ redirectPolicy)\n/* harmony export */ });\n/* harmony import */ var _util_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/url */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/url.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nconst redirectPolicyName = \"redirectPolicy\";\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * @param options - Options to control policy behavior.\n */\nfunction redirectPolicy(options = {}) {\n    const { maxRetries = 20 } = options;\n    return {\n        name: redirectPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return handleRedirect(next, response, maxRetries);\n        },\n    };\n}\nasync function handleRedirect(next, response, maxRetries, currentRetries = 0) {\n    const { request, status, headers } = response;\n    const locationHeader = headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        currentRetries < maxRetries) {\n        const url = new _util_url__WEBPACK_IMPORTED_MODULE_0__.URL(locationHeader, request.url);\n        request.url = url.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            request.headers.delete(\"Content-Length\");\n            delete request.body;\n        }\n        const res = await next(request);\n        return handleRedirect(next, res, maxRetries, currentRetries + 1);\n    }\n    return response;\n}\n//# sourceMappingURL=redirectPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/redirectPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/retryPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/retryPolicy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"retryPolicy\": () => (/* binding */ retryPolicy)\n/* harmony export */ });\n/* harmony import */ var _util_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/helpers */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/helpers.js\");\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"./node_modules/@azure/logger/dist-esm/src/index.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/abort-controller */ \"./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst retryPolicyLogger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-rest-pipeline retryPolicy\");\nconst DEFAULT_MAX_RETRIES = 10;\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nfunction retryPolicy(strategies, options = { maxRetries: DEFAULT_MAX_RETRIES }) {\n    const logger = options.logger || retryPolicyLogger;\n    return {\n        name: retryPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            let response;\n            let responseError;\n            let retryCount = -1;\n            // eslint-disable-next-line no-constant-condition\n            retryRequest: while (true) {\n                retryCount += 1;\n                response = undefined;\n                responseError = undefined;\n                try {\n                    logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n                    response = await next(request);\n                    logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n                }\n                catch (e) {\n                    logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n                    responseError = e;\n                    if (!e || responseError.name !== \"RestError\") {\n                        throw e;\n                    }\n                    response = responseError.response;\n                }\n                if ((_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    logger.error(`Retry ${retryCount}: Request aborted.`);\n                    const abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_1__.AbortError();\n                    throw abortError;\n                }\n                if (retryCount >= ((_b = options.maxRetries) !== null && _b !== void 0 ? _b : DEFAULT_MAX_RETRIES)) {\n                    logger.info(`Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`);\n                    if (response !== undefined) {\n                        return response;\n                    }\n                    throw responseError;\n                }\n                logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n                strategiesLoop: for (const strategy of strategies) {\n                    const strategyLogger = strategy.logger || retryPolicyLogger;\n                    strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n                    const modifiers = strategy.retry({\n                        retryCount,\n                        response,\n                        responseError,\n                    });\n                    if (modifiers.skipStrategy) {\n                        strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n                        continue strategiesLoop;\n                    }\n                    const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n                    if (errorToThrow) {\n                        strategyLogger.error(`Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`, errorToThrow);\n                        throw errorToThrow;\n                    }\n                    if (retryAfterInMs) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`);\n                        await (0,_util_helpers__WEBPACK_IMPORTED_MODULE_2__.delay)(retryAfterInMs);\n                        continue retryRequest;\n                    }\n                    if (redirectTo) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`);\n                        request.url = redirectTo;\n                        continue retryRequest;\n                    }\n                }\n                if (response) {\n                    logger.info(`Returning the last received response.`);\n                    return response;\n                }\n                // If all the retries skip and there's no response,\n                // we're still in the retry loop, so a new request will be sent\n                // until `maxRetries` is reached.\n            }\n        },\n    };\n}\n//# sourceMappingURL=retryPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/retryPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/setClientRequestIdPolicy.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/setClientRequestIdPolicy.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setClientRequestIdPolicyName\": () => (/* binding */ setClientRequestIdPolicyName),\n/* harmony export */   \"setClientRequestIdPolicy\": () => (/* binding */ setClientRequestIdPolicy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nconst setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nfunction setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        name: setClientRequestIdPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(requestIdHeaderName)) {\n                request.headers.set(requestIdHeaderName, request.requestId);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=setClientRequestIdPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/setClientRequestIdPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/tracingPolicy.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/tracingPolicy.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tracingPolicyName\": () => (/* binding */ tracingPolicyName),\n/* harmony export */   \"tracingPolicy\": () => (/* binding */ tracingPolicy)\n/* harmony export */ });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js\");\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js\");\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/core-tracing */ \"./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js\");\n/* harmony import */ var _util_userAgent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/userAgent */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/userAgent.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../log */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\nconst createSpan = (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createSpanFunction)({\n    packagePrefix: \"\",\n    namespace: \"\",\n});\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nconst tracingPolicyName = \"tracingPolicy\";\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nfunction tracingPolicy(options = {}) {\n    const userAgent = (0,_util_userAgent__WEBPACK_IMPORTED_MODULE_1__.getUserAgentValue)(options.userAgentPrefix);\n    return {\n        name: tracingPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!((_a = request.tracingOptions) === null || _a === void 0 ? void 0 : _a.tracingContext)) {\n                return next(request);\n            }\n            const span = tryCreateSpan(request, userAgent);\n            if (!span) {\n                return next(request);\n            }\n            try {\n                const response = await next(request);\n                tryProcessResponse(span, response);\n                return response;\n            }\n            catch (err) {\n                tryProcessError(span, err);\n                throw err;\n            }\n        },\n    };\n}\nfunction tryCreateSpan(request, userAgent) {\n    var _a, _b, _c;\n    try {\n        const createSpanOptions = Object.assign(Object.assign({}, (_a = request.tracingOptions) === null || _a === void 0 ? void 0 : _a.spanOptions), { kind: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__.SpanKind.CLIENT });\n        // Passing spanOptions as part of tracingOptions to maintain compatibility @azure/core-tracing@preview.13 and earlier.\n        // We can pass this as a separate parameter once we upgrade to the latest core-tracing.\n        // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n        const { span } = createSpan(`HTTP ${request.method}`, {\n            tracingOptions: Object.assign(Object.assign({}, request.tracingOptions), { spanOptions: createSpanOptions }),\n        });\n        // If the span is not recording, don't do any more work.\n        if (!span.isRecording()) {\n            span.end();\n            return undefined;\n        }\n        const namespaceFromContext = (_c = (_b = request.tracingOptions) === null || _b === void 0 ? void 0 : _b.tracingContext) === null || _c === void 0 ? void 0 : _c.getValue(Symbol.for(\"az.namespace\"));\n        if (typeof namespaceFromContext === \"string\") {\n            span.setAttribute(\"az.namespace\", namespaceFromContext);\n        }\n        span.setAttributes({\n            \"http.method\": request.method,\n            \"http.url\": request.url,\n            requestId: request.requestId,\n        });\n        if (userAgent) {\n            span.setAttribute(\"http.user_agent\", userAgent);\n        }\n        // set headers\n        const spanContext = span.spanContext();\n        const traceParentHeader = (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_3__.getTraceParentHeader)(spanContext);\n        if (traceParentHeader && (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__.isSpanContextValid)(spanContext)) {\n            request.headers.set(\"traceparent\", traceParentHeader);\n            const traceState = spanContext.traceState && spanContext.traceState.serialize();\n            // if tracestate is set, traceparent MUST be set, so only set tracestate after traceparent\n            if (traceState) {\n                request.headers.set(\"tracestate\", traceState);\n            }\n        }\n        return span;\n    }\n    catch (error) {\n        _log__WEBPACK_IMPORTED_MODULE_4__.logger.warning(`Skipping creating a tracing span due to an error: ${error.message}`);\n        return undefined;\n    }\n}\nfunction tryProcessError(span, err) {\n    try {\n        span.setStatus({\n            code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__.SpanStatusCode.ERROR,\n            message: err.message,\n        });\n        if (err.statusCode) {\n            span.setAttribute(\"http.status_code\", err.statusCode);\n        }\n        span.end();\n    }\n    catch (error) {\n        _log__WEBPACK_IMPORTED_MODULE_4__.logger.warning(`Skipping tracing span processing due to an error: ${error.message}`);\n    }\n}\nfunction tryProcessResponse(span, response) {\n    try {\n        span.setAttribute(\"http.status_code\", response.status);\n        const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n        if (serviceRequestId) {\n            span.setAttribute(\"serviceRequestId\", serviceRequestId);\n        }\n        span.setStatus({\n            code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__.SpanStatusCode.OK,\n        });\n        span.end();\n    }\n    catch (error) {\n        _log__WEBPACK_IMPORTED_MODULE_4__.logger.warning(`Skipping tracing span processing due to an error: ${error.message}`);\n    }\n}\n//# sourceMappingURL=tracingPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/tracingPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/userAgentPolicy.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/userAgentPolicy.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"userAgentPolicyName\": () => (/* binding */ userAgentPolicyName),\n/* harmony export */   \"userAgentPolicy\": () => (/* binding */ userAgentPolicy)\n/* harmony export */ });\n/* harmony import */ var _util_userAgent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/userAgent */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/userAgent.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst UserAgentHeaderName = (0,_util_userAgent__WEBPACK_IMPORTED_MODULE_0__.getUserAgentHeaderName)();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nconst userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nfunction userAgentPolicy(options = {}) {\n    const userAgentValue = (0,_util_userAgent__WEBPACK_IMPORTED_MODULE_0__.getUserAgentValue)(options.userAgentPrefix);\n    return {\n        name: userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=userAgentPolicy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/userAgentPolicy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/restError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/restError.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RestError\": () => (/* binding */ RestError)\n/* harmony export */ });\n/* harmony import */ var _util_inspect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/inspect */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/inspect.browser.js\");\n/* harmony import */ var _util_sanitizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/sanitizer */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst errorSanitizer = new _util_sanitizer__WEBPACK_IMPORTED_MODULE_0__.Sanitizer();\n/**\n * A custom error type for failed pipeline requests.\n */\nclass RestError extends Error {\n    constructor(message, options = {}) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = options.code;\n        this.statusCode = options.statusCode;\n        this.request = options.request;\n        this.response = options.response;\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n    /**\n     * Logging method for util.inspect in Node\n     */\n    [_util_inspect__WEBPACK_IMPORTED_MODULE_1__.custom]() {\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n    }\n}\n/**\n * Something went wrong when making the request.\n * This means the actual request failed for some reason,\n * such as a DNS issue or the connection being lost.\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * This means that parsing the response from the server failed.\n * It may have been malformed.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n//# sourceMappingURL=restError.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/restError.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/retryStrategies/exponentialRetryStrategy.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/retryStrategies/exponentialRetryStrategy.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exponentialRetryStrategy\": () => (/* binding */ exponentialRetryStrategy),\n/* harmony export */   \"isExponentialRetryResponse\": () => (/* binding */ isExponentialRetryResponse),\n/* harmony export */   \"isSystemError\": () => (/* binding */ isSystemError)\n/* harmony export */ });\n/* harmony import */ var _util_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/helpers */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/helpers.js\");\n/* harmony import */ var _throttlingRetryStrategy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./throttlingRetryStrategy */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/retryStrategies/throttlingRetryStrategy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nfunction exponentialRetryStrategy(options = {}) {\n    var _a, _b;\n    const retryInterval = (_a = options.retryDelayInMs) !== null && _a !== void 0 ? _a : DEFAULT_CLIENT_RETRY_INTERVAL;\n    const maxRetryInterval = (_b = options.maxRetryDelayInMs) !== null && _b !== void 0 ? _b : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    let retryAfterInMs = retryInterval;\n    return {\n        name: \"exponentialRetryStrategy\",\n        retry({ retryCount, response, responseError }) {\n            const matchedSystemError = isSystemError(responseError);\n            const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n            const isExponential = isExponentialRetryResponse(response);\n            const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n            const unknownResponse = response && ((0,_throttlingRetryStrategy__WEBPACK_IMPORTED_MODULE_0__.isThrottlingRetryResponse)(response) || !isExponential);\n            if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n                return { skipStrategy: true };\n            }\n            if (responseError && !matchedSystemError) {\n                return { errorToThrow: responseError };\n            }\n            // Exponentially increase the delay each time\n            const exponentialDelay = retryAfterInMs * Math.pow(2, retryCount);\n            // Don't let the delay exceed the maximum\n            const clampedExponentialDelay = Math.min(maxRetryInterval, exponentialDelay);\n            // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n            // that retries across multiple clients don't occur simultaneously.\n            retryAfterInMs =\n                clampedExponentialDelay / 2 + (0,_util_helpers__WEBPACK_IMPORTED_MODULE_1__.getRandomIntegerInclusive)(0, clampedExponentialDelay / 2);\n            return { retryAfterInMs };\n        },\n    };\n}\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nfunction isExponentialRetryResponse(response) {\n    return Boolean(response &&\n        response.status !== undefined &&\n        (response.status >= 500 || response.status === 408) &&\n        response.status !== 501 &&\n        response.status !== 505);\n}\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nfunction isSystemError(err) {\n    if (!err) {\n        return false;\n    }\n    return (err.code === \"ETIMEDOUT\" ||\n        err.code === \"ESOCKETTIMEDOUT\" ||\n        err.code === \"ECONNREFUSED\" ||\n        err.code === \"ECONNRESET\" ||\n        err.code === \"ENOENT\");\n}\n//# sourceMappingURL=exponentialRetryStrategy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/retryStrategies/exponentialRetryStrategy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/retryStrategies/throttlingRetryStrategy.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/retryStrategies/throttlingRetryStrategy.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isThrottlingRetryResponse\": () => (/* binding */ isThrottlingRetryResponse),\n/* harmony export */   \"throttlingRetryStrategy\": () => (/* binding */ throttlingRetryStrategy)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Returns the number of milliseconds to wait based on a Retry-After header value.\n * Returns undefined if there is no valid value.\n * @param headerValue - An HTTP Retry-After header value.\n */\nfunction parseRetryAfterHeader(headerValue) {\n    try {\n        const retryAfterInSeconds = Number(headerValue);\n        if (!Number.isNaN(retryAfterInSeconds)) {\n            return retryAfterInSeconds * 1000;\n        }\n        else {\n            // It might be formatted as a date instead of a number of seconds\n            const now = Date.now();\n            const date = Date.parse(headerValue);\n            const diff = date - now;\n            return Number.isNaN(diff) ? undefined : diff;\n        }\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as the Retry-After header has a valid value.\n */\nfunction isThrottlingRetryResponse(response) {\n    return Boolean(response &&\n        (response.status === 429 || response.status === 503) &&\n        response.headers.get(\"Retry-After\") &&\n        parseRetryAfterHeader(response.headers.get(\"Retry-After\")));\n}\nfunction throttlingRetryStrategy() {\n    return {\n        name: \"throttlingRetryStrategy\",\n        retry({ response }) {\n            if (!isThrottlingRetryResponse(response)) {\n                return { skipStrategy: true };\n            }\n            return {\n                retryAfterInMs: parseRetryAfterHeader(response.headers.get(\"Retry-After\")),\n            };\n        },\n    };\n}\n//# sourceMappingURL=throttlingRetryStrategy.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/retryStrategies/throttlingRetryStrategy.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/helpers.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/helpers.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNode\": () => (/* binding */ isNode),\n/* harmony export */   \"delay\": () => (/* binding */ delay),\n/* harmony export */   \"getRandomIntegerInclusive\": () => (/* binding */ getRandomIntegerInclusive),\n/* harmony export */   \"isObject\": () => (/* binding */ isObject)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar _a;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n * @internal\n */\nconst isNode = typeof process !== \"undefined\" && Boolean(process.version) && Boolean((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @internal\n * @param t - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @returns Resolved promise\n */\nfunction delay(t, value) {\n    return new Promise((resolve) => setTimeout(() => resolve(value), t));\n}\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n * @internal\n */\nfunction getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n/**\n * @internal\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nfunction isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=helpers.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/helpers.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/inspect.browser.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/inspect.browser.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"custom\": () => (/* binding */ custom)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst custom = {};\n//# sourceMappingURL=inspect.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/inspect.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/sanitizer.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/sanitizer.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Sanitizer\": () => (/* binding */ Sanitizer)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/helpers.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./url */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/url.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst RedactedString = \"REDACTED\";\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\n/**\n * @internal\n */\nclass Sanitizer {\n    constructor({ additionalAllowedHeaderNames: allowedHeaderNames = [], additionalAllowedQueryParameters: allowedQueryParameters = [], } = {}) {\n        allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n        allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"headers\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.isObject)(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    sanitizeHeaders(obj) {\n        const sanitized = {};\n        for (const key of Object.keys(obj)) {\n            if (this.allowedHeaderNames.has(key.toLowerCase())) {\n                sanitized[key] = obj[key];\n            }\n            else {\n                sanitized[key] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeQuery(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (this.allowedQueryParameters.has(k.toLowerCase())) {\n                sanitized[k] = value[k];\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null) {\n            return value;\n        }\n        const url = new _url__WEBPACK_IMPORTED_MODULE_1__.URL(value);\n        if (!url.search) {\n            return value;\n        }\n        for (const [key] of url.searchParams) {\n            if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n                url.searchParams.set(key, RedactedString);\n            }\n        }\n        return url.toString();\n    }\n}\n//# sourceMappingURL=sanitizer.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/sanitizer.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/tokenCycler.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/tokenCycler.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_CYCLER_OPTIONS\": () => (/* binding */ DEFAULT_CYCLER_OPTIONS),\n/* harmony export */   \"createTokenCycler\": () => (/* binding */ createTokenCycler)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/helpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// Default options for the cycler if none are provided\nconst DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000,\n    retryIntervalInMs: 3000,\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, refreshTimeout) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < refreshTimeout) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.delay)(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(credential, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            return (!cycler.isRefreshing &&\n                ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now());\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(scopes, getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (scopes, tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        if (cycler.mustRefresh)\n            return refresh(scopes, tokenOptions);\n        if (cycler.shouldRefresh) {\n            refresh(scopes, tokenOptions);\n        }\n        return token;\n    };\n}\n//# sourceMappingURL=tokenCycler.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/tokenCycler.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/url.browser.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/url.browser.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"URL\": () => (/* binding */ url),\n/* harmony export */   \"URLSearchParams\": () => (/* binding */ urlSearchParams)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst url = URL;\nconst urlSearchParams = URLSearchParams;\n\n//# sourceMappingURL=url.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/url.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/userAgent.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/userAgent.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUserAgentHeaderName\": () => (/* binding */ getUserAgentHeaderName),\n/* harmony export */   \"getUserAgentValue\": () => (/* binding */ getUserAgentValue)\n/* harmony export */ });\n/* harmony import */ var _userAgentPlatform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userAgentPlatform */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/userAgentPlatform.browser.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nfunction getUserAgentHeaderName() {\n    return (0,_userAgentPlatform__WEBPACK_IMPORTED_MODULE_0__.getHeaderName)();\n}\n/**\n * @internal\n */\nfunction getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"core-rest-pipeline\", _constants__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION);\n    (0,_userAgentPlatform__WEBPACK_IMPORTED_MODULE_0__.setPlatformSpecificData)(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n//# sourceMappingURL=userAgent.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/userAgent.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/userAgentPlatform.browser.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/userAgentPlatform.browser.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getHeaderName\": () => (/* binding */ getHeaderName),\n/* harmony export */   \"setPlatformSpecificData\": () => (/* binding */ setPlatformSpecificData)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json.\n */\n/**\n * @internal\n */\nfunction getHeaderName() {\n    return \"x-ms-useragent\";\n}\n/**\n * @internal\n */\nfunction setPlatformSpecificData(map) {\n    const navigator = self.navigator;\n    map.set(\"OS\", (navigator.oscpu || navigator.platform).replace(\" \", \"\"));\n}\n//# sourceMappingURL=userAgentPlatform.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/userAgentPlatform.browser.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/uuid.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/uuid.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateUuid\": () => (/* binding */ generateUuid)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n * @internal\n */\nfunction generateUuid() {\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n}\n//# sourceMappingURL=uuid.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/util/uuid.js?");

/***/ }),

/***/ "./node_modules/@azure/core-rest-pipeline/dist-esm/src/xhrHttpClient.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist-esm/src/xhrHttpClient.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createXhrHttpClient\": () => (/* binding */ createXhrHttpClient)\n/* harmony export */ });\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js\");\n/* harmony import */ var _restError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./restError */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/restError.js\");\n/* harmony import */ var _httpHeaders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./httpHeaders */ \"./node_modules/@azure/core-rest-pipeline/dist-esm/src/httpHeaders.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nfunction isReadableStream(body) {\n    return body && typeof body.pipe === \"function\";\n}\n/**\n * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.\n * @internal\n */\nclass XhrHttpClient {\n    /**\n     * Makes a request over an underlying transport layer and returns the response.\n     * @param request - The request to be made.\n     */\n    async sendRequest(request) {\n        var _a;\n        const url = new URL(request.url);\n        const isInsecure = url.protocol !== \"https:\";\n        if (isInsecure && !request.allowInsecureConnection) {\n            throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n        }\n        const xhr = new XMLHttpRequest();\n        if (request.proxySettings) {\n            throw new Error(\"HTTP proxy is not supported in browser environment\");\n        }\n        const abortSignal = request.abortSignal;\n        if (abortSignal) {\n            if (abortSignal.aborted) {\n                throw new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError(\"The operation was aborted.\");\n            }\n            const listener = () => {\n                xhr.abort();\n            };\n            abortSignal.addEventListener(\"abort\", listener);\n            xhr.addEventListener(\"readystatechange\", () => {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    abortSignal.removeEventListener(\"abort\", listener);\n                }\n            });\n        }\n        addProgressListener(xhr.upload, request.onUploadProgress);\n        addProgressListener(xhr, request.onDownloadProgress);\n        xhr.open(request.method, request.url);\n        xhr.timeout = request.timeout;\n        xhr.withCredentials = request.withCredentials;\n        for (const [name, value] of request.headers) {\n            xhr.setRequestHeader(name, value);\n        }\n        xhr.responseType = ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.size) ? \"blob\" : \"text\";\n        if (isReadableStream(request.body)) {\n            throw new Error(\"Node streams are not supported in browser environment.\");\n        }\n        xhr.send(request.body === undefined ? null : request.body);\n        if (xhr.responseType === \"blob\") {\n            return new Promise((resolve, reject) => {\n                handleBlobResponse(xhr, request, resolve, reject);\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n        else {\n            return new Promise(function (resolve, reject) {\n                xhr.addEventListener(\"load\", () => resolve({\n                    request,\n                    status: xhr.status,\n                    headers: parseHeaders(xhr),\n                    bodyAsText: xhr.responseText,\n                }));\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n    }\n}\nfunction handleBlobResponse(xhr, request, res, rej) {\n    xhr.addEventListener(\"readystatechange\", () => {\n        var _a, _b;\n        // Resolve as soon as headers are loaded\n        if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n            if (\n            // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n            ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(Number.POSITIVE_INFINITY)) ||\n                ((_b = request.streamResponseStatusCodes) === null || _b === void 0 ? void 0 : _b.has(xhr.status))) {\n                const blobBody = new Promise((resolve, reject) => {\n                    xhr.addEventListener(\"load\", () => {\n                        resolve(xhr.response);\n                    });\n                    rejectOnTerminalEvent(request, xhr, reject);\n                });\n                res({\n                    request,\n                    status: xhr.status,\n                    headers: parseHeaders(xhr),\n                    blobBody,\n                });\n            }\n            else {\n                xhr.addEventListener(\"load\", () => {\n                    // xhr.response is of Blob type if the request is sent with xhr.responseType === \"blob\"\n                    // but the status code is not one of the stream response status codes,\n                    // so treat it as text and convert from Blob to text\n                    if (xhr.response) {\n                        xhr.response\n                            .text()\n                            .then((text) => {\n                            res({\n                                request: request,\n                                status: xhr.status,\n                                headers: parseHeaders(xhr),\n                                bodyAsText: text,\n                            });\n                            return;\n                        })\n                            .catch((e) => {\n                            rej(e);\n                        });\n                    }\n                    else {\n                        res({\n                            request,\n                            status: xhr.status,\n                            headers: parseHeaders(xhr),\n                        });\n                    }\n                });\n            }\n        }\n    });\n}\nfunction addProgressListener(xhr, listener) {\n    if (listener) {\n        xhr.addEventListener(\"progress\", (rawEvent) => listener({\n            loadedBytes: rawEvent.loaded,\n        }));\n    }\n}\nfunction parseHeaders(xhr) {\n    const responseHeaders = (0,_httpHeaders__WEBPACK_IMPORTED_MODULE_1__.createHttpHeaders)();\n    const headerLines = xhr\n        .getAllResponseHeaders()\n        .trim()\n        .split(/[\\r\\n]+/);\n    for (const line of headerLines) {\n        const index = line.indexOf(\":\");\n        const headerName = line.slice(0, index);\n        const headerValue = line.slice(index + 2);\n        responseHeaders.set(headerName, headerValue);\n    }\n    return responseHeaders;\n}\nfunction rejectOnTerminalEvent(request, xhr, reject) {\n    xhr.addEventListener(\"error\", () => reject(new _restError__WEBPACK_IMPORTED_MODULE_2__.RestError(`Failed to send request to ${request.url}`, {\n        code: _restError__WEBPACK_IMPORTED_MODULE_2__.RestError.REQUEST_SEND_ERROR,\n        request,\n    })));\n    const abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError(\"The operation was aborted.\");\n    xhr.addEventListener(\"abort\", () => reject(abortError));\n    xhr.addEventListener(\"timeout\", () => reject(abortError));\n}\n/**\n * Create a new HttpClient instance for the browser environment.\n * @internal\n */\nfunction createXhrHttpClient() {\n    return new XhrHttpClient();\n}\n//# sourceMappingURL=xhrHttpClient.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-rest-pipeline/dist-esm/src/xhrHttpClient.js?");

/***/ }),

/***/ "./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isTracingDisabled\": () => (/* binding */ isTracingDisabled),\n/* harmony export */   \"createSpanFunction\": () => (/* binding */ createSpanFunction)\n/* harmony export */ });\n/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaces */ \"./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nfunction isTracingDisabled() {\n    var _a;\n    if (typeof process === \"undefined\") {\n        // not supported in browser for now without polyfills\n        return false;\n    }\n    const azureTracingDisabledValue = (_a = process.env.AZURE_TRACING_DISABLED) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    if (azureTracingDisabledValue === \"false\" || azureTracingDisabledValue === \"0\") {\n        return false;\n    }\n    return Boolean(azureTracingDisabledValue);\n}\n/**\n * Creates a function that can be used to create spans using the global tracer.\n *\n * Usage:\n *\n * ```typescript\n * // once\n * const createSpan = createSpanFunction({ packagePrefix: \"Azure.Data.AppConfiguration\", namespace: \"Microsoft.AppConfiguration\" });\n *\n * // in each operation\n * const span = createSpan(\"deleteConfigurationSetting\", operationOptions);\n *    // code...\n * span.end();\n * ```\n *\n * @hidden\n * @param args - allows configuration of the prefix for each span as well as the az.namespace field.\n */\nfunction createSpanFunction(args) {\n    return function (operationName, operationOptions) {\n        const tracer = (0,_interfaces__WEBPACK_IMPORTED_MODULE_1__.getTracer)();\n        const tracingOptions = (operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions) || {};\n        const spanOptions = Object.assign({ kind: _interfaces__WEBPACK_IMPORTED_MODULE_1__.SpanKind.INTERNAL }, tracingOptions.spanOptions);\n        const spanName = args.packagePrefix ? `${args.packagePrefix}.${operationName}` : operationName;\n        let span;\n        if (isTracingDisabled()) {\n            span = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.trace.wrapSpanContext(_opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.INVALID_SPAN_CONTEXT);\n        }\n        else {\n            span = tracer.startSpan(spanName, spanOptions, tracingOptions.tracingContext);\n        }\n        if (args.namespace) {\n            span.setAttribute(\"az.namespace\", args.namespace);\n        }\n        let newSpanOptions = tracingOptions.spanOptions || {};\n        if (span.isRecording() && args.namespace) {\n            newSpanOptions = Object.assign(Object.assign({}, tracingOptions.spanOptions), { attributes: Object.assign(Object.assign({}, spanOptions.attributes), { \"az.namespace\": args.namespace }) });\n        }\n        const newTracingOptions = Object.assign(Object.assign({}, tracingOptions), { spanOptions: newSpanOptions, tracingContext: (0,_interfaces__WEBPACK_IMPORTED_MODULE_1__.setSpan)(tracingOptions.tracingContext || _interfaces__WEBPACK_IMPORTED_MODULE_1__.context.active(), span) });\n        const newOperationOptions = Object.assign(Object.assign({}, operationOptions), { tracingOptions: newTracingOptions });\n        return {\n            span,\n            updatedOptions: newOperationOptions\n        };\n    };\n}\n//# sourceMappingURL=createSpan.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js?");

/***/ }),

/***/ "./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SpanKind\": () => (/* binding */ SpanKind),\n/* harmony export */   \"getSpan\": () => (/* binding */ getSpan),\n/* harmony export */   \"setSpan\": () => (/* binding */ setSpan),\n/* harmony export */   \"setSpanContext\": () => (/* binding */ setSpanContext),\n/* harmony export */   \"getSpanContext\": () => (/* binding */ getSpanContext),\n/* harmony export */   \"isSpanContextValid\": () => (/* binding */ isSpanContextValid),\n/* harmony export */   \"getTracer\": () => (/* binding */ getTracer),\n/* harmony export */   \"context\": () => (/* binding */ context),\n/* harmony export */   \"SpanStatusCode\": () => (/* binding */ SpanStatusCode)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The kind of span.\n */\nvar SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n/**\n * Return the span if one exists\n *\n * @param context - context to get span from\n */\nfunction getSpan(context) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.trace.getSpan(context);\n}\n/**\n * Set the span on a context\n *\n * @param context - context to use as parent\n * @param span - span to set active\n */\nfunction setSpan(context, span) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.trace.setSpan(context, span);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context - context to set active span on\n * @param spanContext - span context to be wrapped\n */\nfunction setSpanContext(context, spanContext) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.trace.setSpanContext(context, spanContext);\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context - context to get values from\n */\nfunction getSpanContext(context) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.trace.getSpanContext(context);\n}\n/**\n * Returns true of the given {@link SpanContext} is valid.\n * A valid {@link SpanContext} is one which has a valid trace ID and span ID as per the spec.\n *\n * @param context - the {@link SpanContext} to validate.\n *\n * @returns true if the {@link SpanContext} is valid, false otherwise.\n */\nfunction isSpanContextValid(context) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.trace.isSpanContextValid(context);\n}\nfunction getTracer(name, version) {\n    return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.trace.getTracer(name || \"azure/core-tracing\", version);\n}\n/** Entrypoint for context API */\nconst context = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.context;\n/** SpanStatusCode */\nvar SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=interfaces.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js?");

/***/ }),

/***/ "./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"extractSpanContextFromTraceParentHeader\": () => (/* binding */ extractSpanContextFromTraceParentHeader),\n/* harmony export */   \"getTraceParentHeader\": () => (/* binding */ getTraceParentHeader)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst VERSION = \"00\";\n/**\n * Generates a `SpanContext` given a `traceparent` header value.\n * @param traceParent - Serialized span context data as a `traceparent` header value.\n * @returns The `SpanContext` generated from the `traceparent` value.\n */\nfunction extractSpanContextFromTraceParentHeader(traceParentHeader) {\n    const parts = traceParentHeader.split(\"-\");\n    if (parts.length !== 4) {\n        return;\n    }\n    const [version, traceId, spanId, traceOptions] = parts;\n    if (version !== VERSION) {\n        return;\n    }\n    const traceFlags = parseInt(traceOptions, 16);\n    const spanContext = {\n        spanId,\n        traceId,\n        traceFlags\n    };\n    return spanContext;\n}\n/**\n * Generates a `traceparent` value given a span context.\n * @param spanContext - Contains context for a specific span.\n * @returns The `spanContext` represented as a `traceparent` value.\n */\nfunction getTraceParentHeader(spanContext) {\n    const missingFields = [];\n    if (!spanContext.traceId) {\n        missingFields.push(\"traceId\");\n    }\n    if (!spanContext.spanId) {\n        missingFields.push(\"spanId\");\n    }\n    if (missingFields.length) {\n        return;\n    }\n    const flags = spanContext.traceFlags || 0 /* NONE */;\n    const hexFlags = flags.toString(16);\n    const traceFlags = hexFlags.length === 1 ? `0${hexFlags}` : hexFlags;\n    // https://www.w3.org/TR/trace-context/#traceparent-header-field-values\n    return `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-${traceFlags}`;\n}\n//# sourceMappingURL=traceParentHeader.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js?");

/***/ }),

/***/ "./node_modules/@azure/logger/dist-esm/src/debug.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/logger/dist-esm/src/debug.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./log */ \"./node_modules/@azure/logger/dist-esm/src/log.browser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst debugEnvVariable = (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\nlet enabledString;\nlet enabledNamespaces = [];\nlet skippedNamespaces = [];\nconst debuggers = [];\nif (debugEnvVariable) {\n    enable(debugEnvVariable);\n}\nconst debugObj = Object.assign((namespace) => {\n    return createDebugger(namespace);\n}, {\n    enable,\n    enabled,\n    disable,\n    log: _log__WEBPACK_IMPORTED_MODULE_0__.log\n});\nfunction enable(namespaces) {\n    enabledString = namespaces;\n    enabledNamespaces = [];\n    skippedNamespaces = [];\n    const wildcard = /\\*/g;\n    const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n    for (const ns of namespaceList) {\n        if (ns.startsWith(\"-\")) {\n            skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n        }\n        else {\n            enabledNamespaces.push(new RegExp(`^${ns}$`));\n        }\n    }\n    for (const instance of debuggers) {\n        instance.enabled = enabled(instance.namespace);\n    }\n}\nfunction enabled(namespace) {\n    if (namespace.endsWith(\"*\")) {\n        return true;\n    }\n    for (const skipped of skippedNamespaces) {\n        if (skipped.test(namespace)) {\n            return false;\n        }\n    }\n    for (const enabledNamespace of enabledNamespaces) {\n        if (enabledNamespace.test(namespace)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction disable() {\n    const result = enabledString || \"\";\n    enable(\"\");\n    return result;\n}\nfunction createDebugger(namespace) {\n    const newDebugger = Object.assign(debug, {\n        enabled: enabled(namespace),\n        destroy,\n        log: debugObj.log,\n        namespace,\n        extend\n    });\n    function debug(...args) {\n        if (!newDebugger.enabled) {\n            return;\n        }\n        if (args.length > 0) {\n            args[0] = `${namespace} ${args[0]}`;\n        }\n        newDebugger.log(...args);\n    }\n    debuggers.push(newDebugger);\n    return newDebugger;\n}\nfunction destroy() {\n    const index = debuggers.indexOf(this);\n    if (index >= 0) {\n        debuggers.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nfunction extend(namespace) {\n    const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n    newDebugger.log = this.log;\n    return newDebugger;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (debugObj);\n//# sourceMappingURL=debug.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/logger/dist-esm/src/debug.js?");

/***/ }),

/***/ "./node_modules/@azure/logger/dist-esm/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/logger/dist-esm/src/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AzureLogger\": () => (/* binding */ AzureLogger),\n/* harmony export */   \"setLogLevel\": () => (/* binding */ setLogLevel),\n/* harmony export */   \"getLogLevel\": () => (/* binding */ getLogLevel),\n/* harmony export */   \"createClientLogger\": () => (/* binding */ createClientLogger)\n/* harmony export */ });\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug */ \"./node_modules/@azure/logger/dist-esm/src/debug.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst registeredLoggers = new Set();\nconst logLevelFromEnv = (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\nlet azureLogLevel;\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nconst AzureLogger = (0,_debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"azure\");\nAzureLogger.log = (...args) => {\n    _debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"].log(...args);\n};\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\nif (logLevelFromEnv) {\n    // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n    if (isAzureLogLevel(logLevelFromEnv)) {\n        setLogLevel(logLevelFromEnv);\n    }\n    else {\n        console.error(`AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\", \")}.`);\n    }\n}\n/**\n * Immediately enables logging at the specified log level.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nfunction setLogLevel(level) {\n    if (level && !isAzureLogLevel(level)) {\n        throw new Error(`Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`);\n    }\n    azureLogLevel = level;\n    const enabledNamespaces = [];\n    for (const logger of registeredLoggers) {\n        if (shouldEnable(logger)) {\n            enabledNamespaces.push(logger.namespace);\n        }\n    }\n    _debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable(enabledNamespaces.join(\",\"));\n}\n/**\n * Retrieves the currently specified log level.\n */\nfunction getLogLevel() {\n    return azureLogLevel;\n}\nconst levelMap = {\n    verbose: 400,\n    info: 300,\n    warning: 200,\n    error: 100\n};\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nfunction createClientLogger(namespace) {\n    const clientRootLogger = AzureLogger.extend(namespace);\n    patchLogMethod(AzureLogger, clientRootLogger);\n    return {\n        error: createLogger(clientRootLogger, \"error\"),\n        warning: createLogger(clientRootLogger, \"warning\"),\n        info: createLogger(clientRootLogger, \"info\"),\n        verbose: createLogger(clientRootLogger, \"verbose\")\n    };\n}\nfunction patchLogMethod(parent, child) {\n    child.log = (...args) => {\n        parent.log(...args);\n    };\n}\nfunction createLogger(parent, level) {\n    const logger = Object.assign(parent.extend(level), {\n        level\n    });\n    patchLogMethod(parent, logger);\n    if (shouldEnable(logger)) {\n        const enabledNamespaces = _debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"].disable();\n        _debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable(enabledNamespaces + \",\" + logger.namespace);\n    }\n    registeredLoggers.add(logger);\n    return logger;\n}\nfunction shouldEnable(logger) {\n    if (azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction isAzureLogLevel(logLevel) {\n    return AZURE_LOG_LEVELS.includes(logLevel);\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/logger/dist-esm/src/index.js?");

/***/ }),

/***/ "./node_modules/@azure/logger/dist-esm/src/log.browser.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/logger/dist-esm/src/log.browser.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"log\": () => (/* binding */ log)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction log(...args) {\n    if (args.length > 0) {\n        const firstArg = String(args[0]);\n        if (firstArg.includes(\":error\")) {\n            console.error(...args);\n        }\n        else if (firstArg.includes(\":warning\")) {\n            console.warn(...args);\n        }\n        else if (firstArg.includes(\":info\")) {\n            console.info(...args);\n        }\n        else if (firstArg.includes(\":verbose\")) {\n            console.debug(...args);\n        }\n        else {\n            console.debug(...args);\n        }\n    }\n}\n//# sourceMappingURL=log.browser.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@azure/logger/dist-esm/src/log.browser.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/api/context.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/api/context.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ContextAPI\": () => (/* binding */ ContextAPI)\n/* harmony export */ });\n/* harmony import */ var _context_NoopContextManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/NoopContextManager */ \"./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js\");\n/* harmony import */ var _internal_global_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js\");\n/* harmony import */ var _diag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./diag */ \"./node_modules/@opentelemetry/api/build/esm/api/diag.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\n\n\n\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new _context_NoopContextManager__WEBPACK_IMPORTED_MODULE_0__.NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager.\n     *\n     * @returns true if the context manager was successfully registered, else false\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        return (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_1__.registerGlobal)(API_NAME, contextManager, _diag__WEBPACK_IMPORTED_MODULE_2__.DiagAPI.instance());\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    ContextAPI.prototype.with = function (context, fn, thisArg) {\n        var _a;\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return (_a = this._getContextManager()).with.apply(_a, __spreadArray([context, fn, thisArg], args));\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     * @param target function or event emitter to bind\n     */\n    ContextAPI.prototype.bind = function (context, target) {\n        return this._getContextManager().bind(context, target);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        return (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_1__.getGlobal)(API_NAME) || NOOP_CONTEXT_MANAGER;\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_1__.unregisterGlobal)(API_NAME, _diag__WEBPACK_IMPORTED_MODULE_2__.DiagAPI.instance());\n    };\n    return ContextAPI;\n}());\n\n//# sourceMappingURL=context.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/api/context.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/api/diag.js":
/*!***************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/api/diag.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DiagAPI\": () => (/* binding */ DiagAPI)\n/* harmony export */ });\n/* harmony import */ var _diag_ComponentLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../diag/ComponentLogger */ \"./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js\");\n/* harmony import */ var _diag_internal_logLevelLogger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../diag/internal/logLevelLogger */ \"./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js\");\n/* harmony import */ var _diag_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../diag/types */ \"./node_modules/@opentelemetry/api/build/esm/diag/types.js\");\n/* harmony import */ var _internal_global_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */ (function () {\n    /**\n     * Private internal constructor\n     * @private\n     */\n    function DiagAPI() {\n        function _logProxy(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var logger = (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__.getGlobal)('diag');\n                // shortcut if logger not set\n                if (!logger)\n                    return;\n                return logger[funcName].apply(logger, args);\n            };\n        }\n        // Using self local variable for minification purposes as 'this' cannot be minified\n        var self = this;\n        // DiagAPI specific functions\n        self.setLogger = function (logger, logLevel) {\n            var _a, _b;\n            if (logLevel === void 0) { logLevel = _diag_types__WEBPACK_IMPORTED_MODULE_2__.DiagLogLevel.INFO; }\n            if (logger === self) {\n                // There isn't much we can do here.\n                // Logging to the console might break the user application.\n                // Try to log to self. If a logger was previously registered it will receive the log.\n                var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n                self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n                return false;\n            }\n            var oldLogger = (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__.getGlobal)('diag');\n            var newLogger = (0,_diag_internal_logLevelLogger__WEBPACK_IMPORTED_MODULE_1__.createLogLevelDiagLogger)(logLevel, logger);\n            // There already is an logger registered. We'll let it know before overwriting it.\n            if (oldLogger) {\n                var stack = (_b = new Error().stack) !== null && _b !== void 0 ? _b : '<failed to generate stacktrace>';\n                oldLogger.warn(\"Current logger will be overwritten from \" + stack);\n                newLogger.warn(\"Current logger will overwrite one already registered from \" + stack);\n            }\n            return (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__.registerGlobal)('diag', newLogger, self, true);\n        };\n        self.disable = function () {\n            (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__.unregisterGlobal)(API_NAME, self);\n        };\n        self.createComponentLogger = function (options) {\n            return new _diag_ComponentLogger__WEBPACK_IMPORTED_MODULE_0__.DiagComponentLogger(options);\n        };\n        self.verbose = _logProxy('verbose');\n        self.debug = _logProxy('debug');\n        self.info = _logProxy('info');\n        self.warn = _logProxy('warn');\n        self.error = _logProxy('error');\n    }\n    /** Get the singleton instance of the DiagAPI API */\n    DiagAPI.instance = function () {\n        if (!this._instance) {\n            this._instance = new DiagAPI();\n        }\n        return this._instance;\n    };\n    return DiagAPI;\n}());\n\n//# sourceMappingURL=diag.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/api/diag.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/api/propagation.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/api/propagation.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PropagationAPI\": () => (/* binding */ PropagationAPI)\n/* harmony export */ });\n/* harmony import */ var _internal_global_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js\");\n/* harmony import */ var _propagation_NoopTextMapPropagator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../propagation/NoopTextMapPropagator */ \"./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js\");\n/* harmony import */ var _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../propagation/TextMapPropagator */ \"./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js\");\n/* harmony import */ var _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../baggage/context-helpers */ \"./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js\");\n/* harmony import */ var _baggage_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../baggage/utils */ \"./node_modules/@opentelemetry/api/build/esm/baggage/utils.js\");\n/* harmony import */ var _diag__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./diag */ \"./node_modules/@opentelemetry/api/build/esm/api/diag.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\nvar API_NAME = 'propagation';\nvar NOOP_TEXT_MAP_PROPAGATOR = new _propagation_NoopTextMapPropagator__WEBPACK_IMPORTED_MODULE_1__.NoopTextMapPropagator();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n        this.createBaggage = _baggage_utils__WEBPACK_IMPORTED_MODULE_4__.createBaggage;\n        this.getBaggage = _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__.getBaggage;\n        this.setBaggage = _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__.setBaggage;\n        this.deleteBaggage = _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__.deleteBaggage;\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator.\n     *\n     * @returns true if the propagator was successfully registered, else false\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        return (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__.registerGlobal)(API_NAME, propagator, _diag__WEBPACK_IMPORTED_MODULE_5__.DiagAPI.instance());\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_2__.defaultTextMapSetter; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_2__.defaultTextMapGetter; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__.unregisterGlobal)(API_NAME, _diag__WEBPACK_IMPORTED_MODULE_5__.DiagAPI.instance());\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        return (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobal)(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n    };\n    return PropagationAPI;\n}());\n\n//# sourceMappingURL=propagation.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/api/propagation.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/api/trace.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/api/trace.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TraceAPI\": () => (/* binding */ TraceAPI)\n/* harmony export */ });\n/* harmony import */ var _internal_global_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js\");\n/* harmony import */ var _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trace/ProxyTracerProvider */ \"./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js\");\n/* harmony import */ var _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../trace/spancontext-utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js\");\n/* harmony import */ var _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../trace/context-utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js\");\n/* harmony import */ var _diag__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./diag */ \"./node_modules/@opentelemetry/api/build/esm/api/diag.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_1__.ProxyTracerProvider();\n        this.wrapSpanContext = _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_2__.wrapSpanContext;\n        this.isSpanContextValid = _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_2__.isSpanContextValid;\n        this.deleteSpan = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__.deleteSpan;\n        this.getSpan = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__.getSpan;\n        this.getSpanContext = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__.getSpanContext;\n        this.setSpan = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__.setSpan;\n        this.setSpanContext = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__.setSpanContext;\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer.\n     *\n     * @returns true if the tracer provider was successfully registered, else false\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        var success = (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__.registerGlobal)(API_NAME, this._proxyTracerProvider, _diag__WEBPACK_IMPORTED_MODULE_4__.DiagAPI.instance());\n        if (success) {\n            this._proxyTracerProvider.setDelegate(provider);\n        }\n        return success;\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        return (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobal)(API_NAME) || this._proxyTracerProvider;\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__.unregisterGlobal)(API_NAME, _diag__WEBPACK_IMPORTED_MODULE_4__.DiagAPI.instance());\n        this._proxyTracerProvider = new _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_1__.ProxyTracerProvider();\n    };\n    return TraceAPI;\n}());\n\n//# sourceMappingURL=trace.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/api/trace.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getBaggage\": () => (/* binding */ getBaggage),\n/* harmony export */   \"setBaggage\": () => (/* binding */ setBaggage),\n/* harmony export */   \"deleteBaggage\": () => (/* binding */ deleteBaggage)\n/* harmony export */ });\n/* harmony import */ var _context_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/context */ \"./node_modules/@opentelemetry/api/build/esm/context/context.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = (0,_context_context__WEBPACK_IMPORTED_MODULE_0__.createContextKey)('OpenTelemetry Baggage Key');\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nfunction getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nfunction setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nfunction deleteBaggage(context) {\n    return context.deleteValue(BAGGAGE_KEY);\n}\n//# sourceMappingURL=context-helpers.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaggageImpl\": () => (/* binding */ BaggageImpl)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var k = _a[0], v = _a[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n            var key = keys_1[_a];\n            newBaggage._entries.delete(key);\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\n\n//# sourceMappingURL=baggage-impl.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"baggageEntryMetadataSymbol\": () => (/* binding */ baggageEntryMetadataSymbol)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nvar baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n//# sourceMappingURL=symbol.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/baggage/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/baggage/types.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/baggage/types.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/baggage/utils.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/baggage/utils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBaggage\": () => (/* binding */ createBaggage),\n/* harmony export */   \"baggageEntryMetadataFromString\": () => (/* binding */ baggageEntryMetadataFromString)\n/* harmony export */ });\n/* harmony import */ var _api_diag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api/diag */ \"./node_modules/@opentelemetry/api/build/esm/api/diag.js\");\n/* harmony import */ var _internal_baggage_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/baggage-impl */ \"./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js\");\n/* harmony import */ var _internal_symbol__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/symbol */ \"./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar diag = _api_diag__WEBPACK_IMPORTED_MODULE_0__.DiagAPI.instance();\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nfunction createBaggage(entries) {\n    if (entries === void 0) { entries = {}; }\n    return new _internal_baggage_impl__WEBPACK_IMPORTED_MODULE_1__.BaggageImpl(new Map(Object.entries(entries)));\n}\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nfunction baggageEntryMetadataFromString(str) {\n    if (typeof str !== 'string') {\n        diag.error(\"Cannot create baggage metadata from unknown type: \" + typeof str);\n        str = '';\n    }\n    return {\n        __TYPE__: _internal_symbol__WEBPACK_IMPORTED_MODULE_2__.baggageEntryMetadataSymbol,\n        toString: function () {\n            return str;\n        },\n    };\n}\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/baggage/utils.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/common/Exception.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/common/Exception.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=Exception.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/common/Exception.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/common/Time.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/common/Time.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=Time.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/common/Time.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NoopContextManager\": () => (/* binding */ NoopContextManager)\n/* harmony export */ });\n/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context */ \"./node_modules/@opentelemetry/api/build/esm/context/context.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\n\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return _context__WEBPACK_IMPORTED_MODULE_0__.ROOT_CONTEXT;\n    };\n    NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return fn.call.apply(fn, __spreadArray([thisArg], args));\n    };\n    NoopContextManager.prototype.bind = function (_context, target) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\n\n//# sourceMappingURL=NoopContextManager.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/context/context.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/context/context.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createContextKey\": () => (/* binding */ createContextKey),\n/* harmony export */   \"ROOT_CONTEXT\": () => (/* binding */ ROOT_CONTEXT)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Get a key to uniquely identify a context value */\nfunction createContextKey(description) {\n    // The specification states that for the same input, multiple calls should\n    // return different keys. Due to the nature of the JS dependency management\n    // system, this creates problems where multiple versions of some package\n    // could hold different keys for the same property.\n    //\n    // Therefore, we use Symbol.for which returns the same key for the same input.\n    return Symbol.for(description);\n}\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        // for minification\n        var self = this;\n        self._currentContext = parentContext ? new Map(parentContext) : new Map();\n        self.getValue = function (key) { return self._currentContext.get(key); };\n        self.setValue = function (key, value) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.set(key, value);\n            return context;\n        };\n        self.deleteValue = function (key) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.delete(key);\n            return context;\n        };\n    }\n    return BaseContext;\n}());\n/** The root context is used as the default parent context when there is no active context */\nvar ROOT_CONTEXT = new BaseContext();\n//# sourceMappingURL=context.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/context/context.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/context/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/context/types.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/context/types.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DiagComponentLogger\": () => (/* binding */ DiagComponentLogger)\n/* harmony export */ });\n/* harmony import */ var _internal_global_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nvar DiagComponentLogger = /** @class */ (function () {\n    function DiagComponentLogger(props) {\n        this._namespace = props.namespace || 'DiagComponentLogger';\n    }\n    DiagComponentLogger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('debug', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('error', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('info', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('warn', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.verbose = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('verbose', this._namespace, args);\n    };\n    return DiagComponentLogger;\n}());\n\nfunction logProxy(funcName, namespace, args) {\n    var logger = (0,_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobal)('diag');\n    // shortcut if logger not set\n    if (!logger) {\n        return;\n    }\n    args.unshift(namespace);\n    return logger[funcName].apply(logger, args);\n}\n//# sourceMappingURL=ComponentLogger.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DiagConsoleLogger\": () => (/* binding */ DiagConsoleLogger)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar consoleMap = [\n    { n: 'error', c: 'error' },\n    { n: 'warn', c: 'warn' },\n    { n: 'info', c: 'info' },\n    { n: 'debug', c: 'debug' },\n    { n: 'verbose', c: 'trace' },\n];\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nvar DiagConsoleLogger = /** @class */ (function () {\n    function DiagConsoleLogger() {\n        function _consoleFunc(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (console) {\n                    // Some environments only expose the console when the F12 developer console is open\n                    // eslint-disable-next-line no-console\n                    var theFunc = console[funcName];\n                    if (typeof theFunc !== 'function') {\n                        // Not all environments support all functions\n                        // eslint-disable-next-line no-console\n                        theFunc = console.log;\n                    }\n                    // One last final check\n                    if (typeof theFunc === 'function') {\n                        return theFunc.apply(console, args);\n                    }\n                }\n            };\n        }\n        for (var i = 0; i < consoleMap.length; i++) {\n            this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n        }\n    }\n    return DiagConsoleLogger;\n}());\n\n//# sourceMappingURL=consoleLogger.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/diag/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/diag/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DiagConsoleLogger\": () => (/* reexport safe */ _consoleLogger__WEBPACK_IMPORTED_MODULE_0__.DiagConsoleLogger),\n/* harmony export */   \"DiagLogLevel\": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.DiagLogLevel)\n/* harmony export */ });\n/* harmony import */ var _consoleLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consoleLogger */ \"./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/api/build/esm/diag/types.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/diag/index.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLogLevelDiagLogger\": () => (/* binding */ createLogLevelDiagLogger)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types */ \"./node_modules/@opentelemetry/api/build/esm/diag/types.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction createLogLevelDiagLogger(maxLevel, logger) {\n    if (maxLevel < _types__WEBPACK_IMPORTED_MODULE_0__.DiagLogLevel.NONE) {\n        maxLevel = _types__WEBPACK_IMPORTED_MODULE_0__.DiagLogLevel.NONE;\n    }\n    else if (maxLevel > _types__WEBPACK_IMPORTED_MODULE_0__.DiagLogLevel.ALL) {\n        maxLevel = _types__WEBPACK_IMPORTED_MODULE_0__.DiagLogLevel.ALL;\n    }\n    // In case the logger is null or undefined\n    logger = logger || {};\n    function _filterFunc(funcName, theLevel) {\n        var theFunc = logger[funcName];\n        if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n            return theFunc.bind(logger);\n        }\n        return function () { };\n    }\n    return {\n        error: _filterFunc('error', _types__WEBPACK_IMPORTED_MODULE_0__.DiagLogLevel.ERROR),\n        warn: _filterFunc('warn', _types__WEBPACK_IMPORTED_MODULE_0__.DiagLogLevel.WARN),\n        info: _filterFunc('info', _types__WEBPACK_IMPORTED_MODULE_0__.DiagLogLevel.INFO),\n        debug: _filterFunc('debug', _types__WEBPACK_IMPORTED_MODULE_0__.DiagLogLevel.DEBUG),\n        verbose: _filterFunc('verbose', _types__WEBPACK_IMPORTED_MODULE_0__.DiagLogLevel.VERBOSE),\n    };\n}\n//# sourceMappingURL=logLevelLogger.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/diag/types.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/diag/types.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DiagLogLevel\": () => (/* binding */ DiagLogLevel)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nvar DiagLogLevel;\n(function (DiagLogLevel) {\n    /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n    DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n    /** Identifies an error scenario */\n    DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n    /** Identifies a warning scenario */\n    DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n    /** General informational log message */\n    DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n    /** General debug log message */\n    DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n    /**\n     * Detailed trace level logging should only be used for development, should only be set\n     * in a development environment.\n     */\n    DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n    /** Used to set the logging level to include all logging */\n    DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel || (DiagLogLevel = {}));\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/diag/types.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"baggageEntryMetadataFromString\": () => (/* reexport safe */ _baggage_utils__WEBPACK_IMPORTED_MODULE_1__.baggageEntryMetadataFromString),\n/* harmony export */   \"DiagConsoleLogger\": () => (/* reexport safe */ _diag__WEBPACK_IMPORTED_MODULE_4__.DiagConsoleLogger),\n/* harmony export */   \"DiagLogLevel\": () => (/* reexport safe */ _diag__WEBPACK_IMPORTED_MODULE_4__.DiagLogLevel),\n/* harmony export */   \"defaultTextMapGetter\": () => (/* reexport safe */ _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_5__.defaultTextMapGetter),\n/* harmony export */   \"defaultTextMapSetter\": () => (/* reexport safe */ _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_5__.defaultTextMapSetter),\n/* harmony export */   \"ProxyTracer\": () => (/* reexport safe */ _trace_ProxyTracer__WEBPACK_IMPORTED_MODULE_8__.ProxyTracer),\n/* harmony export */   \"ProxyTracerProvider\": () => (/* reexport safe */ _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_9__.ProxyTracerProvider),\n/* harmony export */   \"SamplingDecision\": () => (/* reexport safe */ _trace_SamplingResult__WEBPACK_IMPORTED_MODULE_11__.SamplingDecision),\n/* harmony export */   \"SpanKind\": () => (/* reexport safe */ _trace_span_kind__WEBPACK_IMPORTED_MODULE_13__.SpanKind),\n/* harmony export */   \"SpanStatusCode\": () => (/* reexport safe */ _trace_status__WEBPACK_IMPORTED_MODULE_16__.SpanStatusCode),\n/* harmony export */   \"TraceFlags\": () => (/* reexport safe */ _trace_trace_flags__WEBPACK_IMPORTED_MODULE_17__.TraceFlags),\n/* harmony export */   \"isSpanContextValid\": () => (/* reexport safe */ _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_21__.isSpanContextValid),\n/* harmony export */   \"isValidTraceId\": () => (/* reexport safe */ _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_21__.isValidTraceId),\n/* harmony export */   \"isValidSpanId\": () => (/* reexport safe */ _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_21__.isValidSpanId),\n/* harmony export */   \"INVALID_SPANID\": () => (/* reexport safe */ _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_22__.INVALID_SPANID),\n/* harmony export */   \"INVALID_TRACEID\": () => (/* reexport safe */ _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_22__.INVALID_TRACEID),\n/* harmony export */   \"INVALID_SPAN_CONTEXT\": () => (/* reexport safe */ _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_22__.INVALID_SPAN_CONTEXT),\n/* harmony export */   \"ROOT_CONTEXT\": () => (/* reexport safe */ _context_context__WEBPACK_IMPORTED_MODULE_23__.ROOT_CONTEXT),\n/* harmony export */   \"createContextKey\": () => (/* reexport safe */ _context_context__WEBPACK_IMPORTED_MODULE_23__.createContextKey),\n/* harmony export */   \"context\": () => (/* binding */ context),\n/* harmony export */   \"trace\": () => (/* binding */ trace),\n/* harmony export */   \"propagation\": () => (/* binding */ propagation),\n/* harmony export */   \"diag\": () => (/* binding */ diag),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _baggage_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baggage/types */ \"./node_modules/@opentelemetry/api/build/esm/baggage/types.js\");\n/* harmony import */ var _baggage_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./baggage/utils */ \"./node_modules/@opentelemetry/api/build/esm/baggage/utils.js\");\n/* harmony import */ var _common_Exception__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/Exception */ \"./node_modules/@opentelemetry/api/build/esm/common/Exception.js\");\n/* harmony import */ var _common_Time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/Time */ \"./node_modules/@opentelemetry/api/build/esm/common/Time.js\");\n/* harmony import */ var _diag__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./diag */ \"./node_modules/@opentelemetry/api/build/esm/diag/index.js\");\n/* harmony import */ var _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./propagation/TextMapPropagator */ \"./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js\");\n/* harmony import */ var _trace_attributes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./trace/attributes */ \"./node_modules/@opentelemetry/api/build/esm/trace/attributes.js\");\n/* harmony import */ var _trace_link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./trace/link */ \"./node_modules/@opentelemetry/api/build/esm/trace/link.js\");\n/* harmony import */ var _trace_ProxyTracer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./trace/ProxyTracer */ \"./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js\");\n/* harmony import */ var _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./trace/ProxyTracerProvider */ \"./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js\");\n/* harmony import */ var _trace_Sampler__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./trace/Sampler */ \"./node_modules/@opentelemetry/api/build/esm/trace/Sampler.js\");\n/* harmony import */ var _trace_SamplingResult__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./trace/SamplingResult */ \"./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js\");\n/* harmony import */ var _trace_span_context__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./trace/span_context */ \"./node_modules/@opentelemetry/api/build/esm/trace/span_context.js\");\n/* harmony import */ var _trace_span_kind__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./trace/span_kind */ \"./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js\");\n/* harmony import */ var _trace_span__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./trace/span */ \"./node_modules/@opentelemetry/api/build/esm/trace/span.js\");\n/* harmony import */ var _trace_SpanOptions__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./trace/SpanOptions */ \"./node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js\");\n/* harmony import */ var _trace_status__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./trace/status */ \"./node_modules/@opentelemetry/api/build/esm/trace/status.js\");\n/* harmony import */ var _trace_trace_flags__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./trace/trace_flags */ \"./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js\");\n/* harmony import */ var _trace_trace_state__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./trace/trace_state */ \"./node_modules/@opentelemetry/api/build/esm/trace/trace_state.js\");\n/* harmony import */ var _trace_tracer_provider__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./trace/tracer_provider */ \"./node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js\");\n/* harmony import */ var _trace_tracer__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./trace/tracer */ \"./node_modules/@opentelemetry/api/build/esm/trace/tracer.js\");\n/* harmony import */ var _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./trace/spancontext-utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js\");\n/* harmony import */ var _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./trace/invalid-span-constants */ \"./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js\");\n/* harmony import */ var _context_context__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./context/context */ \"./node_modules/@opentelemetry/api/build/esm/context/context.js\");\n/* harmony import */ var _context_types__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./context/types */ \"./node_modules/@opentelemetry/api/build/esm/context/types.js\");\n/* harmony import */ var _api_context__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./api/context */ \"./node_modules/@opentelemetry/api/build/esm/api/context.js\");\n/* harmony import */ var _api_trace__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./api/trace */ \"./node_modules/@opentelemetry/api/build/esm/api/trace.js\");\n/* harmony import */ var _api_propagation__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./api/propagation */ \"./node_modules/@opentelemetry/api/build/esm/api/propagation.js\");\n/* harmony import */ var _api_diag__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./api/diag */ \"./node_modules/@opentelemetry/api/build/esm/api/diag.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** Entrypoint for context API */\nvar context = _api_context__WEBPACK_IMPORTED_MODULE_25__.ContextAPI.getInstance();\n\n/** Entrypoint for trace API */\nvar trace = _api_trace__WEBPACK_IMPORTED_MODULE_26__.TraceAPI.getInstance();\n\n/** Entrypoint for propagation API */\nvar propagation = _api_propagation__WEBPACK_IMPORTED_MODULE_27__.PropagationAPI.getInstance();\n\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nvar diag = _api_diag__WEBPACK_IMPORTED_MODULE_28__.DiagAPI.instance();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    trace: trace,\n    context: context,\n    propagation: propagation,\n    diag: diag,\n});\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/index.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registerGlobal\": () => (/* binding */ registerGlobal),\n/* harmony export */   \"getGlobal\": () => (/* binding */ getGlobal),\n/* harmony export */   \"unregisterGlobal\": () => (/* binding */ unregisterGlobal)\n/* harmony export */ });\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform */ \"./node_modules/@opentelemetry/api/build/esm/platform/browser/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../version */ \"./node_modules/@opentelemetry/api/build/esm/version.js\");\n/* harmony import */ var _semver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./semver */ \"./node_modules/@opentelemetry/api/build/esm/internal/semver.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar major = _version__WEBPACK_IMPORTED_MODULE_1__.VERSION.split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"opentelemetry.js.api.\" + major);\nvar _global = _platform__WEBPACK_IMPORTED_MODULE_0__._globalThis;\nfunction registerGlobal(type, instance, diag, allowOverride) {\n    var _a;\n    if (allowOverride === void 0) { allowOverride = false; }\n    var api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n        version: _version__WEBPACK_IMPORTED_MODULE_1__.VERSION,\n    });\n    if (!allowOverride && api[type]) {\n        // already registered an API of this type\n        var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    if (api.version !== _version__WEBPACK_IMPORTED_MODULE_1__.VERSION) {\n        // All registered APIs must be of the same version exactly\n        var err = new Error('@opentelemetry/api: All API registration versions must match');\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    api[type] = instance;\n    diag.debug(\"@opentelemetry/api: Registered a global for \" + type + \" v\" + _version__WEBPACK_IMPORTED_MODULE_1__.VERSION + \".\");\n    return true;\n}\nfunction getGlobal(type) {\n    var _a, _b;\n    var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n    if (!globalVersion || !(0,_semver__WEBPACK_IMPORTED_MODULE_2__.isCompatible)(globalVersion)) {\n        return;\n    }\n    return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nfunction unregisterGlobal(type, diag) {\n    diag.debug(\"@opentelemetry/api: Unregistering a global for \" + type + \" v\" + _version__WEBPACK_IMPORTED_MODULE_1__.VERSION + \".\");\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (api) {\n        delete api[type];\n    }\n}\n//# sourceMappingURL=global-utils.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/internal/semver.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/internal/semver.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_makeCompatibilityCheck\": () => (/* binding */ _makeCompatibilityCheck),\n/* harmony export */   \"isCompatible\": () => (/* binding */ isCompatible)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version */ \"./node_modules/@opentelemetry/api/build/esm/version.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nfunction _makeCompatibilityCheck(ownVersion) {\n    var acceptedVersions = new Set([ownVersion]);\n    var rejectedVersions = new Set();\n    var myVersionMatch = ownVersion.match(re);\n    if (!myVersionMatch) {\n        // we cannot guarantee compatibility so we always return noop\n        return function () { return false; };\n    }\n    var ownVersionParsed = {\n        major: +myVersionMatch[1],\n        minor: +myVersionMatch[2],\n        patch: +myVersionMatch[3],\n        prerelease: myVersionMatch[4],\n    };\n    // if ownVersion has a prerelease tag, versions must match exactly\n    if (ownVersionParsed.prerelease != null) {\n        return function isExactmatch(globalVersion) {\n            return globalVersion === ownVersion;\n        };\n    }\n    function _reject(v) {\n        rejectedVersions.add(v);\n        return false;\n    }\n    function _accept(v) {\n        acceptedVersions.add(v);\n        return true;\n    }\n    return function isCompatible(globalVersion) {\n        if (acceptedVersions.has(globalVersion)) {\n            return true;\n        }\n        if (rejectedVersions.has(globalVersion)) {\n            return false;\n        }\n        var globalVersionMatch = globalVersion.match(re);\n        if (!globalVersionMatch) {\n            // cannot parse other version\n            // we cannot guarantee compatibility so we always noop\n            return _reject(globalVersion);\n        }\n        var globalVersionParsed = {\n            major: +globalVersionMatch[1],\n            minor: +globalVersionMatch[2],\n            patch: +globalVersionMatch[3],\n            prerelease: globalVersionMatch[4],\n        };\n        // if globalVersion has a prerelease tag, versions must match exactly\n        if (globalVersionParsed.prerelease != null) {\n            return _reject(globalVersion);\n        }\n        // major versions must match\n        if (ownVersionParsed.major !== globalVersionParsed.major) {\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.major === 0) {\n            if (ownVersionParsed.minor === globalVersionParsed.minor &&\n                ownVersionParsed.patch <= globalVersionParsed.patch) {\n                return _accept(globalVersion);\n            }\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n            return _accept(globalVersion);\n        }\n        return _reject(globalVersion);\n    };\n}\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nvar isCompatible = _makeCompatibilityCheck(_version__WEBPACK_IMPORTED_MODULE_0__.VERSION);\n//# sourceMappingURL=semver.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/internal/semver.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_globalThis\": () => (/* binding */ _globalThis)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api-metrics and\n// @opentelemetry/core too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nvar _globalThis = typeof globalThis === 'object' ? globalThis :\n    typeof self === 'object' ? self :\n        typeof window === 'object' ? window :\n            typeof __webpack_require__.g === 'object' ? __webpack_require__.g :\n                {};\n//# sourceMappingURL=globalThis.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/platform/browser/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/platform/browser/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_globalThis\": () => (/* reexport safe */ _globalThis__WEBPACK_IMPORTED_MODULE_0__._globalThis)\n/* harmony export */ });\n/* harmony import */ var _globalThis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globalThis */ \"./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/platform/browser/index.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NoopTextMapPropagator\": () => (/* binding */ NoopTextMapPropagator)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\n\n//# sourceMappingURL=NoopTextMapPropagator.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaultTextMapGetter\": () => (/* binding */ defaultTextMapGetter),\n/* harmony export */   \"defaultTextMapSetter\": () => (/* binding */ defaultTextMapSetter)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nvar defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NonRecordingSpan\": () => (/* binding */ NonRecordingSpan)\n/* harmony export */ });\n/* harmony import */ var _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invalid-span-constants */ \"./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NonRecordingSpan = /** @class */ (function () {\n    function NonRecordingSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NonRecordingSpan.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for NonRecordingSpan.\n    NonRecordingSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.recordException = function (_exception, _time) { };\n    return NonRecordingSpan;\n}());\n\n//# sourceMappingURL=NonRecordingSpan.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NoopTracer\": () => (/* binding */ NoopTracer)\n/* harmony export */ });\n/* harmony import */ var _api_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api/context */ \"./node_modules/@opentelemetry/api/build/esm/api/context.js\");\n/* harmony import */ var _trace_context_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trace/context-utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js\");\n/* harmony import */ var _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./NonRecordingSpan */ \"./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js\");\n/* harmony import */ var _spancontext_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spancontext-utils */ \"./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar context = _api_context__WEBPACK_IMPORTED_MODULE_0__.ContextAPI.getInstance();\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__.NonRecordingSpan();\n        }\n        var parentFromContext = context && (0,_trace_context_utils__WEBPACK_IMPORTED_MODULE_1__.getSpanContext)(context);\n        if (isSpanContext(parentFromContext) &&\n            (0,_spancontext_utils__WEBPACK_IMPORTED_MODULE_3__.isSpanContextValid)(parentFromContext)) {\n            return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__.NonRecordingSpan(parentFromContext);\n        }\n        else {\n            return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__.NonRecordingSpan();\n        }\n    };\n    NoopTracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : context.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = (0,_trace_context_utils__WEBPACK_IMPORTED_MODULE_1__.setSpan)(parentContext, span);\n        return context.with(contextWithSpanSet, fn, undefined, span);\n    };\n    return NoopTracer;\n}());\n\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\n//# sourceMappingURL=NoopTracer.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NoopTracerProvider\": () => (/* binding */ NoopTracerProvider)\n/* harmony export */ });\n/* harmony import */ var _NoopTracer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NoopTracer */ \"./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version) {\n        return new _NoopTracer__WEBPACK_IMPORTED_MODULE_0__.NoopTracer();\n    };\n    return NoopTracerProvider;\n}());\n\n//# sourceMappingURL=NoopTracerProvider.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ProxyTracer\": () => (/* binding */ ProxyTracer)\n/* harmony export */ });\n/* harmony import */ var _NoopTracer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NoopTracer */ \"./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar NOOP_TRACER = new _NoopTracer__WEBPACK_IMPORTED_MODULE_0__.NoopTracer();\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    ProxyTracer.prototype.startActiveSpan = function (_name, _options, _context, _fn) {\n        var tracer = this._getTracer();\n        return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version);\n        if (!tracer) {\n            return NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\n\n//# sourceMappingURL=ProxyTracer.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ProxyTracerProvider\": () => (/* binding */ ProxyTracerProvider)\n/* harmony export */ });\n/* harmony import */ var _ProxyTracer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProxyTracer */ \"./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js\");\n/* harmony import */ var _NoopTracerProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NoopTracerProvider */ \"./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar NOOP_TRACER_PROVIDER = new _NoopTracerProvider__WEBPACK_IMPORTED_MODULE_1__.NoopTracerProvider();\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version)) !== null && _a !== void 0 ? _a : new _ProxyTracer__WEBPACK_IMPORTED_MODULE_0__.ProxyTracer(this, name, version));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version);\n    };\n    return ProxyTracerProvider;\n}());\n\n//# sourceMappingURL=ProxyTracerProvider.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/Sampler.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/Sampler.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=Sampler.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/Sampler.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SamplingDecision\": () => (/* binding */ SamplingDecision)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nvar SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=SpanOptions.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/attributes.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/attributes.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=attributes.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/attributes.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSpan\": () => (/* binding */ getSpan),\n/* harmony export */   \"setSpan\": () => (/* binding */ setSpan),\n/* harmony export */   \"deleteSpan\": () => (/* binding */ deleteSpan),\n/* harmony export */   \"setSpanContext\": () => (/* binding */ setSpanContext),\n/* harmony export */   \"getSpanContext\": () => (/* binding */ getSpanContext)\n/* harmony export */ });\n/* harmony import */ var _context_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/context */ \"./node_modules/@opentelemetry/api/build/esm/context/context.js\");\n/* harmony import */ var _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NonRecordingSpan */ \"./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * span key\n */\nvar SPAN_KEY = (0,_context_context__WEBPACK_IMPORTED_MODULE_0__.createContextKey)('OpenTelemetry Context Key SPAN');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nfunction getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nfunction setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nfunction deleteSpan(context) {\n    return context.deleteValue(SPAN_KEY);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nfunction setSpanContext(context, spanContext) {\n    return setSpan(context, new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__.NonRecordingSpan(spanContext));\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nfunction getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.spanContext();\n}\n//# sourceMappingURL=context-utils.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"INVALID_SPANID\": () => (/* binding */ INVALID_SPANID),\n/* harmony export */   \"INVALID_TRACEID\": () => (/* binding */ INVALID_TRACEID),\n/* harmony export */   \"INVALID_SPAN_CONTEXT\": () => (/* binding */ INVALID_SPAN_CONTEXT)\n/* harmony export */ });\n/* harmony import */ var _trace_flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./trace_flags */ \"./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar INVALID_SPANID = '0000000000000000';\nvar INVALID_TRACEID = '00000000000000000000000000000000';\nvar INVALID_SPAN_CONTEXT = {\n    traceId: INVALID_TRACEID,\n    spanId: INVALID_SPANID,\n    traceFlags: _trace_flags__WEBPACK_IMPORTED_MODULE_0__.TraceFlags.NONE,\n};\n//# sourceMappingURL=invalid-span-constants.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/link.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/link.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=link.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/link.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/span.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/span.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=span.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/span.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/span_context.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/span_context.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=span_context.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/span_context.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SpanKind\": () => (/* binding */ SpanKind)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isValidTraceId\": () => (/* binding */ isValidTraceId),\n/* harmony export */   \"isValidSpanId\": () => (/* binding */ isValidSpanId),\n/* harmony export */   \"isSpanContextValid\": () => (/* binding */ isSpanContextValid),\n/* harmony export */   \"wrapSpanContext\": () => (/* binding */ wrapSpanContext)\n/* harmony export */ });\n/* harmony import */ var _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invalid-span-constants */ \"./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js\");\n/* harmony import */ var _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NonRecordingSpan */ \"./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nfunction isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_TRACEID;\n}\nfunction isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_SPANID;\n}\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nfunction isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nfunction wrapSpanContext(spanContext) {\n    return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__.NonRecordingSpan(spanContext);\n}\n//# sourceMappingURL=spancontext-utils.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/status.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/status.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SpanStatusCode\": () => (/* binding */ SpanStatusCode)\n/* harmony export */ });\n/**\n * An enumeration of status codes.\n */\nvar SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=status.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/status.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TraceFlags\": () => (/* binding */ TraceFlags)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags || (TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/trace_state.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/trace_state.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=trace_state.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/trace_state.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/tracer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/tracer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=tracer.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/tracer.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//# sourceMappingURL=tracer_provider.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js?");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/esm/version.js":
/*!**************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/esm/version.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VERSION\": () => (/* binding */ VERSION)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nvar VERSION = '1.0.4';\n//# sourceMappingURL=version.js.map\n\n//# sourceURL=webpack://webpuck/./node_modules/@opentelemetry/api/build/esm/version.js?");

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/index.js?");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\nvar Cancel = __webpack_require__(/*! ../cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/adapters/xhr.js?");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\naxios.VERSION = (__webpack_require__(/*! ./env/data */ \"./node_modules/axios/lib/env/data.js\").version);\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./node_modules/axios/lib/helpers/isAxiosError.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports[\"default\"] = axios;\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/cancel/Cancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/cancel/CancelToken.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/cancel/isCancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./node_modules/axios/lib/helpers/validator.js\");\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/core/Axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/core/InterceptorManager.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/core/buildFullPath.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/core/createError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\nvar Cancel = __webpack_require__(/*! ../cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/core/dispatchRequest.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/core/enhanceError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/core/mergeConfig.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/core/settle.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/core/transformData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/defaults.js?");

/***/ }),

/***/ "./node_modules/axios/lib/env/data.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/env/data.js ***!
  \********************************************/
/***/ ((module) => {

eval("module.exports = {\n  \"version\": \"0.26.0\"\n};\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/env/data.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/bind.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/buildURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/combineURLs.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/cookies.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/isAbsoluteURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/isAxiosError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/isURLSameOrigin.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/normalizeHeaderName.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/parseHeaders.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/spread.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/validator.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/validator.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar VERSION = (__webpack_require__(/*! ../env/data */ \"./node_modules/axios/lib/env/data.js\").version);\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/helpers/validator.js?");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/axios/lib/utils.js?");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n\n//# sourceURL=webpack://webpuck/./node_modules/events/events.js?");

/***/ }),

/***/ "./node_modules/jwt-decode/lib/atob.js":
/*!*********************************************!*\
  !*** ./node_modules/jwt-decode/lib/atob.js ***!
  \*********************************************/
/***/ ((module) => {

eval("/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill (input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n\n\n//# sourceURL=webpack://webpuck/./node_modules/jwt-decode/lib/atob.js?");

/***/ }),

/***/ "./node_modules/jwt-decode/lib/base64_url_decode.js":
/*!**********************************************************!*\
  !*** ./node_modules/jwt-decode/lib/base64_url_decode.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var atob = __webpack_require__(/*! ./atob */ \"./node_modules/jwt-decode/lib/atob.js\");\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n\n\n//# sourceURL=webpack://webpuck/./node_modules/jwt-decode/lib/base64_url_decode.js?");

/***/ }),

/***/ "./node_modules/jwt-decode/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/jwt-decode/lib/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar base64_url_decode = __webpack_require__(/*! ./base64_url_decode */ \"./node_modules/jwt-decode/lib/base64_url_decode.js\");\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token,options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;\n\n\n//# sourceURL=webpack://webpuck/./node_modules/jwt-decode/lib/index.js?");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__extends\": () => (/* binding */ __extends),\n/* harmony export */   \"__assign\": () => (/* binding */ __assign),\n/* harmony export */   \"__rest\": () => (/* binding */ __rest),\n/* harmony export */   \"__decorate\": () => (/* binding */ __decorate),\n/* harmony export */   \"__param\": () => (/* binding */ __param),\n/* harmony export */   \"__metadata\": () => (/* binding */ __metadata),\n/* harmony export */   \"__awaiter\": () => (/* binding */ __awaiter),\n/* harmony export */   \"__generator\": () => (/* binding */ __generator),\n/* harmony export */   \"__createBinding\": () => (/* binding */ __createBinding),\n/* harmony export */   \"__exportStar\": () => (/* binding */ __exportStar),\n/* harmony export */   \"__values\": () => (/* binding */ __values),\n/* harmony export */   \"__read\": () => (/* binding */ __read),\n/* harmony export */   \"__spread\": () => (/* binding */ __spread),\n/* harmony export */   \"__spreadArrays\": () => (/* binding */ __spreadArrays),\n/* harmony export */   \"__spreadArray\": () => (/* binding */ __spreadArray),\n/* harmony export */   \"__await\": () => (/* binding */ __await),\n/* harmony export */   \"__asyncGenerator\": () => (/* binding */ __asyncGenerator),\n/* harmony export */   \"__asyncDelegator\": () => (/* binding */ __asyncDelegator),\n/* harmony export */   \"__asyncValues\": () => (/* binding */ __asyncValues),\n/* harmony export */   \"__makeTemplateObject\": () => (/* binding */ __makeTemplateObject),\n/* harmony export */   \"__importStar\": () => (/* binding */ __importStar),\n/* harmony export */   \"__importDefault\": () => (/* binding */ __importDefault),\n/* harmony export */   \"__classPrivateFieldGet\": () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   \"__classPrivateFieldSet\": () => (/* binding */ __classPrivateFieldSet)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nfunction __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\n\n//# sourceURL=webpack://webpuck/./node_modules/tslib/tslib.es6.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n\n//# sourceURL=webpack://webpuck/./node_modules/uuid/dist/esm-browser/regex.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\n//# sourceURL=webpack://webpuck/./node_modules/uuid/dist/esm-browser/rng.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);\n\n//# sourceURL=webpack://webpuck/./node_modules/uuid/dist/esm-browser/stringify.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);\n\n//# sourceURL=webpack://webpuck/./node_modules/uuid/dist/esm-browser/v4.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"./node_modules/uuid/dist/esm-browser/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);\n\n//# sourceURL=webpack://webpuck/./node_modules/uuid/dist/esm-browser/validate.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./client.js");
/******/ 	
/******/ })()
;